[{
  "text": "gs",
  "functions": [{
    "name": "addErrorMessage",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Adds an error message for the current session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemAddErrorMessage_Object",
    "scope": "Scoped"
  },{
    "name": "addInfoMessage",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Adds an info message for the current session. This method is not supported for asynchronous business rules.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemAddInfoMessage_Object",
    "scope": "Scoped"
  },{
    "name": "base64Decode",
    "parameters": [{
      "name": "source",
      "values": []
    }],
    "description": "Returns an ASCII string from the specified base64 string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-base64Decode_S",
    "scope": "Scoped"
  },{
    "name": "base64Encode",
    "parameters": [{
      "name": "source",
      "values": []
    }],
    "description": "Creates a base64 string from the specified string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-base64Encode_S",
    "scope": "Scoped"
  },{
    "name": "beginningOfLastMonth",
    "parameters": [],
    "description": "Returns the date and time for the beginning of last month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfLastMonth",
    "scope": "Scoped"
  },{
    "name": "beginningOfLastWeek",
    "parameters": [],
    "description": "Returns the date and time for the beginning of last week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfLastWeek",
    "scope": "Scoped"
  },{
    "name": "beginningOfNextMonth",
    "parameters": [],
    "description": "Returns the date and time for the beginning of next month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfNextMonth",
    "scope": "Scoped"
  },{
    "name": "beginningOfNextWeek",
    "parameters": [],
    "description": "Returns the date and time for the beginning of next week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemBeginNxtWk",
    "scope": "Scoped"
  },{
    "name": "beginningOfNextYear",
    "parameters": [],
    "description": "Returns the date and time for the beginning of next year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfNextYear",
    "scope": "Scoped"
  },{
    "name": "beginningOfThisMonth",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfThisMonth",
    "scope": "Scoped"
  },{
    "name": "beginningOfThisQuarter",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this quarter in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfThisQuarter",
    "scope": "Scoped"
  },{
    "name": "beginningOfThisWeek",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfThisWeek",
    "scope": "Scoped"
  },{
    "name": "beginningOfThisYear",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-beginningOfThisYear",
    "scope": "Scoped"
  },{
    "name": "dateGenerate",
    "parameters": [{
      "name": "date",
      "values": []
    },{
      "name": "range",
      "values": []
    }],
    "description": "Generates a date and time for the specified date in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-dateGenerate_S_S",
    "scope": "Scoped"
  },{
    "name": "daysAgo",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns the date and time for a specified number of days ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-daysAgo_N",
    "scope": "Scoped"
  },{
    "name": "daysAgoEnd",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns the date and time for the end of the day a specified number of days ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-daysAgoEnd_N",
    "scope": "Scoped"
  },{
    "name": "daysAgoStart",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns the date and time for the beginning of the day a specified number of days ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-daysAgoStart_N",
    "scope": "Scoped"
  },{
    "name": "debug",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "parm3",
      "values": []
    },{
      "name": "parm4",
      "values": []
    },{
      "name": "parm5",
      "values": []
    }],
    "description": "Writes a debug message to the system log.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemDebug_String_Object_Object_Object_Object_Object",
    "scope": "Scoped"
  },{
    "name": "endOfLastMonth",
    "parameters": [],
    "description": "Returns the date and time for the end of last month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfLastMonth",
    "scope": "Scoped"
  },{
    "name": "endOfLastWeek",
    "parameters": [],
    "description": "Returns the date and time for the end of last week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfLastWeek",
    "scope": "Scoped"
  },{
    "name": "endOfLastYear",
    "parameters": [],
    "description": "Returns the date and time for the end of last year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfLastYear",
    "scope": "Scoped"
  },{
    "name": "endOfNextMonth",
    "parameters": [],
    "description": "Returns the date and time for the end of next month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfNextMonth",
    "scope": "Scoped"
  },{
    "name": "endOfNextWeek",
    "parameters": [],
    "description": "Returns the date and time for the end of next week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemEofNW",
    "scope": "Scoped"
  },{
    "name": "endOfNextYear",
    "parameters": [],
    "description": "Returns the date and time for the end of next year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfNextYear",
    "scope": "Scoped"
  },{
    "name": "endOfThisMonth",
    "parameters": [],
    "description": "Returns the date and time for the end of this month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfThisMonth",
    "scope": "Scoped"
  },{
    "name": "endOfThisQuarter",
    "parameters": [],
    "description": "Returns the date and time for the end of this quarter in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfThisQuarter",
    "scope": "Scoped"
  },{
    "name": "endOfThisWeek",
    "parameters": [],
    "description": "Returns the date and time for the end of this week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfThisWeek",
    "scope": "Scoped"
  },{
    "name": "endOfThisYear",
    "parameters": [],
    "description": "Returns the date and time for the end of this year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-endOfThisYear",
    "scope": "Scoped"
  },{
    "name": "error",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "parm3",
      "values": []
    },{
      "name": "parm4",
      "values": []
    },{
      "name": "parm5",
      "values": []
    }],
    "description": "Writes an error message to the system log.\nThis method accepts up to five variable arguments (varargs) in the message using the Java MessageFormat placeholder replacement pattern.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemError_String_Object_Object_Object_Object_Object",
    "scope": "Scoped"
  },{
    "name": "eventQueue",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "instance",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "queue",
      "values": []
    }],
    "description": "Queues an event for the event manager.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemEventQueue_String_Object_String_String_String",
    "scope": "Scoped"
  },{
    "name": "eventQueueScheduled",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "instance",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "expiration",
      "values": []
    }],
    "description": "Queues an event for the event manager at a specified date and time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-eventQSched_S_O_S_S_O",
    "scope": "Scoped"
  },{
    "name": "executeNow",
    "parameters": [{
      "name": "job",
      "values": []
    }],
    "description": "Executes a job for a scoped application.\nYou can only use this method on a job in the same application as the script calling this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-executeNow_GR",
    "scope": "Scoped"
  },{
    "name": "generateGUID",
    "parameters": [],
    "description": "Generates a GUID that can be used when a unique identifier is required.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGenerateGUID",
    "scope": "Scoped"
  },{
    "name": "getCallerScopeName",
    "parameters": [],
    "description": "Gets the caller scope name; returns null if there is no caller.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetCallerScopeName",
    "scope": "Scoped"
  },{
    "name": "getCssCacheVersionString",
    "parameters": [],
    "description": "Gets a string representing the cache version for a CSS file.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetCssCacheVersionString",
    "scope": "Scoped"
  },{
    "name": "getCurrentApplicationId",
    "parameters": [],
    "description": "Gets the ID of the current application as set using the Application Picker.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetCurrentApplicationId",
    "scope": "Scoped"
  },{
    "name": "getCurrentScopeName",
    "parameters": [],
    "description": "Gets the name of the current scope.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetCurrentScopeName",
    "scope": "Scoped"
  },{
    "name": "getErrorMessages",
    "parameters": [],
    "description": "Returns the list of error messages for the session that were added by addErrorMessage().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-getErrorMessages",
    "scope": "Scoped"
  },{
    "name": "getEscapedMessage",
    "parameters": [{
      "name": "id",
      "values": []
    },{
      "name": "args",
      "values": []
    }],
    "description": "Retrieves a message from UI messages that has HTML special characters, and replaces them with escape sequences. For example, & becomes &amp;.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-getEscapedMessage_S_O",
    "scope": "Scoped"
  },{
    "name": "getMessage",
    "parameters": [{
      "name": "id",
      "values": []
    },{
      "name": "args",
      "values": []
    }],
    "description": "Retrieves a message from UI messages.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetMessage_String_Object",
    "scope": "Scoped"
  },{
    "name": "getProperty",
    "parameters": [{
      "name": "key",
      "values": []
    },{
      "name": "alt",
      "values": []
    }],
    "description": "Gets the value of a Glide property. If the property is not found, returns an alternate value.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetProperty_String_Object",
    "scope": "Scoped"
  },{
    "name": "getSession",
    "parameters": [],
    "description": "Gets a reference to the current Glide session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetSession",
    "scope": "Scoped"
  },{
    "name": "getSessionID",
    "parameters": [],
    "description": "Retrieves the GlideSession session ID.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetSessionID",
    "scope": "Scoped"
  },{
    "name": "getSessionToken",
    "parameters": [],
    "description": "This method is no longer available. Instead, use gs.getSession().getSessionToken().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetSessionToken",
    "scope": "Scoped"
  },{
    "name": "getTimeZoneName",
    "parameters": [],
    "description": "Returns the name of the time zone associated with the current user.\nThis method has been deprecated. Instead, use the getTimeZoneName() method in the GlideSession API.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetTimeZoneName",
    "scope": "Scoped"
  },{
    "name": "getUrlOnStack",
    "parameters": [],
    "description": "Gets the current URI for the session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetUrlOnStack",
    "scope": "Scoped"
  },{
    "name": "getUser",
    "parameters": [],
    "description": "Returns a reference to the scoped GlideUser object for the current user.\nSee GlideUser for a list of available methods.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetUser",
    "scope": "Scoped"
  },{
    "name": "getUserDisplayName",
    "parameters": [],
    "description": "Gets the display name of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetUserDisplayName",
    "scope": "Scoped"
  },{
    "name": "getUserID",
    "parameters": [],
    "description": "Gets the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetUserID",
    "scope": "Scoped"
  },{
    "name": "getUserName",
    "parameters": [],
    "description": "Gets the user name, or user id, of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemGetUserName",
    "scope": "Scoped"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Determines if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemHasRole_Object",
    "scope": "Scoped"
  },{
    "name": "hoursAgo",
    "parameters": [{
      "name": "hours",
      "values": []
    }],
    "description": "Returns the date and time for a specified number of hours ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-hoursAgo_N",
    "scope": "Scoped"
  },{
    "name": "hoursAgoEnd",
    "parameters": [{
      "name": "hours",
      "values": []
    }],
    "description": "Returns the date and time for the end of the hour a specified number of hours ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-hoursAgoEnd_N",
    "scope": "Scoped"
  },{
    "name": "hoursAgoStart",
    "parameters": [{
      "name": "hours",
      "values": []
    }],
    "description": "Returns the date and time for the start of the hour a specified number of hours ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-hoursAgoStart_N",
    "scope": "Scoped"
  },{
    "name": "include",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides a safe way to call from the sandbox, allowing only trusted scripts to be included.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemInclude_String",
    "scope": "Scoped"
  },{
    "name": "info",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "parm3",
      "values": []
    },{
      "name": "parm4",
      "values": []
    },{
      "name": "parm5",
      "values": []
    }],
    "description": "Writes an info message to the system log.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemInf_String_Object_Object_Object_Object_Object",
    "scope": "Scoped"
  },{
    "name": "isDebugging",
    "parameters": [],
    "description": "Determines if debugging is active for a specific scope.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemIsDebugging",
    "scope": "Scoped"
  },{
    "name": "isInteractive",
    "parameters": [],
    "description": "Checks if the current session is interactive. An example of an interactive session is when a user logs in normally. An example of a non-interactive session is using a SOAP request to retrieve data.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemIsInteractive",
    "scope": "Scoped"
  },{
    "name": "isLoggedIn",
    "parameters": [],
    "description": "Determines if the current user is currently logged in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemIsLoggedIn",
    "scope": "Scoped"
  },{
    "name": "isMobile",
    "parameters": [],
    "description": "You can determine if a request comes from a mobile device.\nThis method can be used in UI action conditions and business rules.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGS-isMobile",
    "scope": "Scoped"
  },{
    "name": "minutesAgoEnd",
    "parameters": [{
      "name": "minutes",
      "values": []
    }],
    "description": "Returns the date and time for the end of the minute a specified number of minutes ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-minutesAgoEnd_N",
    "scope": "Scoped"
  },{
    "name": "minutesAgoStart",
    "parameters": [{
      "name": "minutes",
      "values": []
    }],
    "description": "Returns the date and time for the start of the minute a specified number of minutes ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-minutesAgoStart_N",
    "scope": "Scoped"
  },{
    "name": "monthsAgo",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Returns the date and time for a specified number of months ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-monthsAgo_N",
    "scope": "Scoped"
  },{
    "name": "monthsAgoStart",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Returns the date and time for the start of the month a specified number of months ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-monthsAgoStart_N",
    "scope": "Scoped"
  },{
    "name": "nil",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Queries an object and returns true if the object is null, undefined, or contains an empty string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemNil_Object",
    "scope": "Scoped"
  },{
    "name": "quartersAgoEnd",
    "parameters": [{
      "name": "quarters",
      "values": []
    }],
    "description": "Returns the date and time for the last day of the quarter for a specified number of quarters ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-quartersAgoEnd_N",
    "scope": "Scoped"
  },{
    "name": "quartersAgoStart",
    "parameters": [{
      "name": "quarters",
      "values": []
    }],
    "description": "Returns the date and time for the first day of the quarter for a specified number of quarters ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-quartersAgoStart_N",
    "scope": "Scoped"
  },{
    "name": "setProperty",
    "parameters": [{
      "name": "key",
      "values": []
    },{
      "name": "value",
      "values": []
    },{
      "name": "description",
      "values": []
    }],
    "description": "Sets the specified key to the specified value if the property is within the script's scope.\nNote: Care should be taken when setting system properties (sys_properties) using this method as it causes a system-wide cache flush. Each flush can cause system degradation while the caches rebuild. If a value must be updated often, it should not be stored as a system property. In general, you should only place values in the sys_properties table that do not frequently change.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-setProperty_S_S_S",
    "scope": "Scoped"
  },{
    "name": "setRedirect",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the redirect URI for this transaction, which then determines the next page the user will see.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemSetRedirect_Object",
    "scope": "Scoped"
  },{
    "name": "tableExists",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Determines if a database table exists.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemTableExists_String",
    "scope": "Scoped"
  },{
    "name": "urlDecode",
    "parameters": [{
      "name": "url",
      "values": []
    }],
    "description": "Replaces UTF-8 encoded characters with ASCII characters.Encodes non-ASCII characters, unsafe ASCII characters, and spaces so the returned string can be used on the Internet. Uses UTF-8 encoding. Uses percent (%) encoding.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-urlDecode_S",
    "scope": "Scoped"
  },{
    "name": "urlEncode",
    "parameters": [{
      "name": "url",
      "values": []
    }],
    "description": "Encodes non-ASCII characters, unsafe ASCII characters, and spaces so the returned string can be used on the Internet. Uses UTF-8 encoding. Uses percent (%) encoding.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-URLEncode_S",
    "scope": "Scoped"
  },{
    "name": "warn",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "parm3",
      "values": []
    },{
      "name": "parm4",
      "values": []
    },{
      "name": "parm5",
      "values": []
    }],
    "description": "Writes a warning message to the system log.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemWarn_String_Object_Object_Object_Object_Object",
    "scope": "Scoped"
  },{
    "name": "xmlToJSON",
    "parameters": [{
      "name": "xmlString",
      "values": []
    }],
    "description": "Takes an XML string and returns a JSON object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSYS-xmlToJSON_S",
    "scope": "Scoped"
  },{
    "name": "yearsAgo",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Returns a date and time for a certain number of years ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSystemYearsAgo_N",
    "scope": "Scoped"
  },{
    "name": "yesterday",
    "parameters": [],
    "description": "Returns yesterday's time (24 hours ago).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGSYS-yesterday",
    "scope": "Scoped"
  },{
    "name": "addErrorMessage",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Adds an error message for the current session.\nUse getErrorMessages() to retrieve a list of error messages currently being shown.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-addErrorMessage_O",
    "scope": "Legacy"
  },{
    "name": "addInfoMessage",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Adds an info message for the current session.\nUse getInfoMessages() to retrieve the list of info messages being shown. This method is not supported for asynchronous business rules and cannot be used within transform scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-addInfoMessage_O",
    "scope": "Legacy"
  },{
    "name": "addMessage",
    "parameters": [{
      "name": "type",
      "values": []
    },{
      "name": "message",
      "values": []
    }],
    "description": "Adds a message for the current session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-addMessage_S_O",
    "scope": "Legacy"
  },{
    "name": "beginningOfLastMonth",
    "parameters": [],
    "description": "Gets the date and time for the beginning of last month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfLastMonth",
    "scope": "Legacy"
  },{
    "name": "beginningOfLastWeek",
    "parameters": [],
    "description": "Returns the date and time for the beginning of last week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfLastWeek",
    "scope": "Legacy"
  },{
    "name": "beginningOfNextMonth",
    "parameters": [],
    "description": "Returns the date and time for the beginning of next month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfNextMonth",
    "scope": "Legacy"
  },{
    "name": "beginningOfNextWeek",
    "parameters": [],
    "description": "Gets the date and time for the beginning of next week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfNextWeek",
    "scope": "Legacy"
  },{
    "name": "beginningOfNextYear",
    "parameters": [],
    "description": "Returns the date and time for the beginning of next year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfNextYear",
    "scope": "Legacy"
  },{
    "name": "beginningOfThisMonth",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfThisMonth",
    "scope": "Legacy"
  },{
    "name": "beginningOfThisQuarter",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this quarter in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfThisQuarter",
    "scope": "Legacy"
  },{
    "name": "beginningOfThisWeek",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfThisWeek",
    "scope": "Legacy"
  },{
    "name": "beginningOfThisYear",
    "parameters": [],
    "description": "Returns the date and time for the beginning of this year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfThisYear",
    "scope": "Legacy"
  },{
    "name": "beginningOfToday",
    "parameters": [],
    "description": "Retrieves the date and time for the beginning of today in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfToday",
    "scope": "Legacy"
  },{
    "name": "beginningOfTomorrow",
    "parameters": [],
    "description": "Retrieves the (UTC) beginning of tomorrow adjusted for the timezone of the current session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfTomorrow",
    "scope": "Legacy"
  },{
    "name": "beginningOfYesterday",
    "parameters": [],
    "description": "Retrieves the date and time for the beginning of yesterday in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-beginningOfYesterday",
    "scope": "Legacy"
  },{
    "name": "calDateDiff",
    "parameters": [{
      "name": "startDate",
      "values": []
    },{
      "name": "endDate",
      "values": []
    },{
      "name": "numericValue",
      "values": []
    }],
    "description": "Calculate the difference between two dates using the default calendar.\nCalendars are now legacy. If Schedules are being used, see the topic Calculate Duration Given a Schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-calDateDiff_S_S_B",
    "scope": "Legacy"
  },{
    "name": "dateDiff",
    "parameters": [{
      "name": "startDate",
      "values": []
    },{
      "name": "endDate",
      "values": []
    },{
      "name": "numericValue",
      "values": []
    }],
    "description": "Calculates the difference between two dates.\nThis method expects the earlier date as the first parameter and the later date as the second parameter; otherwise, the method returns the difference as a negative value. Use getDisplayValue() to convert the strings to the expected format.\nThis method expects parameters in the user/system date time format, which may not be the same as the internal format. Using parameters in formats other than the user/system date time format may return invalid results.\nIf you are working with GlideDateTime objects use the GlideDateTime subtract() method instead of dateDiff().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-dateDiff_S_S_B",
    "scope": "Legacy"
  },{
    "name": "dateGenerate",
    "parameters": [{
      "name": "date",
      "values": []
    },{
      "name": "range",
      "values": []
    }],
    "description": "Generates a date and time for the specified date in GMT.\nTo use the dateGenerate() method in a scoped application, use the corresponding scoped method: dateGenerate().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-dateGenerate_S_S",
    "scope": "Legacy"
  },{
    "name": "daysAgo",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns a date and time for a certain number of days ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-daysAgo_N",
    "scope": "Legacy"
  },{
    "name": "daysAgoEnd",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns a date and time for the end of the day a specified number of days ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-daysAgoEnd_N",
    "scope": "Legacy"
  },{
    "name": "daysAgoLocal",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns the date and time of the beginning of the day for the specified number of days ago. The returned date and time reflect the time zone of the current session (local time).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GS-daysAgoLocal_N",
    "scope": "Legacy"
  },{
    "name": "daysAgoStart",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Returns a date and time for the beginning of the day a specified number of days ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-daysAgoStart_N",
    "scope": "Legacy"
  },{
    "name": "endOfLastMonth",
    "parameters": [],
    "description": "Returns the date and time for the end of last month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfLastMonth",
    "scope": "Legacy"
  },{
    "name": "endOfLastWeek",
    "parameters": [],
    "description": "Returns the date and time for the end of last week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfLastWeek",
    "scope": "Legacy"
  },{
    "name": "endOfLastYear",
    "parameters": [],
    "description": "Returns the date and time for the end of last year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=rGS-endOfLastYear",
    "scope": "Legacy"
  },{
    "name": "endOfNextMonth",
    "parameters": [],
    "description": "Returns the date and time for the end of next month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfNextMonth",
    "scope": "Legacy"
  },{
    "name": "endOfNextWeek",
    "parameters": [],
    "description": "Gets the date and time for the end of next week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfNextWeek",
    "scope": "Legacy"
  },{
    "name": "endOfNextYear",
    "parameters": [],
    "description": "Returns the date and time for the end of next year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfNextYear",
    "scope": "Legacy"
  },{
    "name": "endOfThisMonth",
    "parameters": [],
    "description": "Returns the date and time for the end of this month in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfThisMonth",
    "scope": "Legacy"
  },{
    "name": "endOfThisQuarter",
    "parameters": [],
    "description": "Returns the date and time for the end of this quarter in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfThisQuarter",
    "scope": "Legacy"
  },{
    "name": "endOfThisWeek",
    "parameters": [],
    "description": "Returns the date and time for the end of this week in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfThisWeek",
    "scope": "Legacy"
  },{
    "name": "endOfThisYear",
    "parameters": [],
    "description": "Returns the date and time for the end of this year in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfThisYear",
    "scope": "Legacy"
  },{
    "name": "endOfToday",
    "parameters": [],
    "description": "Retrieves the date and time for the end of today in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfToday",
    "scope": "Legacy"
  },{
    "name": "endOfTomorrow",
    "parameters": [],
    "description": "Retrieves the date and time for the end of tomorrow in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfTomorrow",
    "scope": "Legacy"
  },{
    "name": "endOfYesterday",
    "parameters": [],
    "description": "Gets the date and time for the end of yesterday in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-endOfYesterday",
    "scope": "Legacy"
  },{
    "name": "eventQueue",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "glideRecord",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "queue",
      "values": []
    }],
    "description": "Queues an event for the event manager.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-eventQueue_S_O_S_S_S",
    "scope": "Legacy"
  },{
    "name": "eventQueueScheduled",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "glideRecord",
      "values": []
    },{
      "name": "parm1",
      "values": []
    },{
      "name": "parm2",
      "values": []
    },{
      "name": "expiration",
      "values": []
    }],
    "description": "Queues an event for the event manager at a specified date and time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GS-eventQueueScheduled_S_O_S_S_O",
    "scope": "Legacy"
  },{
    "name": "flushMessages",
    "parameters": [],
    "description": "Clears session messages saved using addErrorMessage() or addInfoMessage().\nSession messages are shown at the top of the form. In client side scripts, use g_form.clearMessages() to remove session messages.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-flushMessages",
    "scope": "Legacy"
  },{
    "name": "getAvatar",
    "parameters": [],
    "description": "Returns the file path to the user's avatar.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSystemGetAvatar",
    "scope": "Legacy"
  },{
    "name": "getCurrentScopeName",
    "parameters": [],
    "description": "Gets the name of the current scope.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getCurrentScopeName",
    "scope": "Legacy"
  },{
    "name": "getDisplayColumn",
    "parameters": [{
      "name": "tableName",
      "values": []
    }],
    "description": "Retrieves the display column for the table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getDisplayColumn_S",
    "scope": "Legacy"
  },{
    "name": "getDisplayValueFor",
    "parameters": [{
      "name": "tableName",
      "values": []
    },{
      "name": "recordID",
      "values": []
    },{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the display value for a specified field on a record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getDisplayValueFor_S_S_S",
    "scope": "Legacy"
  },{
    "name": "getErrorMessages",
    "parameters": [],
    "description": "Returns the list of error messages for the session that were added by addErrorMessage().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getErrorMessages",
    "scope": "Legacy"
  },{
    "name": "getEscapedProperty",
    "parameters": [{
      "name": "key",
      "values": []
    },{
      "name": "substituteObject",
      "values": []
    }],
    "description": "Retrieves the property and escapes it for XML parsing.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getEscapedProperty_S_O",
    "scope": "Legacy"
  },{
    "name": "getImpersonatingUserDisplayName",
    "parameters": [],
    "description": "Returns the display name of the impersonating user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getImpersonatingUserDispName",
    "scope": "Legacy"
  },{
    "name": "getImpersonatingUserName",
    "parameters": [],
    "description": "Returns the name of the impersonating user or null if not impersonating.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getImpersonatingUserName",
    "scope": "Legacy"
  },{
    "name": "getInfoMessages",
    "parameters": [],
    "description": "Retrieves the list of info messages for the session that were added by addInfoMessage().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getInfoMessages",
    "scope": "Legacy"
  },{
    "name": "getInitials",
    "parameters": [],
    "description": "Returns the user's initials.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSystemGetInitials",
    "scope": "Legacy"
  },{
    "name": "getMessage",
    "parameters": [{
      "name": "messageID",
      "values": []
    },{
      "name": "args",
      "values": []
    }],
    "description": "Retrieves translated messages to display in the UI.\nIf the specified string exists in the database for the current language, then the translated message is returned. If the specified string does not exist for the current language, then the English version of the string is returned. If the string does not exist at all in the database, then the ID itself is returned.\nIf the UI message has a tick ('), there may be issues with the message in the script; to escape the ticks ('), use getMessageS(String, Object).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getMessage_S_O",
    "scope": "Legacy"
  },{
    "name": "getMessageS",
    "parameters": [{
      "name": "messageID",
      "values": []
    },{
      "name": "args",
      "values": []
    }],
    "description": "Retrieves translated messages to display in the UI and escapes all ticks (').\nIf the specified string exists in the database for the current language, then the translated message is returned. If the specified string does not exist for the current language, then the English version of the string is returned. If the string does not exist at all in the database, then the ID itself is returned. Useful if you are inserting into a JavaScript expression from Jelly.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getMessageS_S_O",
    "scope": "Legacy"
  },{
    "name": "getMessages",
    "parameters": [{
      "name": "type",
      "values": []
    }],
    "description": "Returns the list of messages of the specified type for the session that were added by addMessage().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getMessages_S",
    "scope": "Legacy"
  },{
    "name": "getNodeName",
    "parameters": [{
      "name": "obj",
      "values": []
    },{
      "name": "index",
      "values": []
    }],
    "description": "Returns the node name for specified index.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getNodeName_O_N",
    "scope": "Legacy"
  },{
    "name": "getNodeValue",
    "parameters": [{
      "name": "obj",
      "values": []
    },{
      "name": "index",
      "values": []
    }],
    "description": "Returns the node value for specified index.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getNodeValue_O_N",
    "scope": "Legacy"
  },{
    "name": "getPreference",
    "parameters": [{
      "name": "key",
      "values": []
    },{
      "name": "default",
      "values": []
    }],
    "description": "Returns a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getPreference_S_O",
    "scope": "Legacy"
  },{
    "name": "getProperty",
    "parameters": [{
      "name": "key",
      "values": []
    },{
      "name": "alt",
      "values": []
    }],
    "description": "Gets the value of a Glide property. If the property is not found, returns the alternate value.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getProperty_S_O",
    "scope": "Legacy"
  },{
    "name": "getScriptError",
    "parameters": [{
      "name": "script",
      "values": []
    }],
    "description": "Returns the script error found in the specified script, if there is one.\nThe script is not executed by this function, only checked for syntax errors.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getScriptError_S",
    "scope": "Legacy"
  },{
    "name": "getSession",
    "parameters": [],
    "description": "Returns a GlideSession object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getSession",
    "scope": "Legacy"
  },{
    "name": "getSessionID",
    "parameters": [],
    "description": "Returns the GlideSession Session ID.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getSessionID",
    "scope": "Legacy"
  },{
    "name": "getStyle",
    "parameters": [{
      "name": "tableName",
      "values": []
    },{
      "name": "fieldName",
      "values": []
    },{
      "name": "fieldValue",
      "values": []
    }],
    "description": "Returns the style defined for the table, field and value.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getStyle_S_S_S",
    "scope": "Legacy"
  },{
    "name": "getTrivialMessages",
    "parameters": [],
    "description": "Returns the list of error messages for the session that were added with the trivial flag.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getTrivialMessages",
    "scope": "Legacy"
  },{
    "name": "getUser",
    "parameters": [],
    "description": "Returns a reference to the user object for the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getUser",
    "scope": "Legacy"
  },{
    "name": "getUserDisplayName",
    "parameters": [],
    "description": "Returns the name field of the current user (e.g. John Smith, as opposed to smith).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getUserDisplayName",
    "scope": "Legacy"
  },{
    "name": "getUserID",
    "parameters": [],
    "description": "Returns the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getUserID",
    "scope": "Legacy"
  },{
    "name": "getUserName",
    "parameters": [],
    "description": "Returns the username of the current user (e.g., jsmith).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getUserName",
    "scope": "Legacy"
  },{
    "name": "getUserNameByUserID",
    "parameters": [{
      "name": "sys_id",
      "values": []
    }],
    "description": "Returns the username based on a user ID.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getUserNameByUserID_S",
    "scope": "Legacy"
  },{
    "name": "getXMLNodeList",
    "parameters": [{
      "name": "xml",
      "values": []
    }],
    "description": "Constructs an Array of all the nodes and values in an XML document.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getXMLNodeList_S",
    "scope": "Legacy"
  },{
    "name": "getXMLText",
    "parameters": [{
      "name": "xml",
      "values": []
    },{
      "name": "xpathQuery",
      "values": []
    }],
    "description": "Returns the XML text for the first node in the XML string that matches the XPath query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-getXMLText_S_S",
    "scope": "Legacy"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "roleName",
      "values": []
    }],
    "description": "Determines if the current user has at least one of the passed-in roles.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-hasRole_S",
    "scope": "Legacy"
  },{
    "name": "hasRoleInGroup",
    "parameters": [{
      "name": "roleName",
      "values": []
    },{
      "name": "group",
      "values": []
    }],
    "description": "Determines if the current user has the specified role within a specified group.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-hasRoleInGroup_O_O",
    "scope": "Legacy"
  },{
    "name": "hoursAgo",
    "parameters": [{
      "name": "hours",
      "values": []
    }],
    "description": "Returns a date and time for a certain number of hours ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-hoursAgo_N",
    "scope": "Legacy"
  },{
    "name": "hoursAgoEnd",
    "parameters": [{
      "name": "hours",
      "values": []
    }],
    "description": "Returns a date and time for the end of the hour a certain number of hours ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-hoursAgoEnd_N",
    "scope": "Legacy"
  },{
    "name": "hoursAgoStart",
    "parameters": [{
      "name": "hours",
      "values": []
    }],
    "description": "Returns a date and time for the start of the hour a certain number of hours ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-hoursAgoStart_N",
    "scope": "Legacy"
  },{
    "name": "isFirstDayOfMonth",
    "parameters": [{
      "name": "date",
      "values": []
    }],
    "description": "Checks whether the date is the first day of the month.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isFirstDayOfMonth_O",
    "scope": "Legacy"
  },{
    "name": "isFirstDayOfWeek",
    "parameters": [{
      "name": "date",
      "values": []
    }],
    "description": "Checks whether the date is the first day of the week. This uses the ISO standard of Monday being the first day of the week.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isFirstDayOfWeek_O",
    "scope": "Legacy"
  },{
    "name": "isFirstDayOfYear",
    "parameters": [{
      "name": "date",
      "values": []
    }],
    "description": "Checks whether the date is the first day of the year.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isFirstDayOfYear_O",
    "scope": "Legacy"
  },{
    "name": "isInteractive",
    "parameters": [],
    "description": "Checks if the current session is interactive.\nAn example of an interactive session is when a user logs in using the log-in screen. An example of a non-interactive session is using a SOAP request to retrieve data.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isInteractive",
    "scope": "Legacy"
  },{
    "name": "isLastDayofMonth",
    "parameters": [{
      "name": "date",
      "values": []
    }],
    "description": "Checks whether the date is the last day of the month.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isLastDayofMonth_O",
    "scope": "Legacy"
  },{
    "name": "isLastDayOfWeek",
    "parameters": [{
      "name": "date",
      "values": []
    }],
    "description": "Checks whether the date is the last day of the week.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isLastDayOfWeek_O",
    "scope": "Legacy"
  },{
    "name": "isLastDayOfYear",
    "parameters": [{
      "name": "date",
      "values": []
    }],
    "description": "Checks whether the date is the last day of the year.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isLastDayOfYear_O",
    "scope": "Legacy"
  },{
    "name": "isLoggedIn",
    "parameters": [],
    "description": "Determines if the current user is currently logged in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-isLoggedIn",
    "scope": "Legacy"
  },{
    "name": "isMobile",
    "parameters": [],
    "description": "Determines whether a request comes from a mobile device.\nThis method can be used in UI action conditions and business rules.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GSSN-isMobile",
    "scope": "Legacy"
  },{
    "name": "lastWeek",
    "parameters": [],
    "description": "Returns the date and time one week ago in GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-lastWeek",
    "scope": "Legacy"
  },{
    "name": "log",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "source",
      "values": []
    }],
    "description": "Logs a message to the system log and saves it to the syslog table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-log_S_S",
    "scope": "Legacy"
  },{
    "name": "logError",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "source",
      "values": []
    }],
    "description": "Logs an error to the system log and saves it to the syslog table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-logError_S_S",
    "scope": "Legacy"
  },{
    "name": "logWarning",
    "parameters": [{
      "name": "message",
      "values": []
    },{
      "name": "source",
      "values": []
    }],
    "description": "Logs a warning to the system log and saves it to the syslog table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-logWarning_S_S",
    "scope": "Legacy"
  },{
    "name": "minutesAgo",
    "parameters": [{
      "name": "minutes",
      "values": []
    }],
    "description": "Returns a date and time for a certain number of minutes ago",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-minutesAgo_N",
    "scope": "Legacy"
  },{
    "name": "minutesAgoEnd",
    "parameters": [{
      "name": "minutes",
      "values": []
    }],
    "description": "Returns a date and time for the end of the minute a certain number of minutes ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-minutesAgoEnd_N",
    "scope": "Legacy"
  },{
    "name": "minutesAgoStart",
    "parameters": [{
      "name": "minutes",
      "values": []
    }],
    "description": "Returns a date and time for the start of the minute a certain number of minutes ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-minutesAgoStart_N",
    "scope": "Legacy"
  },{
    "name": "monthsAgo",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Returns a date and time for a certain number of months ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-monthsAgo_N",
    "scope": "Legacy"
  },{
    "name": "monthsAgoEnd",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Returns a date and time for the last day of the month a certain number of months ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-monthsAgoEnd_N",
    "scope": "Legacy"
  },{
    "name": "monthsAgoStart",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Returns a date and time for the start of the month a certain number of months ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-monthsAgoStart_N",
    "scope": "Legacy"
  },{
    "name": "nil",
    "parameters": [{
      "name": "obj",
      "values": []
    }],
    "description": "Queries an object and returns true if the object is null or contains an empty string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-nil_O",
    "scope": "Legacy"
  },{
    "name": "now",
    "parameters": [],
    "description": "Returns the current date in UTC.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-now",
    "scope": "Legacy"
  },{
    "name": "nowDateTime",
    "parameters": [],
    "description": "Gets the current date and time in the user-defined format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-nowDateTime",
    "scope": "Legacy"
  },{
    "name": "nowGlideDateTime",
    "parameters": [],
    "description": "Gets a GlideDateTime object with the current date and time.\nAfter you get a GlideDateTime object with the current date and time, you can use the GlideDateTime methods to perform date-time operations, such as performing date-time calculations, formatting a date-time, or converting between date-time formats.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-nowGlideDateTime",
    "scope": "Legacy"
  },{
    "name": "nowNoTZ",
    "parameters": [],
    "description": "Returns the current date and time in UTC format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-nowNoTZ",
    "scope": "Legacy"
  },{
    "name": "print",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Writes a message to the system log.\nThis method does not write the message to the syslog table unless debug has been activated.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-print_S",
    "scope": "Legacy"
  },{
    "name": "quartersAgo",
    "parameters": [{
      "name": "quarters",
      "values": []
    }],
    "description": "Returns a date and time for a certain number of quarters ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-quartersAgo_N",
    "scope": "Legacy"
  },{
    "name": "quartersAgoEnd",
    "parameters": [{
      "name": "quarters",
      "values": []
    }],
    "description": "Returns a date and time for the last day of the quarter, for a specified number of quarters ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-quartersAgoEnd_N",
    "scope": "Legacy"
  },{
    "name": "quartersAgoStart",
    "parameters": [{
      "name": "quarters",
      "values": []
    }],
    "description": "Returns a date and time for the first day of the quarter, for a specified number of quarters ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-quartersAgoStart_N",
    "scope": "Legacy"
  },{
    "name": "setProperty",
    "parameters": [{
      "name": "key",
      "values": []
    },{
      "name": "value",
      "values": []
    },{
      "name": "description",
      "values": []
    }],
    "description": "Sets the specified key to the specified value.\nNote: Care should be taken when setting system properties (sys_properties) using this method as it causes a system-wide cache flush. Each flush can cause system degradation while the caches rebuild. If a value must be updated often, it should not be stored as a system property. In general, you should only place values in the sys_properties table that do not frequently change.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS_setProperty_S_S_S",
    "scope": "Legacy"
  },{
    "name": "setRedirect",
    "parameters": [{
      "name": "URI",
      "values": []
    }],
    "description": "Sets the redirect URI for this transaction, which then determines the next page the user will see.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-setRedirect_O",
    "scope": "Legacy"
  },{
    "name": "setReturn",
    "parameters": [{
      "name": "URI",
      "values": []
    }],
    "description": "Sets the return URI for this transaction. This determines what page the user will be directed to when they return from the next form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-setReturn_O",
    "scope": "Legacy"
  },{
    "name": "tableExists",
    "parameters": [{
      "name": "tableName",
      "values": []
    }],
    "description": "Determines if a database table exists.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-tableExists_S",
    "scope": "Legacy"
  },{
    "name": "userID",
    "parameters": [],
    "description": "Returns the sys_id of the user associated with this session. Use getUserID() instead.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-userID",
    "scope": "Legacy"
  },{
    "name": "workflowFlush",
    "parameters": [{
      "name": "glideRecord",
      "values": []
    }],
    "description": "Deletes all existing workflow operations for the specified GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-workflowFlush_O",
    "scope": "Legacy"
  },{
    "name": "yearsAgo",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Gets a date and time for a certain number of years ago.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-yearsAgo_N",
    "scope": "Legacy"
  },{
    "name": "yesterday",
    "parameters": [],
    "description": "Returns yesterday's time (24 hours ago).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GS-yesterday",
    "scope": "Legacy"
  }]
}, {
  "text": "g_user",
  "properties": [{
    "name": "firstName",
    "description": "Returns the current user's first name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUserFirstName",
    "scope": "Client"
  }, {
    "name": "lastName",
    "description": "The current user's last name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUserLastName",
    "scope": "Client"
  }, {
    "name": "userID",
    "description": "Returns the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUserUserID",
    "scope": "Client"
  }, {
    "name": "userName",
    "description": "This property is the current user's username, for example gsmith02. It is not the user's name, for example George Smith.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUserUserName",
    "scope": "Client"
  }],
  "functions": [{
    "name": "getClientData",
    "parameters": [{
      "name": "key",
      "values": []
    }],
    "description": "Returns a session client value previously set with putClientData(). Session client data is a set of named strings that may be setup on the server (using putClientData()) that then may be used by client scripts (using getClientData()). Can be used during form load time to get information that the client script needs to make decisions about the form, for example, which fields should be visible.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-getClientData_string",
    "scope": "Client"
  }, {
    "name": "getFullName",
    "parameters": [],
    "description": "Returns the first and last name of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-getFullName",
    "scope": "Client"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Returns true if the current user has the specified role or the admin role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRole_String",
    "scope": "Client"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    },{
      "name": "includeDefaults",
      "values": []
    }],
    "description": "Returns true if the current user has the specified role or the admin role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRole_String",
    "scope": "Client"
  },{
    "name": "hasRoleExactly",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Returns true only if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRoleExactly_String",
    "scope": "Client"
  },{
    "name": "hasRoleExactly",
    "parameters": [{
      "name": "role",
      "values": []
    },{
      "name": "includeDefaults",
      "values": []
    }],
    "description": "Returns true only if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRoleExactly_String",
    "scope": "Client"
  },{
    "name": "hasRoleFromList",
    "parameters": [{
      "name": "roles",
      "values": []
    }],
    "description": "Returns true if the current user has at least one of the specified roles or has the admin role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRoleFromList_String",
    "scope": "Client"
  },{
    "name": "hasRoleFromList",
    "parameters": [{
      "name": "roles",
      "values": []
    },{
      "name": "includeDefaults",
      "values": []
    }],
    "description": "Returns true if the current user has at least one of the specified roles or has the admin role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRoleFromList_String",
    "scope": "Client"
  },{
    "name": "hasRoles",
    "parameters": [],
    "description": "Returns true if the current user has any role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRoles",
    "scope": "Client"
  },{
    "name": "hasRoles",
    "parameters": [{
      "name": "includeDefaults",
      "values": []
    }],
    "description": "Returns true if the current user has any role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideUser-hasRoles",
    "scope": "Client"
  }]
}, {
  "text": "g_form",
  "functions": [{
    "name": "addDecoration",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }, {
      "name": "icon",
      "values": []
    }, {
      "name": "title",
      "values": []
    }],
    "description": "Adds an icon on a field’s label. Adding the same item twice is prevented; however, you can add the same icon with a different title. Note: This method is not supported by Service Catalog.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormAddDecoration_String_String_String",
    "scope": "Client"
  },{
    "name": "addDecoration",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }, {
      "name": "icon",
      "values": []
    }, {
      "name": "title",
      "values": []
    }, {
      "name": "color",
      "values": []
    }],
    "description": "Adds an icon on a field’s label. Adding the same item twice is prevented; however, you can add the same icon with a different title. Note: This method is not supported by Service Catalog.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormAddDecoration_String_String_String_String",
    "scope": "Client"
  },{
    "name": "addErrorMessage",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Displays the error message at the top of the form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormAddErrorMessage_String",
    "scope": "Client"
  },{
    "name": "addInfoMessage",
    "parameters": [{
      "name": "message",
      "values": []
    }],
    "description": "Adds an informational message to the top of the form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormAddInfoMessage_String",
    "scope": "Client"
  },{
    "name": "addOption",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "choiceValue",
      "values": []
    },{
      "name": "choiceLabel",
      "values": []
    }],
    "description": "Adds a choice to the end of a choice list field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideformAddOption_String_String_String",
    "scope": "Client"
  },{
    "name": "addOption",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "choiceValue",
      "values": []
    },{
      "name": "choiceLabel",
      "values": []
    },{
      "name": "choiceIndex",
      "values": []
    }],
    "description": "Adds a choice to the choice list field at the position specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormAddOption_String_String_String_Number",
    "scope": "Client"
  },{
    "name": "clearMessages",
    "parameters": [],
    "description": "Removes all informational and error messages from the top of the form. Removes informational and error messages added with g_form.addInfoMessage() and g_form.addErrorMessage().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormClearMessages",
    "scope": "Client"
  },{
    "name": "clearOptions",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Removes all options from the choice list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormClearOptions_String",
    "scope": "Client"
  },{
    "name": "clearValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Removes any value(s) from the field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormClearValue_String",
    "scope": "Client"
  },{
    "name": "disableAttachments",
    "parameters": [],
    "description": "Prevents file attachments from being added. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormDisableAttachments",
    "scope": "Client"
  },{
    "name": "enableAttachments",
    "parameters": [],
    "description": "Allows file attachments to be added. Shows the paper clip icon. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormEnableAttachments",
    "scope": "Client"
  },{
    "name": "flash",
    "parameters": [{
      "name": "widgetName",
      "values": []
    },{
      "name": "color",
      "values": []
    },{
      "name": "count",
      "values": []
    }],
    "description": "Used to draw attention to a particular field. Flashes the specified color the specified number of times in the specified field. This method is not supported by Service Catalog. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormFlash_String_String_Number",
    "scope": "Client"
  },{
    "name": "getActionName",
    "parameters": [],
    "description": "Returns the most recent action name, or, for a client script, the sys_id of the UI action clicked. Note: Not available in Wizard client scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetActionName",
    "scope": "Client"
  },{
    "name": "getBooleanValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns a Boolean value for the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetBooleanValue_String",
    "scope": "Client"
  },{
    "name": "getControl",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the HTML element for the specified field. Compound fields may contain several HTML elements. This method is generally not necessary as there are built-in methods that use the fields on a form. If the field is a reference field and the control is a choice list, getControl() may not return a control as expected. In this case, use sys_select.<table name>.<field name>. This method is not available in mobile scripts or Service Portal scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetControl_String",
    "scope": "Client"
  },{
    "name": "getDecimalValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the decimal value of the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetDecimalValue_String",
    "scope": "Client"
  },{
    "name": "getElement",
    "parameters": [{
      "name": "id",
      "values": []
    }],
    "description": "Returns the HTML element specified by the parameter. Compound fields may contain several HTML elements. This method is generally not necessary as there are built-in methods that use the fields on a form. This method is not available in mobile scripts or Service Portal scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetElement_String",
    "scope": "Client"
  },{
    "name": "getFormElement",
    "parameters": [],
    "description": "Returns the HTML element for the form. This method is not available in mobile scripts or Service Portal scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetFormElement",
    "scope": "Client"
  },{
    "name": "getHelpTextControl",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the HTML element of the help text for the specified field. This method is applicable to service catalog variables only.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GF-getHelpTextControl_S",
    "scope": "Client"
  },{
    "name": "getIntValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the integer value of the field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetIntValue_String",
    "scope": "Client"
  },{
    "name": "getLabelOf",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the plain text value of the field label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetLabelOf_String",
    "scope": "Client"
  },{
    "name": "getOption",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "choiceValue",
      "values": []
    }],
    "description": "Returns the option element for a selected box named fieldName where choiceValue matches the option value.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetOption_String_String",
    "scope": "Client"
  },{
    "name": "getReference",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "callBack",
      "values": []
    }],
    "description": "Returns the GlideRecord for a specified field. If a callback function is present, this routine runs asynchronously. The browser (and script) processing continues normally until the server returns the reference value, at which time, the callback function is invoked. If a callback function is not present, this routine runs synchronously and processing halts (causing the browser to appear to hang) while waiting on a server response. Callback function support for ServiceCatalogForm.getReference is available.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetReference_String_Function",
    "scope": "Client"
  },{
    "name": "getRelatedListNames",
    "parameters": [],
    "description": "Returns an array of related lists from the current form in the order in which they appear on that form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GF-getRelatedListNames",
    "scope": "Client"
  },{
    "name": "getSectionNames",
    "parameters": [],
    "description": "Returns all section names, whether visible or not.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetSectionNames",
    "scope": "Client"
  },{
    "name": "getSections",
    "parameters": [],
    "description": "Returns an array of the form's sections. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetSections",
    "scope": "Client"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Returns the name of the table to which this record belongs. On the server side, the table for the current record can be retrieved with current.sys_class_name or current.getTableName().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetTableName",
    "scope": "Client"
  },{
    "name": "getUniqueValue",
    "parameters": [],
    "description": "Returns the sys_id of the record displayed in the form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetUniqueValue",
    "scope": "Client"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the value of the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormGetValue_String",
    "scope": "Client"
  },{
    "name": "hideAllFieldMsgs",
    "parameters": [],
    "description": "Hides all field messages.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideAllFieldMsgs",
    "scope": "Client"
  },{
    "name": "hideAllFieldMsgs",
    "parameters": [{
      "name": "type",
      "values": []
    }],
    "description": "Hides all field messages of the specified type.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideAllFieldMsgs_String",
    "scope": "Client"
  },{
    "name": "hideErrorBox",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Hides the error message placed by showErrorBox(). Whenever possible, use hideFieldMsg() rather than this method whenever possible.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideErrorBox_String",
    "scope": "Client"
  },{
    "name": "hideFieldMsg",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Hides the last message placed by showFieldMsg().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideFieldMsg_String",
    "scope": "Client"
  },{
    "name": "hideFieldMsg",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "clearAll",
      "values": []
    }],
    "description": "Hides the messages placed by showFieldMsg().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideFieldMsg_String_Boolean",
    "scope": "Client"
  },{
    "name": "hideRelatedList",
    "parameters": [{
      "name": "listTableName",
      "values": []
    }],
    "description": "Hides the specified related list on the form. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideRelatedList_String",
    "scope": "Client"
  },{
    "name": "hideRelatedLists",
    "parameters": [],
    "description": "Hides all related lists on the form. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormHideRelatedLists",
    "scope": "Client"
  },{
    "name": "isLiveUpdating",
    "parameters": [],
    "description": "Returns true while a live update is being done on the record the form is showing. This can be used in an onChange() client script to determine if a change to the record is because of a live update from another session. The client script can then decide what action to take, or not to take. This applies to systems using UI16 with live forms enabled.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GF-isLiveUpdating",
    "scope": "Client"
  },{
    "name": "isMandatory",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns true if the field is mandatory.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormIsMandatory_String",
    "scope": "Client"
  },{
    "name": "isNewRecord",
    "parameters": [],
    "description": "Returns true if the record has never been saved.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormIsNewRecord",
    "scope": "Client"
  },{
    "name": "isSectionVisible",
    "parameters": [{
      "name": "sectionName",
      "values": []
    }],
    "description": "Returns true if the section is visible.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormIsSectionVisible_String",
    "scope": "Client"
  },{
    "name": "onUserChangeValue",
    "parameters": [{
      "name": "fn",
      "values": []
    }],
    "description": "Registers a custom event listener that detects when any field in the current form is modified by a user.\nWhen a form field is modified, the event listener calls the function that is passed in when the listener is initially registered. This listener is only triggered when a user makes a change to a field on the form. Changes from client scripts, UI policies, or any other non-user interactions, do not trigger the listener.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GF-onUserChangeValue_F",
    "scope": "Client"
  },{
    "name": "refreshSlushbucket",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "You can update a list collector variable.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GF-refreshSlushbucket_S",
    "scope": "Client"
  },{
    "name": "removeDecoration",
    "parameters": [{
      "name": "fieldname",
      "values": []
    },{
      "name": "icon",
      "values": []
    },{
      "name": "title",
      "values": []
    }],
    "description": "Removes the icon from the specified field that matches the icon and title. Note: This method is not supported by Service Catalog.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormRemoveDecoration_String_String_String",
    "scope": "Client"
  },{
    "name": "removeDecoration",
    "parameters": [{
      "name": "fieldname",
      "values": []
    },{
      "name": "icon",
      "values": []
    },{
      "name": "title",
      "values": []
    },{
      "name": "color",
      "values": []
    }],
    "description": "Removes the icon from the specified field that matches the icon, title, and color. Note: This method is not supported by Service Catalog.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormRemoveDecoration_String_String_String_String",
    "scope": "Client"
  },{
    "name": "removeOption",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "choiceValue",
      "values": []
    }],
    "description": "Removes the specified option from the choice list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormRemoveOption_String_String",
    "scope": "Client"
  },{
    "name": "save",
    "parameters": [],
    "description": "Saves the record without navigating away (update and stay).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSave",
    "scope": "Client"
  },{
    "name": "setDisabled",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "disable",
      "values": []
    }],
    "description": "Makes the specified field available or unavailable.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetDisabled_String_Boolean",
    "scope": "Client"
  },{
    "name": "setDisplay",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "display",
      "values": []
    }],
    "description": "Displays or hides a field. This method cannot hide a mandatory field with no value. If the field is hidden, the space is used to display other items. Whenever possible, use a UI policy instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetDisplay_String_Boolean",
    "scope": "Client"
  },{
    "name": "setLabelOf",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "label",
      "values": []
    }],
    "description": "Sets the plain text value of the field label. Note: This method is not supported by Service Catalog.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetLabelOf_String_String",
    "scope": "Client"
  },{
    "name": "setMandatory",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "mandatory",
      "values": []
    }],
    "description": "Makes the specified field mandatory. Whenever possible, use a UI policy rather than this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetMandatory_String_Boolean",
    "scope": "Client"
  },{
    "name": "setReadOnly",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "readOnly",
      "values": []
    }],
    "description": "Makes the specified field read only or editable. Whenever possible, use a UI policy instead of this method. To make a mandatory field read-only, you must first remove the mandatory requirement for that field by using the setMandatory() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetReadOnly_String_Boolean",
    "scope": "Client"
  },{
    "name": "setSectionDisplay",
    "parameters": [{
      "name": "sectionName",
      "values": []
    },{
      "name": "display",
      "values": []
    }],
    "description": "Shows or hides a section.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetSectionDisplay_String_Boolean",
    "scope": "Client"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets the value of a field. When defining a value in a choice list, be sure to use number value rather than the label. To improve performance by preventing a round trip, include a display value in addition to the value, use setValue(fieldName, value, displayValue).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetValue_String_String",
    "scope": "Client"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "value",
      "values": []
    },{
      "name": "displayValue",
      "values": []
    }],
    "description": "Sets the value and display value of the specified field. When defining a value in a choice list, be sure to use number value rather than the label. To improve performance by preventing a round trip when setting the value for a reference field, use this method not setValue(fieldName, value). When setting multiple reference values for a list collector field, arrays can be passed in the second and third parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetValue_String_String_String",
    "scope": "Client"
  },{
    "name": "setVisible",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "display",
      "values": []
    }],
    "description": "Displays or hides the field. If the field is hidden, the space is left blank. This method cannot hide mandatory fields with no value. Use UI Policy rather than this method whenever possible.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSetVisible_String_Boolean",
    "scope": "Client"
  },{
    "name": "showErrorBox",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "message",
      "values": []
    }],
    "description": "Displays an error message under the specified form field (either a control object or the name of the field). If the control or field is currently off the screen, the form scrolls to the control or field. A global property (glide.ui.scroll_to_message_field) is available that controls automatic message scrolling when the form field is off screen (scrolls the form to the control or field). The showFieldMsg() method is a similar method that requires a type parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormShowErrorBox_String_String",
    "scope": "Client"
  },{
    "name": "showErrorBox",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "message",
      "values": []
    },{
      "name": "scrollForm",
      "values": []
    }],
    "description": "Displays an error message under the specified form field (either a control object or the name of the field). If the control or field is currently off the screen and the scrollForm parameter is true, the form scrolls to the control or field. A global property (glide.ui.scroll_to_message_field) is available that controls automatic message scrolling when the form field is off screen (scrolls the form to the control or field). The showFieldMsg() method is a similar method that requires a type parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormShowErrorBox_String_String_Boolean",
    "scope": "Client"
  },{
    "name": "showFieldMsg",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "message",
      "values": []
    },{
      "name": "type",
      "values": []
    }],
    "description": "Displays either an informational or error message under the specified form field (either a control object or the name of the field). If the control or field is off the screen, the form is scrolled to the field. A global property (glide.ui.scroll_to_message_field) is available that controls automatic message scrolling when the form field is off screen (scrolls the form to the control or field). The showErrorBox() method is a shorthand method that does not require the type parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormShowFieldMsg_String_String_String",
    "scope": "Client"
  },{
    "name": "showFieldMsg",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "message",
      "values": []
    },{
      "name": "type",
      "values": []
    },{
      "name": "scrollForm",
      "values": []
    }],
    "description": "Displays either an informational or error message under the specified form field (either a control object or the name of the field). If the control or field is currently off the screen and scrollForm is true, the form is scrolled to the field. A global property (glide.ui.scroll_to_message_field) is available that controls automatic message scrolling when the form field is off screen (scrolls the form to the control or field). The showErrorBox() method is a shorthand method that does not require the type parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormShowFieldMsg_String_String_String_Boolean",
    "scope": "Client"
  },{
    "name": "showRelatedList",
    "parameters": [{
      "name": "listTableName",
      "values": []
    }],
    "description": "Displays the specified related list on the form. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormShowRelatedList_String",
    "scope": "Client"
  },{
    "name": "showRelatedLists",
    "parameters": [],
    "description": "Displays all the form's related lists. This method is not available on the mobile platform. If this method is run on a mobile platform, no action occurs.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormShowRelatedLists",
    "scope": "Client"
  },{
    "name": "submit",
    "parameters": [],
    "description": "Saves the record. The user is taken away from the form, returning them to where they were.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideFormSubmit",
    "scope": "Client"
  },{
    "name": "submit",
    "parameters": [{
      "name": "verb",
      "values": []
    }],
    "description": "Performs the UI action specified by the parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GF-submit_S",
    "scope": "Client"
  }, {
    "name": "addDecoration",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }, {
      "name": "icon",
      "values": []
    }, {
      "name": "text",
      "values": []
    }],
    "description": "Adds a decorative icon next to a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_MGF-addDecoration_S_S_S",
    "scope": "Mobile"
  }, {
    "name": "getLabel",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Gets the form label text.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_MGF-getLabel_S",
    "scope": "Mobile"
  }, {
    "name": "hasField",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Determines if a field is present on the form. Present means that it can be shown, not that it is visible.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_MGF-hasField_S",
    "scope": "Mobile"
  }, {
    "name": "removeDecoration",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }, {
      "name": "icon",
      "values": []
    }, {
      "name": "text",
      "values": []
    }],
    "description": "Removes a decorative icon from next to a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_MGF-removeDecoration_S_S_S",
    "scope": "Mobile"
  }, {
    "name": "setLabel",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }, {
      "name": "label",
      "values": []
    }],
    "description": "Sets the form label text.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_MGF-setLabel_S_S",
    "scope": "Mobile"
  }]
}, {
  "text": "gr",
  "functions": [{
    "name": "addActiveQuery",
    "parameters": [],
    "description": "Adds a filter to return active records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddActiveQuery",
    "scope": "Legacy"
  },{
    "name": "addDomainQuery",
    "parameters": [{
      "name": "glideRecord",
      "values": []
    }],
    "description": "Changes the domain used for the query from the user's domain to the domain of the provided GlideRecord. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddDomainQuery_Object",
    "scope": "Legacy"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to other queries that may have been set. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddEncodedQuery_String",
    "scope": "Legacy"
  },{
    "name": "addFunction",
    "parameters": [{
      "name": "function",
      "values": []
    }],
    "description": "Applies a pre-defined GlideDBFunctionBuilder object to a record. Use the GlideDBFunctionBuilder scoped class to define a function. After the function is defined, use the addFunction(Object function) method to apply the function to a record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-addFunction_Object",
    "scope": "Legacy"
  },{
    "name": "addInactiveQuery",
    "parameters": [],
    "description": "Adds a filter to return inactive records. Inactive records have the active flag set to false.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddInactiveQuery",
    "scope": "Legacy"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "table",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. For example, find all the users that are in the database group (users via sys_user_grmember table). Another example would be find all problems that have an assigned incident (problems via the incident.problem_id relationship). This is not a true database join; rather, addJoinQuery() adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddJoinQuery_String",
    "scope": "Legacy"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "table",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. For example, find all the users that are in the database group (users via sys_user_grmember table). Another example would be find all problems that have an assigned incident (problems via the incident.problem_id relationship). This is not a true database join; rather, addJoinQuery() adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddJoinQuery_String_String",
    "scope": "Legacy"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "table",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    },{
      "name": "joinTableField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. For example, find all the users that are in the database group (users via sys_user_grmember table). Another example would be find all problems that have an assigned incident (problems via the incident.problem_id relationship). This is not a true database join; rather, addJoinQuery() adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddJoinQuery_String_String_String",
    "scope": "Legacy"
  },{
    "name": "addNotNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a filter to return records where the specified field is not null.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddNotNullQuery_String",
    "scope": "Legacy"
  },{
    "name": "addNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a filter to return records where the specified field is null.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddNullQuery_String",
    "scope": "Legacy"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the class GlideQueryCondition. addQuery() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as myObj.addQuery('category','Hardware');. The operator in this case is assumed to be \"equal to\". Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddQuery_String_Object_Object",
    "scope": "Legacy"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the class GlideQueryCondition. addQuery() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as myObj.addQuery('category','Hardware');. The operator in this case is assumed to be \"equal to\". Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddQuery_String_Object_Object",
    "scope": "Legacy"
  },{
    "name": "applyTemplate",
    "parameters": [{
      "name": "template",
      "values": []
    }],
    "description": "Apply a template record (from sys_template) to the current record. If the specified template is not found, no action is taken.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-applyTemplate_String",
    "scope": "Legacy"
  },{
    "name": "autoSysFields",
    "parameters": [{
      "name": "e",
      "values": []
    }],
    "description": "Enables or disables the update to the fields sys_updated_by, sys_updated_on, sys_mod_count, sys_created_by, and sys_created_on. This is often used for manually updating field values on a record while leaving historical information unchanged.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-autoSysFields_Boolean",
    "scope": "Legacy"
  },{
    "name": "canCreate",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit inserting new records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanCreate",
    "scope": "Legacy"
  },{
    "name": "canDelete",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit deletion of records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanDelete",
    "scope": "Legacy"
  },{
    "name": "canRead",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit reading this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanRead",
    "scope": "Legacy"
  },{
    "name": "canWrite",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit updates to records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanWrite",
    "scope": "Legacy"
  },{
    "name": "changes",
    "parameters": [],
    "description": "Determines whether any of the fields in the record have changed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-Changes",
    "scope": "Legacy"
  },{
    "name": "dateNumericValue",
    "parameters": [],
    "description": "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GR-dateNumericValue",
    "scope": "Legacy"
  },{
    "name": "deleteMultiple",
    "parameters": [],
    "description": "Deletes multiple records according to the current \"where\" clause. This method does not delete attachments. Dot-walking is not supported for this method. When using the deleteMultiple() function on referenced tables, all the records in the table are deleted. Also, when using deleteRecord() to cascade delete, prior calls to setWorkflow() on the same GlideRecord object are ignored. Do not use deleteMultiple() on tables with currency fields. Always delete each record individually. Also, do not use this method with the chooseWindow() or setLimit() methods when working with large tables.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-deleteMultiple",
    "scope": "Legacy"
  },{
    "name": "deleteRecord",
    "parameters": [],
    "description": "Deletes a single record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-deleteRecord",
    "scope": "Legacy"
  },{
    "name": "find",
    "parameters": [{
      "name": "columnName",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Returns true if any record has a matching value in the specified column. If found, it also moves to the first record that matches, essentially executing next() until the record is returned.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-Find_String_String",
    "scope": "Legacy"
  },{
    "name": "get",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-get_Object_Object",
    "scope": "Legacy"
  },{
    "name": "get",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-get_Object_Object",
    "scope": "Legacy"
  },{
    "name": "getAttribute",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the dictionary attributes on the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getAttribute_String",
    "scope": "Legacy"
  },{
    "name": "getClassDisplayValue",
    "parameters": [],
    "description": "Returns the table's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getClassDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Retrieves the display value for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getED",
    "parameters": [],
    "description": "Returns the element's descriptor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getED",
    "scope": "Legacy"
  },{
    "name": "getElement",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Retrieves the GlideElement for a specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getElement_String",
    "scope": "Legacy"
  },{
    "name": "getEncodedQuery",
    "parameters": [],
    "description": "Retrieves the encoded query as a string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getEncodedQuery_Boolean",
    "scope": "Legacy"
  },{
    "name": "getEscapedDisplayValue",
    "parameters": [],
    "description": "Retrieves the field value for the display field of the current record and adds escape characters for use in Jelly scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getEscapedDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getFields",
    "parameters": [],
    "description": "Retrieves a Java ArrayList of fields in the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getFields",
    "scope": "Legacy"
  },{
    "name": "getLabel",
    "parameters": [],
    "description": "Retrieves the field's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getLabel",
    "scope": "Legacy"
  },{
    "name": "getLink",
    "parameters": [{
      "name": "noStack",
      "values": []
    }],
    "description": "Retrieves the link for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getLink_Boolean",
    "scope": "Legacy"
  },{
    "name": "getLocation",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Retrieves the current row number.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getLocation_Boolean",
    "scope": "Legacy"
  },{
    "name": "getPlural",
    "parameters": [],
    "description": "Retrieves the plural label of the GlideRecord table. For example, if the table name is \"Change Request,\" this method returns \"Change Requests.\"",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getPlural",
    "scope": "Legacy"
  },{
    "name": "getRecordClassName",
    "parameters": [],
    "description": "Retrieves the class (table) name for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRecordClassName",
    "scope": "Legacy"
  },{
    "name": "getRelatedLists",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Retrieves a list of names and display values of tables that refer to the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRelatedLists_Boolean",
    "scope": "Legacy"
  },{
    "name": "getRelatedTables",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Retrieves a list of names and display values of tables that are referred to by the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRelatedTables_Boolean",
    "scope": "Legacy"
  },{
    "name": "getRowCount",
    "parameters": [],
    "description": "Retrieves the number of rows in the GlideRecord object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRowCount",
    "scope": "Legacy"
  },{
    "name": "getRowNumber",
    "parameters": [],
    "description": "Retrieves the row number set by saveLocation() or setLocation(). To get the current row number, use getLocation().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRowNumber",
    "scope": "Legacy"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Retrieves the table name associated with this GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getTableName",
    "scope": "Legacy"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Retrieves the string value of an underlying element in a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getValue_String",
    "scope": "Legacy"
  },{
    "name": "hasAttachments",
    "parameters": [],
    "description": "Determines if the current record has any attachments.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-hasAttachments",
    "scope": "Legacy"
  },{
    "name": "hasNext",
    "parameters": [],
    "description": "Determines if there are any more records in the GlideRecord.\nConsistency across all API ref topics is critical. Follow the template exactly or the importer script will fail.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-hasNext",
    "scope": "Legacy"
  },{
    "name": "initialize",
    "parameters": [],
    "description": "Creates an empty record suitable for population before an insert.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-initialize",
    "scope": "Legacy"
  },{
    "name": "insert",
    "parameters": [],
    "description": "Inserts a new record using the field values that have been set for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-insert",
    "scope": "Legacy"
  },{
    "name": "insertWithReferences",
    "parameters": [],
    "description": "Inserts a new record and also inserts or updates any related records with the information provided.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-insertWithReferences",
    "scope": "Legacy"
  },{
    "name": "instanceOf",
    "parameters": [{
      "name": "className",
      "values": []
    }],
    "description": "Checks a table for the type\\class of table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-instanceOf_String",
    "scope": "Legacy"
  },{
    "name": "isNewRecord",
    "parameters": [],
    "description": "Determines whether the current record has been inserted into the database. This method returns true only if the newRecord() method has been called. This method is useful for scripted ACL, and in the condition of UI actions, but should not be used in background scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isNewRecord",
    "scope": "Legacy"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if the table exists.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isValid",
    "scope": "Legacy"
  },{
    "name": "isValidField",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Determines if the specified field is defined in the current table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isValidField_String",
    "scope": "Legacy"
  },{
    "name": "isValidRecord",
    "parameters": [],
    "description": "Determines if the current record is valid.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isValidRecord",
    "scope": "Legacy"
  },{
    "name": "newRecord",
    "parameters": [],
    "description": "Creates a GlideRecord, set the default values for the fields and assign a unique id to the record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-newRecord",
    "scope": "Legacy"
  },{
    "name": "next",
    "parameters": [],
    "description": "Moves to the next record in the GlideRecord. Use this method to iterate through the records returned by a GlideRecord query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-next",
    "scope": "Legacy"
  },{
    "name": "operation",
    "parameters": [],
    "description": "Retrieves the current operation being performed, such as insert, update, delete, etc.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-operation",
    "scope": "Legacy"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Specifies a field name to be used to order the query set. This may be called more than once to order by multiple fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-orderBy_String",
    "scope": "Legacy"
  },{
    "name": "orderByDesc",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Specifies a field used to order the query set in descending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-orderByDesc_String",
    "scope": "Legacy"
  },{
    "name": "query",
    "parameters": [],
    "description": "Runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(). This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(). This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "queryNoDomain",
    "parameters": [],
    "description": "Used in domain separated instances. Similar to query(), runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(), but ignores domains. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-queryNoDomain_Object_Object",
    "scope": "Legacy"
  },{
    "name": "queryNoDomain",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Used in domain separated instances. Similar to query(), runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(), but ignores domains. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-queryNoDomain_Object_Object",
    "scope": "Legacy"
  },{
    "name": "restoreLocation",
    "parameters": [],
    "description": "Sets the current record to be the record that was saved with saveLocation(). If saveLocation() has not been called, the current record is set to be the first record of the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-restoreLocation_Boolean",
    "scope": "Legacy"
  },{
    "name": "saveLocation",
    "parameters": [],
    "description": "Save the current row number so that we can get back to this location using the restoreLocation() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-saveLocation",
    "scope": "Legacy"
  },{
    "name": "setAbortAction",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Sets a flag to indicate if the next database action (insert, update, delete) is to be aborted. Use in an onBefore business rule to prevent the database action from being done. The business rule continues to run after setAbortAction() is called. Calling setAbortAction() does not stop subsequent business rules from executing. Calling this method only prevents the database action from occurring.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setAbortAction_Boolean",
    "scope": "Legacy"
  },{
    "name": "setDateNumericValue",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Sets the duration field to a number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GR-setDateNumericValue_N",
    "scope": "Legacy"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets the specified field to the specified display value. For a reference field this is the display value for the table. For a date/time this is the time in the caller's current timezone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setDisplayValue_String_Object",
    "scope": "Legacy"
  },{
    "name": "setForceUpdate",
    "parameters": [{
      "name": "force",
      "values": []
    }],
    "description": "Updates the record even if fields have not changed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setForceUpdate_Boolean",
    "scope": "Legacy"
  },{
    "name": "setLimit",
    "parameters": [{
      "name": "limit",
      "values": []
    }],
    "description": "Sets the limit for how many records are in the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setLimit_Number",
    "scope": "Legacy"
  },{
    "name": "setLocation",
    "parameters": [{
      "name": "rowNumber",
      "values": []
    }],
    "description": "Sets the current row location.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setLocation_Number",
    "scope": "Legacy"
  },{
    "name": "setNewGuid",
    "parameters": [],
    "description": "Generates a new GUID and sets it as the unique id for the current record. This function applies only to new records. The GUID for an existing record cannot be changed",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setNewGuid",
    "scope": "Legacy"
  },{
    "name": "setNewGuidValue",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Generates a new GUID and sets it as the unique id for the current record, when inserting a new record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setNewGuidValue_String",
    "scope": "Legacy"
  },{
    "name": "setQueryReferences",
    "parameters": [{
      "name": "queryReferences",
      "values": []
    }],
    "description": "Enables or disables using the reference field's display name when querying a reference field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setQueryReferences_Boolean",
    "scope": "Legacy"
  },{
    "name": "setUseEngines",
    "parameters": [{
      "name": "e",
      "values": []
    }],
    "description": "Disable or enable the running of any engines (approval rules / assignment rules).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setUseEngines_Boolean",
    "scope": "Legacy"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets the specified field to the specified value. Normally a script would do a direct assignment, for example, gr.category = value. However, if in a script the element name is a variable, then gr.setValue(elementName, value) can be used. When setting a value, ensure the data type of the field matches the data type of the value you enter. This method cannot be used on journal fields. If the value parameter is null, the record is not updated, and an error is not thrown.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setValue_String_Object",
    "scope": "Legacy"
  },{
    "name": "setWorkflow",
    "parameters": [{
      "name": "e",
      "values": []
    }],
    "description": "Enables or disables the running of business rules that might normally be triggered by subsequent actions. If the e parameter is set to false, an insert/update will not be audited. Auditing only happens when the parameter is set to true for a GlideRecord operation.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setWorkFlow_Boolean",
    "scope": "Legacy"
  },{
    "name": "update",
    "parameters": [],
    "description": "Updates the GlideRecord with any changes that have been made. If the record does not exist, it is inserted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-update_Object",
    "scope": "Legacy"
  },{
    "name": "update",
    "parameters": [{
      "name": "reason",
      "values": []
    }],
    "description": "Updates the GlideRecord with any changes that have been made. If the record does not exist, it is inserted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-update_Object",
    "scope": "Legacy"
  },{
    "name": "updateMultiple",
    "parameters": [],
    "description": "Updates each GlideRecord in the list with any changes that have been made. When changing field values, use setValue() instead of directly setting the field (field = something). When using updateMultiple(), directly setting the field (gr. state = 4) results in all records in the table being updated instead of just the records returned by the query. Do not use this method with the chooseWindow() or setLimit() methods when working with large tables. This method sets new values and does not clear existing values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-updateMultiple",
    "scope": "Legacy"
  },{
    "name": "updateWithReferences",
    "parameters": [{
      "name": "reason",
      "values": []
    }],
    "description": "Updates a record and also inserts or updates any related records with the information provided.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-updateWithReferences_Object",
    "scope": "Legacy"
  },{
    "name": "_next",
    "parameters": [],
    "description": "Moves to the next record in the GlideRecord. Provides the same functionality as next(), intended to be used in cases where the GlideRecord has a column named next.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-_next",
    "scope": "Legacy"
  },{
    "name": "_query",
    "parameters": [],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-_query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "_query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-_query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "addActiveQuery",
    "parameters": [],
    "description": "Adds a filter to return active records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-addActiveQuery",
    "scope": "Scoped"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to other queries that may have been set. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddEncodedQuery_String",
    "scope": "Scoped"
  },{
    "name": "addFunction",
    "parameters": [{
      "name": "function",
      "values": []
    }],
    "description": "Applies a pre-defined GlideDBFunctionBuilder object to a record. Use the GlideDBFunctionBuilder scoped class to define a function. After the function is defined, use the addFunction(Object function) method to apply the function to a record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddFunction_O",
    "scope": "Scoped"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "joinTable",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. You can use this method to find all the users that are in the database group via the [sys_user_grmember] table, or to find all problems that have an assigned incident via the incident.problem_id relationship. This is not a true database join; rather, addJoinQuery adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddJoinQuery_String_Object_Object",
    "scope": "Scoped"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "joinTable",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. You can use this method to find all the users that are in the database group via the [sys_user_grmember] table, or to find all problems that have an assigned incident via the incident.problem_id relationship. This is not a true database join; rather, addJoinQuery adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddJoinQuery_String_Object_Object",
    "scope": "Scoped"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "joinTable",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    },{
      "name": "joinTableField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. You can use this method to find all the users that are in the database group via the [sys_user_grmember] table, or to find all problems that have an assigned incident via the incident.problem_id relationship. This is not a true database join; rather, addJoinQuery adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddJoinQuery_String_Object_Object",
    "scope": "Scoped"
  },{
    "name": "addNotNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "A filter that specifies records where the value of the field passed in the parameter is not null. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddNotNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addNullQuery",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Adds a filter to return records where the value of the specified field is null. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Build a search query and return the rows that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the GlideQueryCondition method addOrCondition(). When addQuery() is called with only two parameters, table field and comparison value, such as myObj.addQuery('category','Hardware');, the operator in this case is assumed to be \"equal to\". Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddQuery_String_Object",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table, that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the GlideQueryCondition method addOrCondition(). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddQuery_String_String_Object",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds a filter to return records using an encoded query string. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddQuery_String",
    "scope": "Scoped"
  },{
    "name": "canCreate",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit inserting new records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanCreate",
    "scope": "Scoped"
  },{
    "name": "canDelete",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit deleting records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanDelete",
    "scope": "Scoped"
  },{
    "name": "canRead",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit reading records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanRead",
    "scope": "Scoped"
  },{
    "name": "canWrite",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit editing records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanWrite",
    "scope": "Scoped"
  },{
    "name": "chooseWindow",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "lastRow",
      "values": []
    },{
      "name": "forceCount",
      "values": []
    }],
    "description": "Sets a range of rows to be returned by subsequent queries.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordChooseWindow_Number_Number_Boolean",
    "scope": "Scoped"
  },{
    "name": "dateNumericValue",
    "parameters": [],
    "description": "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-dateNumericValue",
    "scope": "Scoped"
  },{
    "name": "deleteMultiple",
    "parameters": [],
    "description": "Deletes multiple records that satisfy the query condition. This method does not delete attachments. Do not use deleteMultiple() on tables with currency fields. Always delete each record individually. Also, do not use this method with the chooseWindow() or setLimit() methods when working with large tables.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordDeleteMultiple",
    "scope": "Scoped"
  },{
    "name": "deleteRecord",
    "parameters": [],
    "description": "Deletes the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordDeleteRecord",
    "scope": "Scoped"
  },{
    "name": "get",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGet_Object_Object",
    "scope": "Scoped"
  },{
    "name": "get",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGet_Object_Object",
    "scope": "Scoped"
  },{
    "name": "getAttribute",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the dictionary attributes for the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getAttribute_S",
    "scope": "Scoped"
  },{
    "name": "getClassDisplayValue",
    "parameters": [],
    "description": "Returns the table's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getClassDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Retrieves the display value for the current record.Returns the element's descriptor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getED",
    "parameters": [],
    "description": "Returns the element's descriptor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getED",
    "scope": "Scoped"
  },{
    "name": "getElement",
    "parameters": [{
      "name": "columnName",
      "values": []
    }],
    "description": "Retrieves the GlideElement object for the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetElement_String",
    "scope": "Scoped"
  },{
    "name": "getEncodedQuery",
    "parameters": [],
    "description": "Retrieves the query condition of the current result set as an encoded query string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetEncodedQuery",
    "scope": "Scoped"
  },{
    "name": "getLabel",
    "parameters": [],
    "description": "Returns the field's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getLabel",
    "scope": "Scoped"
  },{
    "name": "getLastErrorMessage",
    "parameters": [],
    "description": "Retrieves the last error message. If there is no last error message, null is returned.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetLastErrorMessage",
    "scope": "Scoped"
  },{
    "name": "getLink",
    "parameters": [{
      "name": "noStack",
      "values": []
    }],
    "description": "Retrieves a link to the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetLink_Boolean",
    "scope": "Scoped"
  },{
    "name": "getRecordClassName",
    "parameters": [],
    "description": "Retrieves the class name for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetRecordClassName",
    "scope": "Scoped"
  },{
    "name": "getRowCount",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Retrieves the number of rows in the query result.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetRowCount",
    "scope": "Scoped"
  },{
    "name": "getTableName",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Retrieves the name of the table associated with the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetTableName",
    "scope": "Scoped"
  },{
    "name": "getUniqueValue",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Gets the primary key of the record, which is usually the sys_id unless otherwise specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetUniqueValue",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Retrieves the string value of an underlying element in a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetValue_String",
    "scope": "Scoped"
  },{
    "name": "hasNext",
    "parameters": [],
    "description": "Determines if there are any more records in the GlideRecord object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordHasNext",
    "scope": "Scoped"
  },{
    "name": "initialize",
    "parameters": [],
    "description": "Creates an empty record suitable for population before an insert.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordInitialize",
    "scope": "Scoped"
  },{
    "name": "insert",
    "parameters": [],
    "description": "Inserts a new record using the field values that have been set for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordInsert",
    "scope": "Scoped"
  },{
    "name": "isActionAborted",
    "parameters": [],
    "description": "Checks to see if the current database action is to be aborted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsActionAborted",
    "scope": "Scoped"
  },{
    "name": "isEncodedQueryValid",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Verifies whether the specified encoded query is valid.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-isEncodedQueryValid_S",
    "scope": "Scoped"
  },{
    "name": "isNewRecord",
    "parameters": [],
    "description": "Checks if the current record is a new record that has not yet been inserted into the database.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsNewRecord",
    "scope": "Scoped"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if the table exists.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsValid",
    "scope": "Scoped"
  },{
    "name": "isValidField",
    "parameters": [{
      "name": "columnName",
      "values": []
    }],
    "description": "Determines if the specified field is defined in the current table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsValidField",
    "scope": "Scoped"
  },{
    "name": "isValidRecord",
    "parameters": [],
    "description": "Determines if current record is a valid record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsValidRecord",
    "scope": "Scoped"
  },{
    "name": "newRecord",
    "parameters": [],
    "description": "Creates a new GlideRecord record, sets the default values for the fields, and assigns a unique ID to the record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordNewRecord",
    "scope": "Scoped"
  },{
    "name": "next",
    "parameters": [],
    "description": "Moves to the next record in the GlideRecord object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordNext",
    "scope": "Scoped"
  },{
    "name": "operation",
    "parameters": [],
    "description": "Retrieves the current operation being performed, such as insert, update, or delete.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordOperation",
    "scope": "Scoped"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Specifies an orderBy column. Call this method more than once to order by multiple columns. Results are arranged in ascending order, see orderByDesc(String name) to arrange records in descending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordOrderBy_String",
    "scope": "Scoped"
  },{
    "name": "orderByDesc",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Specifies a decending orderBy column.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordOrderByDesc_String",
    "scope": "Scoped"
  },{
    "name": "query",
    "parameters": [],
    "description": "Runs the query against the table based on the filters specified by addQuery, addEncodedQuery, etc. This queries the GlideRecord table as well as any references of the table. Usually this is performed without arguments. If name/value pair is specified, \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordQuery_Object_Object",
    "scope": "Scoped"
  },{
    "name": "query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Runs the query against the table based on the filters specified by addQuery, addEncodedQuery, etc. This queries the GlideRecord table as well as any references of the table. Usually this is performed without arguments. If name/value pair is specified, \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordQuery_Object_Object",
    "scope": "Scoped"
  },{
    "name": "setAbortAction",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Sets a flag to indicate if the next database action (insert, update, delete) is to be aborted. This is often used in business rules. Use in an onBefore business rule to prevent the database action from being done. The business rule continues to run after setAbortAction() is called. Calling setAbortAction() does not stop subsequent business rules from executing. Calling this method only prevents the database action from occurring.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetAbortAction_Boolean",
    "scope": "Scoped"
  },{
    "name": "setDateNumericValue",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Sets the duration field to a number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-setDateNumericValue_N",
    "scope": "Scoped"
  },{
    "name": "setLimit",
    "parameters": [{
      "name": "maxNumRecords",
      "values": []
    }],
    "description": "Sets the limit for number of records are fetched by the GlideRecord query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetLimit_Number",
    "scope": "Scoped"
  },{
    "name": "setNewGuidValue",
    "parameters": [{
      "name": "guid",
      "values": []
    }],
    "description": "Sets sys_id value for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetNewGuidValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Sets the value of the field with the specified name to the specified value. Normally the script does a gr.category = value. However, if the element name is itself a variable then gr.setValue(elementName, value) can be used. When setting a value, ensure the data type of the field matches the data type of the value you enter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetValue_String_Object",
    "scope": "Scoped"
  },{
    "name": "setWorkflow",
    "parameters": [{
      "name": "enable",
      "values": []
    }],
    "description": "Enables or disables the running of business rules, script engines, and audit.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetWorkflow_Boolean",
    "scope": "Scoped"
  },{
    "name": "update",
    "parameters": [{
      "name": "reason",
      "values": []
    }],
    "description": "Updates the GlideRecord with any changes that have been made. If the record does not already exist, it is inserted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordUpdate_String",
    "scope": "Scoped"
  },{
    "name": "updateMultiple",
    "parameters": [],
    "description": "Updates each GlideRecord in the list with any changes that have been made. When changing field values, use setValue() instead of directly setting the field (field = something). When using updateMultiple(), directly setting the field (gr. state = 4) results in all records in the table being updated instead of just the records returned by the query. Do not use this method with the chooseWindow() or setLimit() methods when working with large tables. This method sets new values and does not clear existing values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordUpdateMultiple",
    "scope": "Scoped"
  },{
    "name": "_next",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Moves to the next record in the GlideRecord. Provides the same functionality as next(), it is intended to be used in cases where the GlideRecord has a column named next.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-_next",
    "scope": "Scoped"
  },{
    "name": "_query",
    "parameters": [],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This method queries the GlideRecord table as well as any references of the table. Typically this method is called without arguments. If a name/value pair is specified, the \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-_query_O_O",
    "scope": "Scoped"
  },{
    "name": "_query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This method queries the GlideRecord table as well as any references of the table. Typically this method is called without arguments. If a name/value pair is specified, the \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-_query_O_O",
    "scope": "Scoped"
  }]
}, {
  "text": "agg",
  "functions": [{
    "name": "addAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Adds an aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addAggregate_String_String",
    "scope": "Legacy"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to the other queries that may have been set for this aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addEncodedQuery_String",
    "scope": "Legacy"
  },{
    "name": "addHaving",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Adds a \"having\" element to the aggregate e.g. select category, count(*) from incident group by category HAVING count(*) > 5.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addHaving_String_String_String",
    "scope": "Legacy"
  },{
    "name": "addTrend",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "timeInterval",
      "values": []
    }],
    "description": "Adds a trend for a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addTrend_String_String",
    "scope": "Legacy"
  },{
    "name": "getAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of an aggregate from the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getAggregate_String_String",
    "scope": "Legacy"
  },{
    "name": "getQuery",
    "parameters": [],
    "description": "Retrieves the query necessary to return the current aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getQuery",
    "scope": "Legacy"
  },{
    "name": "getTotal",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Returns the number of records by summing an aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getTotal_String_String",
    "scope": "Legacy"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getValue_String",
    "scope": "Legacy"
  },{
    "name": "groupBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides the name of a field to use in grouping the aggregates. May be called numerous times to set multiple group fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-groupBy_String",
    "scope": "Legacy"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides the name of a field that should be used to order the aggregates. The field will also be added to the group-by list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-orderBy_String",
    "scope": "Legacy"
  },{
    "name": "orderByAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Orders the aggregates based on the specified aggregate and field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-orderByAggregate_String_String",
    "scope": "Legacy"
  },{
    "name": "query",
    "parameters": [],
    "description": "Issues the query and gets the results.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-query",
    "scope": "Legacy"
  },{
    "name": "setGroup",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Sets whether the results are to be grouped.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-setGroup_Boolean",
    "scope": "Legacy"
  },{
    "name": "addAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Adds an aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddAggregate_String_String",
    "scope": "Scoped"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to the other queries that may have been set for this aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddEncodedQuery_String",
    "scope": "Scoped"
  },{
    "name": "addNotNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a not null query to the aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddNotNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a null query to the aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Adds a query to the aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddQuery_String_String_String",
    "scope": "Scoped"
  },{
    "name": "addTrend",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "timeInterval",
      "values": []
    }],
    "description": "Adds a trend for a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggAddTrend_S_S",
    "scope": "Scoped"
  },{
    "name": "getAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of an aggregate from the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetAggregate_String_String",
    "scope": "Scoped"
  },{
    "name": "getAggregateEncodedQuery",
    "parameters": [],
    "description": "Gets the query necessary to return the current aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetAggregateEncodedQuery",
    "scope": "Scoped"
  },{
    "name": "getEncodedQuery",
    "parameters": [],
    "description": "Retrieves the encoded query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetEncodedQuery",
    "scope": "Scoped"
  },{
    "name": "getRowCount",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Retrieves the number of rows in the GlideAggregate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetRowCount",
    "scope": "Scoped"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Retrieves the table name associated with this GlideAggregate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetTableName",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetValue_String",
    "scope": "Scoped"
  },{
    "name": "groupBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides the name of a field to use in grouping the aggregates. May be called numerous times to set multiple group fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGroupBy_String",
    "scope": "Scoped"
  },{
    "name": "hasNext",
    "parameters": [],
    "description": "Determines if there are any more records in the GlideAggregate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateHasNext",
    "scope": "Scoped"
  },{
    "name": "next",
    "parameters": [],
    "description": "Moves to the next record in the GlideAggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateNext",
    "scope": "Scoped"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Orders the aggregates using the value of the specified field. The field will also be added to the group-by list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateOrderBy_String",
    "scope": "Scoped"
  },{
    "name": "orderByAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "fieldName",
      "values": []
    }],
    "description": "Orders the aggregates based on the specified aggregate and field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateOrderByAggregate_String_String",
    "scope": "Scoped"
  },{
    "name": "orderByDesc",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Sorts the aggregates in descending order based on the specified field. The field will also be added to the group-by list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateOrderByDesc_String",
    "scope": "Scoped"
  },{
    "name": "query",
    "parameters": [],
    "description": "Issues the query and gets the results.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateQuery",
    "scope": "Scoped"
  }]
}, {
  "text": "arrayutil",
  "functions": [{
    "name": "concat",
    "parameters": [{
      "name": "parent",
      "values": []
    },{
      "name": "child",
      "values": []
    }],
    "description": "Merge two arrays.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-concat_A_A",
    "scope": "Legacy"
  },{
    "name": "contains",
    "parameters": [{
      "name": "array",
      "values": []
    },{
      "name": "element",
      "values": []
    }],
    "description": "Searches the array for the element. Returns true if the element exists in the array, otherwise returns false.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-contains_A_O",
    "scope": "Legacy"
  },{
    "name": "convertArray",
    "parameters": [{
      "name": "a",
      "values": []
    }],
    "description": "Convert an object to an array.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-convertArray_O",
    "scope": "Legacy"
  },{
    "name": "diff",
    "parameters": [{
      "name": "a",
      "values": []
    },{
      "name": "b",
      "values": []
    }],
    "description": "Finds the differences between two or more arrays. Any number of arrays can be provided as parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-diff_A_A",
    "scope": "Legacy"
  },{
    "name": "ensureArray",
    "parameters": [{
      "name": "object",
      "values": []
    }],
    "description": "Returns an array from the object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-ensureArray_O",
    "scope": "Legacy"
  },{
    "name": "indexOf",
    "parameters": [{
      "name": "array",
      "values": []
    },{
      "name": "element",
      "values": []
    }],
    "description": "Searches the array for the element. Returns the element index if found, -1 otherwise.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-indexOf_A_O",
    "scope": "Legacy"
  },{
    "name": "indexOf",
    "parameters": [{
      "name": "array",
      "values": []
    },{
      "name": "element",
      "values": []
    },{
      "name": "startIndex",
      "values": []
    }],
    "description": "Searches the array for the element starting with the startIndex element. Returns the element index.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-indexOf_A_N",
    "scope": "Legacy"
  },{
    "name": "intersect",
    "parameters": [{
      "name": "a",
      "values": []
    },{
      "name": "b",
      "values": []
    }],
    "description": "Finds the elements present in all arrays. Any number of arrays can be provided as parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-intersect_A_A",
    "scope": "Legacy"
  },{
    "name": "union",
    "parameters": [{
      "name": "a",
      "values": []
    },{
      "name": "b",
      "values": []
    }],
    "description": "Merge two or more arrays. Any number of arrays can be provided as parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-union_A_A",
    "scope": "Legacy"
  },{
    "name": "unique",
    "parameters": [{
      "name": "a",
      "values": []
    }],
    "description": "Removes duplicate items from an array.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-unique_A",
    "scope": "Legacy"
  }]
}, {
  "text": "currentuser",
  "functions": [{
    "name": "getCompanyID",
    "parameters": [],
    "description": "Returns the current user's company sys_id.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getCompanyID",
    "scope": "Legacy"
  },{
    "name": "getDisplayName",
    "parameters": [],
    "description": "Returns the current user's display name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getDisplayName",
    "scope": "Legacy"
  },{
    "name": "getDomainDisplayValue",
    "parameters": [],
    "description": "Returns the display value of the user's session domain.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getDomainDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getEmail",
    "parameters": [],
    "description": "Returns the user's email address.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getEmail",
    "scope": "Legacy"
  },{
    "name": "getFirstName",
    "parameters": [],
    "description": "Returns the user's first name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getFirstName",
    "scope": "Legacy"
  },{
    "name": "getID",
    "parameters": [],
    "description": "Returns the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getID",
    "scope": "Legacy"
  },{
    "name": "getLastName",
    "parameters": [],
    "description": "Returns the user's last name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getLastName",
    "scope": "Legacy"
  },{
    "name": "getMyGroups",
    "parameters": [],
    "description": "Returns an iterator containing the list of all groups to which the user belongs. Only active groups are returned.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getMyGroups",
    "scope": "Legacy"
  },{
    "name": "getName",
    "parameters": [],
    "description": "Returns the user ID, or login name, of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getName",
    "scope": "Legacy"
  },{
    "name": "getRoles",
    "parameters": [],
    "description": "Returns a list of roles that includes explicitly granted roles, inherited roles, and roles acquired by group membership.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getRoles",
    "scope": "Legacy"
  },{
    "name": "getUserByID",
    "parameters": [{
      "name": "id",
      "values": []
    }],
    "description": "Returns the user object associated with the passed-in user ID (sys_id in sys_user) or user_name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getUserByID_S",
    "scope": "Legacy"
  },{
    "name": "getUserRoles",
    "parameters": [],
    "description": "Returns the list of roles explicitly granted to the user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getUserRoles",
    "scope": "Legacy"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Determines if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-hasRole_S",
    "scope": "Legacy"
  },{
    "name": "isMemberOf",
    "parameters": [{
      "name": "group",
      "values": []
    }],
    "description": "Determines if the current user is a member of the specified group.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-isMemberOf_S",
    "scope": "Legacy"
  },{
    "name": "getCompanyID",
    "parameters": [],
    "description": "Returns the current user's company sys_id.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetCompanyID",
    "scope": "Scoped"
  },{
    "name": "getDisplayName",
    "parameters": [],
    "description": "Returns the current user's display name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetDisplayName",
    "scope": "Scoped"
  },{
    "name": "getDomainID",
    "parameters": [],
    "description": "Returns the identifier of the user's current session domain. The identifier that is returned depends on the domain type and the instantiation of that domain.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGU-getDomainID",
    "scope": "Scoped"
  },{
    "name": "getEmail",
    "parameters": [],
    "description": "Returns the user's email address.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getEmail",
    "scope": "Scoped"
  },{
    "name": "getFirstName",
    "parameters": [],
    "description": "Returns the user's first name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getFirstName",
    "scope": "Scoped"
  },{
    "name": "getID",
    "parameters": [],
    "description": "Gets the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetID",
    "scope": "Scoped"
  },{
    "name": "getLastName",
    "parameters": [],
    "description": "Returns the user's last name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getLastName",
    "scope": "Scoped"
  },{
    "name": "getName",
    "parameters": [],
    "description": "Returns the user ID, or login name, of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetName",
    "scope": "Scoped"
  },{
    "name": "getPreference",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Gets the specified user preference value for the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetPreference_String",
    "scope": "Scoped"
  },{
    "name": "getRoles",
    "parameters": [],
    "description": "Returns a list of roles that includes explicitly granted roles, inherited roles, and roles acquired by group membership.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getRoles",
    "scope": "Scoped"
  },{
    "name": "getUserRoles",
    "parameters": [],
    "description": "Returns the list of roles explicitly granted to the user. Unlike the getRoles() method, this method does not return roles the user inherits or roles acquired from group membership.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getUserRoles",
    "scope": "Scoped"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Determines if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserHasRole_String",
    "scope": "Scoped"
  },{
    "name": "isMemberOf",
    "parameters": [{
      "name": "group",
      "values": []
    }],
    "description": "Determines if the current user is a member of the specified group.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserIsMemberOf_String",
    "scope": "Scoped"
  },{
    "name": "savePreference",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Saves a user preference value to the database.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserSavePreference_String_String",
    "scope": "Scoped"
  }]
}, {
  "text": "jsutil",
  "functions": [{
    "name": "doesNotHave",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is null or is undefined.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-doesNotHave_O",
    "scope": "Legacy"
  },{
    "name": "escapeAttr",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Escape ampersands commonly used to define URL attributes.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-escapeAttr_S",
    "scope": "Legacy"
  },{
    "name": "escapeText",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Escapes invalid XML characters such as \"< > &\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-escapeText_S",
    "scope": "Legacy"
  },{
    "name": "getBooleanValue",
    "parameters": [{
      "name": "gr",
      "values": []
    },{
      "name": "field",
      "values": []
    }],
    "description": "Returns the value in a boolean GlideRecord field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-getBooleanValue_GR_S",
    "scope": "Legacy"
  },{
    "name": "has",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is not null and is not undefined.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-has_O",
    "scope": "Legacy"
  },{
    "name": "instance_of",
    "parameters": [{
      "name": "item",
      "values": []
    },{
      "name": "class",
      "values": []
    }],
    "description": "Checks to see if the specified object is a member of the specified class. For JavaScript objects, this method behaves exactly like the JavaScript operator \"instanceof\", but also supports Java objects.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-instance_of_O_S",
    "scope": "Legacy"
  },{
    "name": "isJavaObject",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Checks if the specified object is a Java class.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-isJavaObject_O",
    "scope": "Legacy"
  },{
    "name": "logObject",
    "parameters": [{
      "name": "obj",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Logs all the properties in the given object: name, type, and value. Output is written to the console if you are running from a background script or have debug logging enables. The output is also written to the system log.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-logObject_O_S",
    "scope": "Legacy"
  },{
    "name": "nil",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is null, undefined, or evaluates to the empty string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-nil_O",
    "scope": "Legacy"
  },{
    "name": "notNil",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is null, undefined, or evaluates to the empty string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-notNil_O",
    "scope": "Legacy"
  },{
    "name": "toBoolean",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Converts the specified object to a Boolean.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-toBoolean_O",
    "scope": "Legacy"
  },{
    "name": "type_of",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Determines the type of the specified object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-type_of_O",
    "scope": "Legacy"
  },{
    "name": "unescapeAttr",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Restore ampersands from escaped text.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-unescapeAttr_S",
    "scope": "Legacy"
  },{
    "name": "unescapeText",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Removes escape characters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-unescapeText_S",
    "scope": "Legacy"
  }]
}, {
  "text": "gdt",
  "functions": [{
    "name": "add",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Adds a GlideTime object to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-add_GT",
    "scope": "Legacy"
  },{
    "name": "add",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Adds a specified number of milliseconds to the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-add_N",
    "scope": "Legacy"
  },{
    "name": "addDays",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. Use addDaysLocalTime() and addDaysUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addDays_N",
    "scope": "Legacy"
  },{
    "name": "addDaysLocalTime",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addDaysLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addDaysUTC",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addDaysUTC_N",
    "scope": "Legacy"
  },{
    "name": "addMonths",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. Use addMonthsLocalTime() or addMonthsUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addMonths_N",
    "scope": "Legacy"
  },{
    "name": "addMonthsLocalTime",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addMonthsLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addMonthsUTC",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addMonthsUTC_N",
    "scope": "Legacy"
  },{
    "name": "addSeconds",
    "parameters": [{
      "name": "seconds",
      "values": []
    }],
    "description": "Adds a specified number of seconds to the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addSeconds_N",
    "scope": "Legacy"
  },{
    "name": "addWeeks",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. Use addWeeksLocalTime() and addWeeksUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addWeeks_N",
    "scope": "Legacy"
  },{
    "name": "addWeeksLocalTime",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addWeeksLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addWeeksUTC",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addWeeksUTC_N",
    "scope": "Legacy"
  },{
    "name": "addYears",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. Use addYearsLocalTime() or addYearsUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addYears_N",
    "scope": "Legacy"
  },{
    "name": "addYearsLocalTime",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts years using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addYearsLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addYearsUTC",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The date and time value stored by GlideDateTime object is interpreted as being in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addYearsUTC_N",
    "scope": "Legacy"
  },{
    "name": "compareTo",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Compares two date and time objects to determine whether one occurs before the other or if they are equivalent.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-compareTo_O",
    "scope": "Legacy"
  },{
    "name": "equals",
    "parameters": [{
      "name": "GDT",
      "values": []
    }],
    "description": "Compares an object with an existing value for equality.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT_equals_O",
    "scope": "Legacy"
  },{
    "name": "getDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDate",
    "scope": "Legacy"
  },{
    "name": "getDayOfMonth",
    "parameters": [],
    "description": "Gets the current day of the month in the UTC time zone. Use getDayOfMonthLocalTime() and getDayOfMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfMonth",
    "scope": "Legacy"
  },{
    "name": "getDayOfMonthLocalTime",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfMonthLocalTime",
    "scope": "Legacy"
  },{
    "name": "getDayOfMonthUTC",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfMonthUTC",
    "scope": "Legacy"
  },{
    "name": "getDayOfWeek",
    "parameters": [],
    "description": "Retrieves the day of the week stored by the GlideDateTime object, expressed in the user's time zone. Use getDayOfWeekLocalTime() and getDayOfWeekUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfWeek",
    "scope": "Legacy"
  },{
    "name": "getDayOfWeekLocalTime",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfWeekLocalTime",
    "scope": "Legacy"
  },{
    "name": "getDayOfWeekUTC",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfWeekUTC",
    "scope": "Legacy"
  },{
    "name": "getDaysInMonth",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the Java Virtual Machine time zone. Use getDaysInMonthLocalTime() and getDaysInMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDaysInMonth",
    "scope": "Legacy"
  },{
    "name": "getDaysInMonthLocalTime",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDaysInMonthLocalTime",
    "scope": "Legacy"
  },{
    "name": "getDaysInMonthUTC",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDaysInMonthUTC",
    "scope": "Legacy"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the date and time value in the current user's display format and time zone. Referring to the GlideDateTime object directly returns the date and time value in the GMT time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Returns the display value in the internal format (yyyy-MM-dd HH:mm:ss). This method is useful for date/time fields, but not for date fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDisplayValueInternal",
    "scope": "Legacy"
  },{
    "name": "getDSTOffset",
    "parameters": [],
    "description": "Gets the amount of time that daylight saving time is offset.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDSTOffset",
    "scope": "Legacy"
  },{
    "name": "getErrorMsg",
    "parameters": [],
    "description": "Gets the current error message.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getErrorMsg",
    "scope": "Legacy"
  },{
    "name": "getInternalFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in the local time zone and in the internal format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getInternalFormatedLocalTime",
    "scope": "Legacy"
  },{
    "name": "getInternalMidnight",
    "parameters": [{
      "name": "dayOfTheWeek",
      "values": []
    }],
    "description": "Returns a date and time object set to midnight of a specified day using UTC.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getInternalMidnight_N",
    "scope": "Legacy"
  },{
    "name": "getLocalDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getLocalDate",
    "scope": "Legacy"
  },{
    "name": "getLocalTime",
    "parameters": [],
    "description": "Gets the time in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getLocalTime",
    "scope": "Legacy"
  },{
    "name": "getMonth",
    "parameters": [],
    "description": "Retrieves the month stored by the GlideDateTime object, expressed in Java Virtual Machine time zone. Use getMonthLocalTime() and getMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getMonth",
    "scope": "Legacy"
  },{
    "name": "getMonthLocalTime",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getMonthLocalTime",
    "scope": "Legacy"
  },{
    "name": "getMonthUTC",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getMonthUTC",
    "scope": "Legacy"
  },{
    "name": "getNumericValue",
    "parameters": [],
    "description": "Gets the number of milliseconds since January 1, 1970, 00:00:00 GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getNumericValue",
    "scope": "Legacy"
  },{
    "name": "getSpanTime",
    "parameters": [{
      "name": "dayOfWeek",
      "values": []
    }],
    "description": "Retrieves the amount of time elapsed since the midnight of a specified day to the current time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GD-getSpanTime_N",
    "scope": "Legacy"
  },{
    "name": "getTime",
    "parameters": [],
    "description": "Gets the Unix duration stamp.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getTime",
    "scope": "Legacy"
  },{
    "name": "getTZOffset",
    "parameters": [],
    "description": "Gets the time zone offset in milliseconds.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getTZOffset",
    "scope": "Legacy"
  },{
    "name": "getUserFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in local time zone in the user's format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getUserFormattedLocalTime",
    "scope": "Legacy"
  },{
    "name": "getUserTimeZone",
    "parameters": [],
    "description": "Retrieves the time zone for the current user session. This method is equivalent to gs.getSession().getTimeZone().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getUserTimeZone",
    "scope": "Legacy"
  },{
    "name": "getUTCMidnight",
    "parameters": [{
      "name": "dayOfTheWeek",
      "values": []
    }],
    "description": "Retrieves a GlideDateTime object with the time set to midnight using the UTC time zone. This method sets the date of the new GlideDateTime object as the specified day of the week within the week of the original GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getUTCMidnight_N",
    "scope": "Legacy"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getValue",
    "scope": "Legacy"
  },{
    "name": "getWeekOfYearLocalTime",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the current user's time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getWeekOfYearLocalTime",
    "scope": "Legacy"
  },{
    "name": "getWeekOfYearUTC",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the UTC time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getWeekOfYearUTC",
    "scope": "Legacy"
  },{
    "name": "getYear",
    "parameters": [],
    "description": "Retrieves the year stored by the GlideDateTime object, expressed in the Java Virtual Machine time zone. Use getYearLocalTime() and getYearUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getYear",
    "scope": "Legacy"
  },{
    "name": "getYearLocalTime",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getYearLocalTime",
    "scope": "Legacy"
  },{
    "name": "getYearUTC",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getYearUTC",
    "scope": "Legacy"
  },{
    "name": "hasDate",
    "parameters": [],
    "description": "Determines if an object's date is set.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-hasDate",
    "scope": "Legacy"
  },{
    "name": "isDST",
    "parameters": [],
    "description": "Determines if the object's time uses a daylight saving offset",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-isDST",
    "scope": "Legacy"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if a value is a valid date and time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-isValid",
    "scope": "Legacy"
  },{
    "name": "setDayOfMonth",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value. Use setDayOfMonthLocalTime(day) and setDayOfMonthUTC(day) instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDayOfMonth_N",
    "scope": "Legacy"
  },{
    "name": "setDayOfMonthLocalTime",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDayOfMonthLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "setDayOfMonthUTC",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDayOfMonthUTC_N",
    "scope": "Legacy"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDisplayValue_S",
    "scope": "Legacy"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "dateTime",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the dateTime parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDisplayValue_S_S",
    "scope": "Legacy"
  },{
    "name": "setDisplayValueInternal",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets a date and time value using the internal format (yyyy-MM-dd HH:mm:ss) and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDisplayValueInternal_S",
    "scope": "Legacy"
  },{
    "name": "setDisplayValueInternalWithAlternates",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets a date and time value using the internal format (yyyy-MM-dd HH:mm:ss) and the current user's time zone. This method attempts to parse incomplete date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDispValInternalAlt_S",
    "scope": "Legacy"
  },{
    "name": "setGlideDateTime",
    "parameters": [{
      "name": "gDT",
      "values": []
    }],
    "description": "Sets the date and time of the current object using an existing GlideDateTime object. This method is equivalent to instantiating a new object with a GlideDateTime parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setGlideDateTime_GDT",
    "scope": "Legacy"
  },{
    "name": "setInitialValue",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets the date and time. This method is equivalent to setValue(Object).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setInitialValue_S",
    "scope": "Legacy"
  },{
    "name": "setMonth",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to a specified value using the Java Virtual Machine time zone. Use setMonthLocalTime() or setMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setMonth_N",
    "scope": "Legacy"
  },{
    "name": "setMonthLocalTime",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to a specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setMonthLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "setMonthUTC",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to a specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setMonthUTC_N",
    "scope": "Legacy"
  },{
    "name": "setNumericValue",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Sets the date and time to the number of milliseconds since January 1, 1970 00:00:00 GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setNumericValue_N",
    "scope": "Legacy"
  },{
    "name": "setTZ",
    "parameters": [{
      "name": "timeZone",
      "values": []
    }],
    "description": "Sets the time zone of the GlideDateTime object to be the specified time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setTZ_TZ",
    "scope": "Legacy"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets the date and time of the GlideDateTime object. This method is equivalent to setInitialValue().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setValue_O",
    "scope": "Legacy"
  },{
    "name": "setValueUTC",
    "parameters": [{
      "name": "dateTime",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the UTC time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the dateTime parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setValueUTC_S_S",
    "scope": "Legacy"
  },{
    "name": "setYear",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to a specified value using the Java Virtual Machine time zone. Use setYearLocalTime() or setYearUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setYear_N",
    "scope": "Legacy"
  },{
    "name": "setYearLocalTime",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to a specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setYearLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "setYearUTC",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to a specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setYearUTC_N",
    "scope": "Legacy"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "start",
      "values": []
    },{
      "name": "end",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideDateTime values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-subtract_GDT_GDT",
    "scope": "Legacy"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Subtracts a specified amount of time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-subtract_GT",
    "scope": "Legacy"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Subtracts a specified number of milliseconds from the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-subtract_N",
    "scope": "Legacy"
  },{
    "name": "toString",
    "parameters": [],
    "description": "Returns the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default. This method is equivalent to getValue().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-toString",
    "scope": "Legacy"
  },{
    "name": "add",
    "parameters": [{
      "name": "gd",
      "values": []
    }],
    "description": "Adds a GlideTime object to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAdd_GlideTime_gd",
    "scope": "Scoped"
  },{
    "name": "add",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Adds the specified number of milliseconds to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAdd_Number",
    "scope": "Scoped"
  },{
    "name": "addDaysLocalTime",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddDaysLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addDaysUTC",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddDaysUTC_Number",
    "scope": "Scoped"
  },{
    "name": "addMonthsLocalTime",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddMonthsLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addMonthsUTC",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddMonthsUTC_Number",
    "scope": "Scoped"
  },{
    "name": "addSeconds",
    "parameters": [{
      "name": "seconds",
      "values": []
    }],
    "description": "Adds the specified number of seconds to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddSeconds_Number",
    "scope": "Scoped"
  },{
    "name": "addWeeksLocalTime",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddWeeksLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addWeeksUTC",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddWeeksUTC_Number",
    "scope": "Scoped"
  },{
    "name": "addYearsLocalTime",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts years using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddYearsLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addYearsUTC",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The date and time value stored by GlideDateTime object is interpreted as being in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddYearsUTC_Number",
    "scope": "Scoped"
  },{
    "name": "after",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs after the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-after_GDT",
    "scope": "Scoped"
  },{
    "name": "before",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs before the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-before_GDT",
    "scope": "Scoped"
  },{
    "name": "compareTo",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Compares two date and time objects to determine whether they are equivalent or one occurs before or after the other.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeCompareTo_Object_o",
    "scope": "Scoped"
  },{
    "name": "equals",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Compares a datetime with an existing value for equality.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeEquals_Object",
    "scope": "Scoped"
  },{
    "name": "getDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDate",
    "scope": "Scoped"
  },{
    "name": "getDayOfMonthLocalTime",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfMonthLocalTime",
    "scope": "Scoped"
  },{
    "name": "getDayOfMonthUTC",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfMonthUTC",
    "scope": "Scoped"
  },{
    "name": "getDayOfWeekLocalTime",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfWeekLocalTime",
    "scope": "Scoped"
  },{
    "name": "getDayOfWeekUTC",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfWeekUTC",
    "scope": "Scoped"
  },{
    "name": "getDaysInMonthLocalTime",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDaysInMonthLocalTime",
    "scope": "Scoped"
  },{
    "name": "getDaysInMonthUTC",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDaysInMonthUTC",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the date and time value in the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Gets the display value in the internal format (yyyy-MM-dd HH:mm:ss).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDisplayValueInternal",
    "scope": "Scoped"
  },{
    "name": "getDSTOffset",
    "parameters": [],
    "description": "Gets the amount of time that daylight saving time is offset.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDSTOffset",
    "scope": "Scoped"
  },{
    "name": "getErrorMsg",
    "parameters": [],
    "description": "Gets the current error message.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetErrorMsg",
    "scope": "Scoped"
  },{
    "name": "getInternalFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in the local time zone and in the internal format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-getInternalFormatedLocalTime",
    "scope": "Scoped"
  },{
    "name": "getLocalDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetLocalDate",
    "scope": "Scoped"
  },{
    "name": "getLocalTime",
    "parameters": [],
    "description": "Returns a GlideTime object that represents the time portion of the GlideDateTime object in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetLocalTime",
    "scope": "Scoped"
  },{
    "name": "getMonthLocalTime",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetMonthLocalTime",
    "scope": "Scoped"
  },{
    "name": "getMonthUTC",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetMonthUTC",
    "scope": "Scoped"
  },{
    "name": "getNumericValue",
    "parameters": [],
    "description": "Gets the number of milliseconds since January 1, 1970, 00:00:00 GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetNumericValue",
    "scope": "Scoped"
  },{
    "name": "getTime",
    "parameters": [],
    "description": "Returns a GlideTime object that represents the time portion of the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetTime",
    "scope": "Scoped"
  },{
    "name": "getTZOffset",
    "parameters": [],
    "description": "Gets the time zone offset in milliseconds.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetTZOffset",
    "scope": "Scoped"
  },{
    "name": "getUserFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in the local time zone and in the user's format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-getUserFormattedLocalTime",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetValue",
    "scope": "Scoped"
  },{
    "name": "getWeekOfYearLocalTime",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the current user's time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetWeekOfYearLocalTime",
    "scope": "Scoped"
  },{
    "name": "getWeekOfYearUTC",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the UTC time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetWeekOfYearUTC",
    "scope": "Scoped"
  },{
    "name": "getYearLocalTime",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetYearLocalTime",
    "scope": "Scoped"
  },{
    "name": "getYearUTC",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetYearUTC",
    "scope": "Scoped"
  },{
    "name": "hasDate",
    "parameters": [],
    "description": "Determines if an object's date is set.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeHasDate",
    "scope": "Scoped"
  },{
    "name": "isDST",
    "parameters": [],
    "description": "Determines if an object's time uses a daylight saving offset.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeIsDST",
    "scope": "Scoped"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if a value is a valid date and time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeIsValid",
    "scope": "Scoped"
  },{
    "name": "onOrAfter",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs on or after the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-onOrAfter_GDT",
    "scope": "Scoped"
  },{
    "name": "onOrBefore",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs on or before the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-onOrBefore_GDT",
    "scope": "Scoped"
  },{
    "name": "setDayOfMonthLocalTime",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDayOfMonthLocalTime_Number_day",
    "scope": "Scoped"
  },{
    "name": "setDayOfMonthUTC",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDayOfMonthUTC_Number_day",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDisplayValue_String_asDisplayed",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "value",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the value parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDisplayValue_String_value_String_format",
    "scope": "Scoped"
  },{
    "name": "setDisplayValueInternal",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Sets a date and time value using the internal format (yyyy-MM-dd HH:mm:ss) and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDisplayValueInternal_String_value",
    "scope": "Scoped"
  },{
    "name": "setGlideDateTime",
    "parameters": [{
      "name": "g",
      "values": []
    }],
    "description": "Sets the date and time of the current object using an existing GlideDateTime object. This method is equivalent to instantiating a new object with a GlideDateTime parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTime_GlideDateTime_g",
    "scope": "Scoped"
  },{
    "name": "setMonthLocalTime",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to the specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetMonthLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "setMonthUTC",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to the specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetMonthUTC_Number",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the date and time of the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeHasDateMethod",
    "scope": "Scoped"
  },{
    "name": "setValueUTC",
    "parameters": [{
      "name": "dt",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the UTC time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the dt parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetValueUTC_String_dt_String_format",
    "scope": "Scoped"
  },{
    "name": "setYearLocalTime",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to the specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetYearLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "setYearUTC",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to the specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetYearUTC_Number",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "start",
      "values": []
    },{
      "name": "end",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideDateTime values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSubtract_GlideDateTime_GlideDate_Time",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Subtracts a specified amount of time from the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSubtract_GlideTime",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Subtracts the specified number of milliseconds from the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSubtract_Number",
    "scope": "Scoped"
  },{
    "name": "toString",
    "parameters": [],
    "description": "Gets the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default. This method is equivalent to getValue().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeToString",
    "scope": "Scoped"
  }]
}, {
  "text": "qc",
  "functions": [{
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a two or three parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addOrCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a two or three parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addOrCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }, {
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a 2-or-3 parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionOrAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a 2-or-3 parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionOrAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }]
}, {
  "text": "session",
  "functions": [{
    "name": "clearClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    }],
    "description": "Clears a session client value previously set with putClientData(). This method is used in a client script to clear data values that were set by a server script using the putClientData() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionClearClientData_String",
    "scope": "Legacy"
  },{
    "name": "getClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    }],
    "description": "Returns a session client value previously set with putClientData(). This method is used in a client script to retrieve data values that were set by a server script that used the putClientData() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetClientData_String",
    "scope": "Legacy"
  },{
    "name": "getLanguage",
    "parameters": [],
    "description": "Gets the session's language code.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetLanguage",
    "scope": "Legacy"
  },{
    "name": "getRoles",
    "parameters": [],
    "description": "Gets a list of roles for the current user. The list of roles does not reflect any changes made during the current user session. To get the updated list of roles, the user must log out and log back in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetRoles",
    "scope": "Legacy"
  },{
    "name": "getTimeZoneName",
    "parameters": [],
    "description": "Gets the name of the session's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetTimeZoneName",
    "scope": "Legacy"
  },{
    "name": "isInteractive",
    "parameters": [],
    "description": "Determines if the current session is interactive. An interactive session is one that involves an end-user interacting with a user interface that then retrieves information from a server. An example of this type of session is when a user logs in using the log-in screen or uses a form to query a data store. A non-interactive session is one that only involves programmatic interaction with a server such as a SOAP request to retrieve data.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionIsInteractive",
    "scope": "Legacy"
  },{
    "name": "isLoggedIn",
    "parameters": [],
    "description": "Determines if the current user is currently logged in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionIsLoggedIn",
    "scope": "Legacy"
  },{
    "name": "putClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    },{
      "name": "paramValue",
      "values": []
    }],
    "description": "Sets a session client value that can be retrieved with getClientData(). This method is used in a server side script that runs when a form is created.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionPutClientData_String_String",
    "scope": "Legacy"
  },{
    "name": "getClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    }],
    "description": "Retrieves a session client value previously set with putClientData(). This method is used in a client script to retrieve data values that were set by a server script that used the putClientData() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetClientData_String",
    "scope": "Scoped"
  },{
    "name": "getClientIP",
    "parameters": [],
    "description": "Returns the client IP address.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetClientIP",
    "scope": "Scoped"
  },{
    "name": "getCurrentApplicationId",
    "parameters": [],
    "description": "Returns the application currently selected in the application picker. This method requires admin privileges.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetCurrentApplicationId",
    "scope": "Scoped"
  },{
    "name": "getLanguage",
    "parameters": [],
    "description": "Returns the session's language code.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetLanguage",
    "scope": "Scoped"
  },{
    "name": "getSessionToken",
    "parameters": [],
    "description": "Returns the session token.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetSessionToken",
    "scope": "Scoped"
  },{
    "name": "getTimeZoneName",
    "parameters": [],
    "description": "Returns the name of the session's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetTimeZoneName",
    "scope": "Scoped"
  },{
    "name": "getUrlOnStack",
    "parameters": [],
    "description": "Returns the URL on the stack. Returns null if the stack is empty.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetUrlOnStack",
    "scope": "Scoped"
  },{
    "name": "isImpersonating",
    "parameters": [],
    "description": "Returns true if the user is impersonating another user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSSN-isImpersonating",
    "scope": "Scoped"
  },{
    "name": "isInteractive",
    "parameters": [],
    "description": "Returns true if the session is interactive. An interactive session is one that involves an end-user interacting with a user interface that then retrieves information from a server. An example of this type of session is when a user logs in using the log-in screen or uses a form to query a data store. A non-interactive session is one that only involves programmatic interaction with a server such as a SOAP request to retrieve data.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionIsInteractive",
    "scope": "Scoped"
  },{
    "name": "isLoggedIn",
    "parameters": [],
    "description": "Returns true if the user is logged in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionIsLoggedIn",
    "scope": "Scoped"
  },{
    "name": "putClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    },{
      "name": "paramValue",
      "values": []
    }],
    "description": "Sets a session client value that can be retrieved with getClientData(). This method is used in a server side script that runs when a form is created.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionPutClientData_String_String",
    "scope": "Scoped"
  }]
}, {
  "text": "duration",
  "functions": [{
    "name": "add",
    "parameters": [{
      "name": "duration",
      "values": []
    }],
    "description": "Add the specified duration to the object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationAdd_GlideDuration",
    "scope": "Scoped"
  },{
    "name": "getByFormat",
    "parameters": [{
      "name": "format",
      "values": []
    }],
    "description": "Gets the duration in the specified format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetByFormat_String",
    "scope": "Scoped"
  },{
    "name": "getDayPart",
    "parameters": [],
    "description": "Gets the number of days.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetDayPart",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the display value of the duration in number of days, hours, and minutes.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDurationValue",
    "parameters": [],
    "description": "Gets the duration value in \"d HH:mm:ss\" format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetDurationValue",
    "scope": "Scoped"
  },{
    "name": "getRoundedDayPart",
    "parameters": [],
    "description": "Gets the rounded number of days. If the time part is more than 12 hours, the return value is rounded up. Otherwise, it is rounded down.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetRoundedDayPart",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the internal value of the GlideDuration object. GlideDuration objects store the duration as a date and time from January 1, 1970, 00:00:00.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetValue",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets the display value.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationSetDisplayValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the internal value of the GlideDuration object. GlideDuration objects store the duration as a date and time from January 1, 1970, 00:00:00.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationSetValue_Object",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "duration",
      "values": []
    }],
    "description": "Subtracts the specified duration from the current duration.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationSubtract_GlideDuration",
    "scope": "Scoped"
  }]
}, {
  "text": "schedule",
  "functions": [{
    "name": "add",
    "parameters": [{
      "name": "startDate",
      "values": []
    },{
      "name": "offSet",
      "values": []
    }],
    "description": "Adds a new schedule segment to the current schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleAdd_GlideDateTime_GlideDuration",
    "scope": "Scoped"
  },{
    "name": "duration",
    "parameters": [{
      "name": "startDate",
      "values": []
    },{
      "name": "endDate",
      "values": []
    }],
    "description": "Determines the elapsed time in the schedule between two date time values using the timezone of the schedule or, if that is not specified, the timezone of the session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleDuration_GlideDateTime_GlideDateTime",
    "scope": "Scoped"
  },{
    "name": "getName",
    "parameters": [],
    "description": "Retrieves the schedule name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleGetName",
    "scope": "Scoped"
  },{
    "name": "isInSchedule",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Determines if the given datetime is within the current schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleIsInSchedule_GlideDateTime",
    "scope": "Scoped"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if the current schedule is valid. A schedule is valid if it has at least one schedule span.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleIsValid",
    "scope": "Scoped"
  },{
    "name": "load",
    "parameters": [{
      "name": "sysID",
      "values": []
    },{
      "name": "timeZone",
      "values": []
    },{
      "name": "excludeSpanID",
      "values": []
    }],
    "description": "Loads a schedule with the schedule information.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleLoad_String_String_String",
    "scope": "Scoped"
  },{
    "name": "setTimeZone",
    "parameters": [{
      "name": "timeZone",
      "values": []
    }],
    "description": "Sets the timezone for the current schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleSetTimeZone_String",
    "scope": "Scoped"
  },{
    "name": "whenNext",
    "parameters": [{
      "name": "time",
      "values": []
    },{
      "name": "timeZone",
      "values": []
    }],
    "description": "Determines how much time (in milliseconds) until start time of the next schedule item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleWhenNext_GlideDateTime_String",
    "scope": "Scoped"
  }]
}, {
  "text": "gd",
  "functions": [{
    "name": "getByFormat",
    "parameters": [{
      "name": "format",
      "values": []
    }],
    "description": "Gets the date in the specified date format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetByFormat_String",
    "scope": "Scoped"
  },{
    "name": "getDayOfMonthNoTZ",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDate object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGD_getDayOfMonthNoTZ",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the date in the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Gets the display value in the internal format (yyyy-MM-dd).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetDisplayValueInternal",
    "scope": "Scoped"
  },{
    "name": "getMonthNoTZ",
    "parameters": [],
    "description": "Gets the month stored by the GlideDate object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGD-getMonthNoTZ",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the date value stored in the database by the GlideDate object in the internal format, yyyy-MM-dd, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetValue",
    "scope": "Scoped"
  },{
    "name": "getYearNoTZ",
    "parameters": [],
    "description": "Gets the year stored by the GlideDate object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGD-getYearNoTZ",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a date value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateSetDisplayValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the date of the GlideDate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateSetValue_String",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "start",
      "values": []
    },{
      "name": "end",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideDate values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateSubtract_GlideDate_GlideDate",
    "scope": "Scoped"
  }]
}, {
  "text": "gt",
  "functions": [{
    "name": "getByFormat",
    "parameters": [{
      "name": "format",
      "values": []
    }],
    "description": "Gets the time in the specified format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetByFormat_String",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the time in the current user's display format and time zone. When designing business rules or script includes remember that this method may return values in different formats for different users.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Gets the display value in the current user's time zone and the internal format (HH:mm:ss).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetDisplayValueInternal",
    "scope": "Scoped"
  },{
    "name": "getHourLocalTime",
    "parameters": [],
    "description": "Returns the hours part of the time using the local time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getHourLocalTime",
    "scope": "Scoped"
  },{
    "name": "getHourOfDayLocalTime",
    "parameters": [],
    "description": "Returns the hours part of the time using the local time zone. The number of hours is based on a 24 hour clock.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getHourOfDayLocalTime",
    "scope": "Scoped"
  },{
    "name": "getHourOfDayUTC",
    "parameters": [],
    "description": "Returns the hours part of the time using the UTC time zone. The number of hours is based on a 24 hour clock.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getHourOfDayUTC",
    "scope": "Scoped"
  },{
    "name": "getHourUTC",
    "parameters": [],
    "description": "Returns the hours part of the time using the UTC time zone. The number of hours is based on a 12 hour clock. Noon and midnight are represented by 0, not 12.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_getHourUTC",
    "scope": "Scoped"
  },{
    "name": "getMinutesLocalTime",
    "parameters": [],
    "description": "Returns the number of minutes using the local time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getMinutesLocalTime",
    "scope": "Scoped"
  },{
    "name": "getMinutesUTC",
    "parameters": [],
    "description": "Returns the number of minutes in the hour based on the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getMinutesUTC",
    "scope": "Scoped"
  },{
    "name": "getSeconds",
    "parameters": [],
    "description": "Returns the number of seconds in the current minute.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getSeconds",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the time value stored in the database by the GlideTime object in the internal format, HH:mm:ss, and the system time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetValue",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a time value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeSetDisplayValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the time of the GlideTime object in the internal time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeSetValue_String",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "startTime",
      "values": []
    },{
      "name": "endTime",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideTime object values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeSubtract_GlideTime_GlideTime",
    "scope": "Scoped"
  }]
}, {
  "text": "ga",
  "functions": [{
    "name": "addParam",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Set a name-value pair to be sent to the processor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-addParam_S_S",
    "scope": "Client"
  },{
    "name": "getJSON",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Call the processor asynchronously and get the answer element of the response in JSON format",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getJSON_F",
    "scope": "Client"
  },{
    "name": "getParam",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Returns the value of the specified parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getParam_S",
    "scope": "Client"
  },{
    "name": "getParams",
    "parameters": [],
    "description": "Returns the name-value pairs for the request.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getParams",
    "scope": "Client"
  },{
    "name": "getProcessor",
    "parameters": [],
    "description": "Returns the server-side script that the request is going to use. This returns the 'sysparm_processor' parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getProcessor",
    "scope": "Client"
  },{
    "name": "getURL",
    "parameters": [],
    "description": "Returns the target URL.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getURL",
    "scope": "Client"
  },{
    "name": "getXML",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Call the processor asynchronously and get the response in XML format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getXML_F",
    "scope": "Client"
  },{
    "name": "getXMLAnswer",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Call the processor asynchronously and get the answer element of the response in XML format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getXMLAnswer_F",
    "scope": "Client"
  },{
    "name": "setErrorCallback",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Sets a callback function to be called if the Ajax request fails.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-setErrorCallback_F",
    "scope": "Client"
  },{
    "name": "setProcessor",
    "parameters": [{
      "name": "serverScript",
      "values": []
    }],
    "description": "Sets the request's server-side script. The server-side script is also called the processor. This sets the 'sysparm_processor' parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-setProcessor_S",
    "scope": "Client"
  }]
},{
  "text": "gdw",
  "functions": [{
    "name": "adjustBodySize",
    "parameters": [],
    "description": "Adjusts the body height of a dialog window to be the window height minus the header height. You typically call this method after calling GlideDialogWindow - setSize().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GDW-adjustBodySize",
    "scope": "Client"
  },{
    "name": "destroy",
    "parameters": [],
    "description": "Closes the dialog window.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-destroy_",
    "scope": "Client"
  },{
    "name": "render",
    "parameters": [],
    "description": "Renders the dialog window.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-render",
    "scope": "Client"
  },{
    "name": "setPreference",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets a given window property to a specified value. Any window property can be set using this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-setPreference_S_S",
    "scope": "Client"
  },{
    "name": "setSize",
    "parameters": [{
      "name": "width",
      "values": []
    },{
      "name": "height",
      "values": []
    }],
    "description": "Sets the size of the dialog window. If you do not pass width and height parameters, a default size is used.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-setSize_N_N",
    "scope": "Client"
  },{
    "name": "setTitle",
    "parameters": [{
      "name": "title",
      "values": []
    }],
    "description": "Sets the title of the dialog window.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-setTitle_S",
    "scope": "Client"
  }]
},{
  "text": "g_list",
  "functions": [{
    "name": "addFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Adds a single term to the list query filter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-addFilter_S",
    "scope": "Client / v2"
  },{
    "name": "get",
    "parameters": [{
      "name": "DOMelement",
      "values": []
    }],
    "description": "Returns the GlideList2 object for the list that contains the specified item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-get_O",
    "scope": "Client / v2"
  },{
    "name": "get",
    "parameters": [{
      "name": "ListID",
      "values": []
    }],
    "description": "Returns the GlideList2 object for the list specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-get_S",
    "scope": "Client / v2"
  },{
    "name": "getChecked",
    "parameters": [],
    "description": "Returns a comma-separated list of the sys_ids for the items that are checked in the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getChecked",
    "scope": "Client / v2"
  },{
    "name": "getFixedQuery",
    "parameters": [],
    "description": "Returns the sysparm_fixed query. A fixed query is the part of the query that cannot be removed from the breadcrumb (i.e., it is fixed for the user). It is specified by including a sysparm_fixed_query parameter for the application module.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getFixedQuery",
    "scope": "Client / v2"
  },{
    "name": "getGroupBy",
    "parameters": [],
    "description": "Returns the field or comma-separated list of fields that are used to group the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getGroupBy",
    "scope": "Client / v2"
  },{
    "name": "getListName",
    "parameters": [],
    "description": "Returns the name of the list, which is usually the table name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getListName",
    "scope": "Client / v2"
  },{
    "name": "getOrderBy",
    "parameters": [],
    "description": "Returns the first field used to order the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getOrderBy",
    "scope": "Client / v2"
  },{
    "name": "getParentTable",
    "parameters": [],
    "description": "Returns the name of the parent table for a related list (the table associated with the form).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getParentTable",
    "scope": "Client / v2"
  },{
    "name": "getQuery",
    "parameters": [{
      "name": "orderBy",
      "values": []
    },{
      "name": "groupBy",
      "values": []
    },{
      "name": "fixed",
      "values": []
    },{
      "name": "all",
      "values": []
    }],
    "description": "Returns the encoded query string for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getQuery_B_B_B_B",
    "scope": "Client / v2"
  },{
    "name": "getRelated",
    "parameters": [],
    "description": "Returns the related list field that associates the related list to the parent form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getRelated",
    "scope": "Client / v2"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Returns the table name for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getTableName",
    "scope": "Client / v2"
  },{
    "name": "getTitle",
    "parameters": [],
    "description": "Returns the list title.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getTitle",
    "scope": "Client / v2"
  },{
    "name": "getView",
    "parameters": [],
    "description": "Returns the view used to display the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getView",
    "scope": "Client / v2"
  },{
    "name": "isUserList",
    "parameters": [],
    "description": "Returns true if the list has been personalized by the user by choosing the list mechanic and changing the list layout.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-isUserList",
    "scope": "Client / v2"
  },{
    "name": "refresh",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "additionalParms",
      "values": []
    }],
    "description": "Refreshes the list. The orderBy part of the list filter is ignored so that the list uses its natural ordering when it is refreshed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-refresh_N_S",
    "scope": "Client / v2"
  },{
    "name": "refreshWithOrderBy",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "description",
      "values": []
    }],
    "description": "Refreshes the list. The orderBy part of the list filter is included if it is specified for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-refreshWithOrderBy_N_S",
    "scope": "Client / v2"
  },{
    "name": "setFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Sets the encoded query string for the list, ignoring the orderBy and groupBy parts of the query string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setFilter_S",
    "scope": "Client / v2"
  },{
    "name": "setFilterAndRefresh",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Sets the encoded query string for the list, including the orderBy and groupBy if specified, and then refreshes the list using the new filter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setFilterAndRefresh_S",
    "scope": "Client / v2"
  },{
    "name": "setFirstRow",
    "parameters": [{
      "name": "rowNum",
      "values": []
    }],
    "description": "Sets the first row that appears in the list when the list is refreshed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setFirstRow_N",
    "scope": "Client / v2"
  },{
    "name": "setGroupBy",
    "parameters": [{
      "name": "groupBy",
      "values": []
    }],
    "description": "Sets the groupBy criteria for the list, for a single field or multiple fields. For a single field, use field or groupByField. The groupBy prefix is optional. For multiple fields, use field1^field2^field3 or groupByField1^groupByField2^groupByField3.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setGroupBy_S",
    "scope": "Client / v2"
  },{
    "name": "setOrderBy",
    "parameters": [{
      "name": "orderBy",
      "values": []
    }],
    "description": "Sets the orderBy criteria for the list. For a single order by field use orderBy field or orderByDescField. For multiple fields, use orderByField1^orderByField2^orderByField3. orderBy specifies ascending order and orderByDesc specifies descending. These prefix strings are optional. If not specified orderBy is assumed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setOrderBy_S",
    "scope": "Client / v2"
  },{
    "name": "setRowsPerPage",
    "parameters": [{
      "name": "rows",
      "values": []
    }],
    "description": "Sets the number of rows per page to display.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setRowsPerPage_N",
    "scope": "Client / v2"
  },{
    "name": "showHideGroups",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Shows or hides all the groups within the list and saves the current collapsed/expanded state of the groups as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-showHideGroups_B",
    "scope": "Client / v2"
  },{
    "name": "showHideList",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Displays or hides the list and saves the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-showHideList_B",
    "scope": "Client / v2"
  },{
    "name": "sort",
    "parameters": [{
      "name": "field",
      "values": []
    }],
    "description": "Sorts the list in ascending order and saves the choice.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-sort_S",
    "scope": "Client / v2"
  },{
    "name": "sortDescending",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "amount",
      "values": []
    }],
    "description": "Sorts the list in descending order and saves the choice.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-sortDescending_S_N",
    "scope": "Client / v2"
  },{
    "name": "toggleList",
    "parameters": [],
    "description": "Toggles the display of the list and saves the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-toggleList",
    "scope": "Client / v2"
  },{
    "name": "toggleListNoPref",
    "parameters": [],
    "description": "Toggles the display of the list but does not save the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-toggleListNoPref",
    "scope": "Client / v2"
  },{
    "name": "addFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Adds a single term to the list query filter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-addFilter_S",
    "scope": "Client / v3"
  },{
    "name": "get",
    "parameters": [{
      "name": "DomElement",
      "values": []
    }],
    "description": "Returns the GlideList object for the specified DOM element.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-get_O",
    "scope": "Client / v3"
  },{
    "name": "get",
    "parameters": [{
      "name": "listId",
      "values": []
    }],
    "description": "Returns the GlideList object for specified list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-get_S",
    "scope": "Client / v3"
  },{
    "name": "getChecked",
    "parameters": [],
    "description": "Returns a comma-separated list of sys_ids for checked items in the list. Does not return items that are not allowed to be executed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getChecked",
    "scope": "Client / v3"
  },{
    "name": "getFixedQuery",
    "parameters": [],
    "description": "Returns the sysparm_fixed query. The fixed query is the part of the query that cannot be removed from the breadcrumb (i.e., it is fixed for the user). It is specified by including a sysparm_fixed_query parameter for the application module.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getFixedQuery",
    "scope": "Client / v3"
  },{
    "name": "getFormTarget",
    "parameters": [],
    "description": "Returns the form's target attribute.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getFormTarget",
    "scope": "Client / v3"
  },{
    "name": "getGroupBy",
    "parameters": [],
    "description": "Returns the field or comma-separated list of fields that are used to group the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getGroupBy",
    "scope": "Client / v3"
  },{
    "name": "getListName",
    "parameters": [],
    "description": "Returns the name of the list, which is usually the table name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getListName",
    "scope": "Client / v3"
  },{
    "name": "getOrderBy",
    "parameters": [],
    "description": "Returns the first field used to order the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getOrderBy",
    "scope": "Client / v3"
  },{
    "name": "getParentTable",
    "parameters": [],
    "description": "Returns the name of the parent table (the table associated with the form).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getParentTable",
    "scope": "Client / v3"
  },{
    "name": "getQuery",
    "parameters": [{
      "name": "options",
      "values": []
    }],
    "description": "Returns the encoded query string for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getQuery_O",
    "scope": "Client / v3"
  },{
    "name": "getReferringUrl",
    "parameters": [],
    "description": "Returns the referring URL.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getReferringUrl",
    "scope": "Client / v3"
  },{
    "name": "getRelated",
    "parameters": [],
    "description": "Returns the related list field that associates the related list to the parent form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRelated",
    "scope": "Client / v3"
  },{
    "name": "getRelatedListType",
    "parameters": [],
    "description": "Returns the related list type.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRelatedListType",
    "scope": "Client / v3"
  },{
    "name": "getRelationshipId",
    "parameters": [],
    "description": "Returns the relationship record id, if this is type REL related list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRelationshipId",
    "scope": "Client / v3"
  },{
    "name": "getRowCount",
    "parameters": [],
    "description": "Returns the number of rows returned by the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRowCount",
    "scope": "Client / v3"
  },{
    "name": "getRowsPerPage",
    "parameters": [],
    "description": "Returns the number of rows to be displayed on a page.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRowsPerPage",
    "scope": "Client / v3"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Returns the table name of the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getTableName",
    "scope": "Client / v3"
  },{
    "name": "getTitle",
    "parameters": [],
    "description": "Returns the list title.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getTitle",
    "scope": "Client / v3"
  },{
    "name": "getView",
    "parameters": [],
    "description": "Returns the view used to display the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getView",
    "scope": "Client / v3"
  },{
    "name": "isUserList",
    "parameters": [],
    "description": "Returns true if the list has been personalized by the user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-isUserList",
    "scope": "Client / v3"
  },{
    "name": "refresh",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "additionalParams",
      "values": []
    }],
    "description": "Refreshes the list. The orderBy part of the list filter is ignored so that the list's natural ordering is used.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-refresh_N_O",
    "scope": "Client / v3"
  },{
    "name": "refreshWithOrderBy",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "additionalParams",
      "values": []
    }],
    "description": "Refreshes the list using the orderBy fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-refreshWithOrderBy_N_O",
    "scope": "Client / v3"
  },{
    "name": "setFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    },{
      "name": "saveOrderBy",
      "values": []
    },{
      "name": "saveGroupBy",
      "values": []
    }],
    "description": "Sets the encoded query string for the list ignoring the orderBy and groupBy parts of the query string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFilter_S_B_B",
    "scope": "Client / v3"
  },{
    "name": "setFilterAndRefresh",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Sets the encoded query string for the list, and then refreshes the list using the new filter. This preserves the groupby and orderby parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFilterAndRefresh_S",
    "scope": "Client / v3"
  },{
    "name": "setFirstRow",
    "parameters": [{
      "name": "firstRow",
      "values": []
    }],
    "description": "Sets the first row to be displayed when the list is refreshed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFirstRow_N",
    "scope": "Client / v3"
  },{
    "name": "setFormTarget",
    "parameters": [{
      "name": "target",
      "values": []
    }],
    "description": "Specifies where to display the response from the form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFormTarget_S",
    "scope": "Client / v3"
  },{
    "name": "setGroupBy",
    "parameters": [{
      "name": "groupBy",
      "values": []
    }],
    "description": "Sets the groupBy criteria for the list, for a single field or multiple fields. For a single field, use field or groupByField. The groupBy prefix is optional. For multiple fields use field1^field2^field3 or groupByField1^groupByField2^groupByField3.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setGroupBy_S",
    "scope": "Client / v3"
  },{
    "name": "setOrderBy",
    "parameters": [{
      "name": "orderBy",
      "values": []
    }],
    "description": "Sets the orderBy criteria for the list. For a single order by field use orderBy field or orderByDescField. For multiple fields, use orderByField1^orderByField2^orderByField3. orderBy specifies ascending order and orderByDesc specifies descending. These prefix strings are optional. If not specified orderBy is assumed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setOrderBy_S",
    "scope": "Client / v3"
  },{
    "name": "setReferringUrl",
    "parameters": [{
      "name": "url",
      "values": []
    }],
    "description": "Sets the parent form referring url.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setReferringUrl_S",
    "scope": "Client / v3"
  },{
    "name": "setRowsPerPage",
    "parameters": [{
      "name": "numRows",
      "values": []
    }],
    "description": "Set the number of rows to display on a page.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setRowsPerPage_N",
    "scope": "Client / v3"
  },{
    "name": "showHideGroups",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Displays or hides all of the groups within the list and saves the current collapsed/expanded state of the groups as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-showHideGroups_B",
    "scope": "Client / v3"
  },{
    "name": "showHideList",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Displays or hides the list and saves the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-showHideList_B",
    "scope": "Client / v3"
  },{
    "name": "sort",
    "parameters": [{
      "name": "field",
      "values": []
    }],
    "description": "Sort the list in ascending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-sort_S",
    "scope": "Client / v3"
  },{
    "name": "sortDescending",
    "parameters": [{
      "name": "field",
      "values": []
    }],
    "description": "Sorts the list in descending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-sortDescending_S",
    "scope": "Client / v3"
  },{
    "name": "toggleList",
    "parameters": [],
    "description": "Toggles the list display between collapsed and expanded, and saves the state as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-toggleList",
    "scope": "Client / v3"
  },{
    "name": "toggleListNoPref",
    "parameters": [],
    "description": "Toggles the list display between collapsed and expanded, but does not save the state as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-toggleListNoPref",
    "scope": "Client / v3"
  }]
},{
  "text": "g_menu",
  "functions": [{
    "name": "clearImage",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Clears the image for an item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-clearImage_GMI",
    "scope": "Client"
  },{
    "name": "clearSelected",
    "parameters": [],
    "description": "Clears any selection images from items in the menu.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-clearSelected",
    "scope": "Client"
  },{
    "name": "getItem",
    "parameters": [{
      "name": "itemID",
      "values": []
    }],
    "description": "Returns a menu item by item ID. It can be necessary to find an item in a menu so that it can be changed before being displayed. Each menu item may be assigned a unique ID when the menu item is created (either from a UI Context Menu entry or from the addAction() method in the Dynamic Script Action).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-getItem_S",
    "scope": "Client"
  },{
    "name": "setDisabled",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Disables a menu item so that it cannot be selected. The disabled menu item is displayed in a lighter color (grayed out) to indicate it is disabled.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setDisabled_GMI",
    "scope": "Client"
  },{
    "name": "setEnabled",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Enables the specified menu item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setEnabled_GMI",
    "scope": "Client"
  },{
    "name": "setHidden",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Hides the specified menu item. When hiding menu items, the separator bars are not adjusted, so it is possible to end up with the menu showing two separators in a row.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setHidden_GMI",
    "scope": "Client"
  },{
    "name": "setImage",
    "parameters": [{
      "name": "item",
      "values": []
    },{
      "name": "imgSrc",
      "values": []
    }],
    "description": "Sets an image for an item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setImage_GMI_S",
    "scope": "Client"
  },{
    "name": "setLabel",
    "parameters": [{
      "name": "item",
      "values": []
    },{
      "name": "label",
      "values": []
    }],
    "description": "Sets the display label for a menu item. The label may contain HTML.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setLabel_GMI_S",
    "scope": "Client"
  },{
    "name": "setVisible",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Displays the specified item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setVisible_GMI",
    "scope": "Client"
  }]
}, {
  "text": "gr",
  "functions": [{
    "name": "addActiveQuery",
    "parameters": [],
    "description": "Adds a filter to return active records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddActiveQuery",
    "scope": "Legacy"
  },{
    "name": "addDomainQuery",
    "parameters": [{
      "name": "glideRecord",
      "values": []
    }],
    "description": "Changes the domain used for the query from the user's domain to the domain of the provided GlideRecord. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.\nThis function requires the Domain Support - Domain Extensions Installer (com.glide.domain.msp_extensions.installer) plugin.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddDomainQuery_Object",
    "scope": "Legacy"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to other queries that may have been set. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddEncodedQuery_String",
    "scope": "Legacy"
  },{
    "name": "addFunction",
    "parameters": [{
      "name": "function",
      "values": []
    }],
    "description": "Applies a pre-defined GlideDBFunctionBuilder object to a record. Use the GlideDBFunctionBuilder scoped class to define a function. After the function is defined, use the addFunction(Object function) method to apply the function to a record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-addFunction_Object",
    "scope": "Legacy"
  },{
    "name": "addInactiveQuery",
    "parameters": [],
    "description": "Adds a filter to return inactive records. Inactive records have the active flag set to false.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddInactiveQuery",
    "scope": "Legacy"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "table",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. For example, find all the users that are in the database group (users via sys_user_grmember table). Another example would be find all problems that have an assigned incident (problems via the incident.problem_id relationship). This is not a true database join; rather, addJoinQuery() adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddJoinQuery_String",
    "scope": "Legacy"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "table",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. For example, find all the users that are in the database group (users via sys_user_grmember table). Another example would be find all problems that have an assigned incident (problems via the incident.problem_id relationship). This is not a true database join; rather, addJoinQuery() adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddJoinQuery_String_String",
    "scope": "Legacy"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "table",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    },{
      "name": "joinTableField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. For example, find all the users that are in the database group (users via sys_user_grmember table). Another example would be find all problems that have an assigned incident (problems via the incident.problem_id relationship). This is not a true database join; rather, addJoinQuery() adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddJoinQuery_String_String_String",
    "scope": "Legacy"
  },{
    "name": "addNotNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a filter to return records where the specified field is not null.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddNotNullQuery_String",
    "scope": "Legacy"
  },{
    "name": "addNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a filter to return records where the specified field is null.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddNullQuery_String",
    "scope": "Legacy"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the class GlideQueryCondition. addQuery() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as myObj.addQuery('category','Hardware');. The operator in this case is assumed to be \"equal to\". Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddQuery_String_Object_Object",
    "scope": "Legacy"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the class GlideQueryCondition. addQuery() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as myObj.addQuery('category','Hardware');. The operator in this case is assumed to be \"equal to\". Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-AddQuery_String_Object_Object",
    "scope": "Legacy"
  },{
    "name": "applyTemplate",
    "parameters": [{
      "name": "template",
      "values": []
    }],
    "description": "Apply a template record (from sys_template) to the current record. If the specified template is not found, no action is taken.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-applyTemplate_String",
    "scope": "Legacy"
  },{
    "name": "autoSysFields",
    "parameters": [{
      "name": "e",
      "values": []
    }],
    "description": "Enables or disables the update to the fields sys_updated_by, sys_updated_on, sys_mod_count, sys_created_by, and sys_created_on. This is often used for manually updating field values on a record while leaving historical information unchanged.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-autoSysFields_Boolean",
    "scope": "Legacy"
  },{
    "name": "canCreate",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit inserting new records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanCreate",
    "scope": "Legacy"
  },{
    "name": "canDelete",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit deletion of records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanDelete",
    "scope": "Legacy"
  },{
    "name": "canRead",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit reading this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanRead",
    "scope": "Legacy"
  },{
    "name": "canWrite",
    "parameters": [],
    "description": "Determines if the access control rules (which includes the user's role) permit updates to records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-CanWrite",
    "scope": "Legacy"
  },{
    "name": "changes",
    "parameters": [],
    "description": "Determines whether any of the fields in the record have changed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-Changes",
    "scope": "Legacy"
  },{
    "name": "dateNumericValue",
    "parameters": [],
    "description": "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GR-dateNumericValue",
    "scope": "Legacy"
  },{
    "name": "deleteMultiple",
    "parameters": [],
    "description": "Deletes multiple records according to the current \"where\" clause. This method does not delete attachments. Dot-walking is not supported for this method. When using the deleteMultiple() function on referenced tables, all the records in the table are deleted. Also, when using deleteRecord() to cascade delete, prior calls to setWorkflow() on the same GlideRecord object are ignored. Do not use deleteMultiple() on tables with currency fields. Always delete each record individually. Also, do not use this method with the chooseWindow() or setLimit() methods when working with large tables.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-deleteMultiple",
    "scope": "Legacy"
  },{
    "name": "deleteRecord",
    "parameters": [],
    "description": "Deletes a single record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-deleteRecord",
    "scope": "Legacy"
  },{
    "name": "find",
    "parameters": [{
      "name": "columnName",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Returns true if any record has a matching value in the specified column. If found, it also moves to the first record that matches, essentially executing next() until the record is returned.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-Find_String_String",
    "scope": "Legacy"
  },{
    "name": "get",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-get_Object_Object",
    "scope": "Legacy"
  },{
    "name": "get",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-get_Object_Object",
    "scope": "Legacy"
  },{
    "name": "getAttribute",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the dictionary attributes on the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getAttribute_String",
    "scope": "Legacy"
  },{
    "name": "getClassDisplayValue",
    "parameters": [],
    "description": "Returns the table's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getClassDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Retrieves the display value for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getED",
    "parameters": [],
    "description": "Returns the element's descriptor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getED",
    "scope": "Legacy"
  },{
    "name": "getElement",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Retrieves the GlideElement for a specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getElement_String",
    "scope": "Legacy"
  },{
    "name": "getEncodedQuery",
    "parameters": [],
    "description": "Retrieves the encoded query as a string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getEncodedQuery_Boolean",
    "scope": "Legacy"
  },{
    "name": "getEscapedDisplayValue",
    "parameters": [],
    "description": "Retrieves the field value for the display field of the current record and adds escape characters for use in Jelly scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getEscapedDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getFields",
    "parameters": [],
    "description": "Retrieves a Java ArrayList of fields in the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getFields",
    "scope": "Legacy"
  },{
    "name": "getLabel",
    "parameters": [],
    "description": "Retrieves the field's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getLabel",
    "scope": "Legacy"
  },{
    "name": "getLink",
    "parameters": [{
      "name": "noStack",
      "values": []
    }],
    "description": "Retrieves the link for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getLink_Boolean",
    "scope": "Legacy"
  },{
    "name": "getLocation",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Retrieves the current row number.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getLocation_Boolean",
    "scope": "Legacy"
  },{
    "name": "getPlural",
    "parameters": [],
    "description": "Retrieves the plural label of the GlideRecord table. For example, if the table name is \"Change Request,\" this method returns \"Change Requests.\"",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getPlural",
    "scope": "Legacy"
  },{
    "name": "getRecordClassName",
    "parameters": [],
    "description": "Retrieves the class (table) name for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRecordClassName",
    "scope": "Legacy"
  },{
    "name": "getRelatedLists",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Retrieves a list of names and display values of tables that refer to the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRelatedLists_Boolean",
    "scope": "Legacy"
  },{
    "name": "getRelatedTables",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Retrieves a list of names and display values of tables that are referred to by the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRelatedTables_Boolean",
    "scope": "Legacy"
  },{
    "name": "getRowCount",
    "parameters": [],
    "description": "Retrieves the number of rows in the GlideRecord object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRowCount",
    "scope": "Legacy"
  },{
    "name": "getRowNumber",
    "parameters": [],
    "description": "Retrieves the row number set by saveLocation() or setLocation(). To get the current row number, use getLocation().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getRowNumber",
    "scope": "Legacy"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Retrieves the table name associated with this GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getTableName",
    "scope": "Legacy"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Retrieves the string value of an underlying element in a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-getValue_String",
    "scope": "Legacy"
  },{
    "name": "hasAttachments",
    "parameters": [],
    "description": "Determines if the current record has any attachments.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-hasAttachments",
    "scope": "Legacy"
  },{
    "name": "hasNext",
    "parameters": [],
    "description": "Determines if there are any more records in the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-hasNext",
    "scope": "Legacy"
  },{
    "name": "initialize",
    "parameters": [],
    "description": "Creates an empty record suitable for population before an insert.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-initialize",
    "scope": "Legacy"
  },{
    "name": "insert",
    "parameters": [],
    "description": "Inserts a new record using the field values that have been set for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-insert",
    "scope": "Legacy"
  },{
    "name": "insertWithReferences",
    "parameters": [],
    "description": "Inserts a new record and also inserts or updates any related records with the information provided.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-insertWithReferences",
    "scope": "Legacy"
  },{
    "name": "instanceOf",
    "parameters": [{
      "name": "className",
      "values": []
    }],
    "description": "Checks a table for the type\\class of table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-instanceOf_String",
    "scope": "Legacy"
  },{
    "name": "isNewRecord",
    "parameters": [],
    "description": "Determines whether the current record has been inserted into the database. This method returns true only if the newRecord() method has been called. This method is useful for scripted ACL, and in the condition of UI actions, but should not be used in background scripts.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isNewRecord",
    "scope": "Legacy"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if the table exists.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isValid",
    "scope": "Legacy"
  },{
    "name": "isValidField",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Determines if the specified field is defined in the current table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isValidField_String",
    "scope": "Legacy"
  },{
    "name": "isValidRecord",
    "parameters": [],
    "description": "Determines if the current record is valid.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-isValidRecord",
    "scope": "Legacy"
  },{
    "name": "newRecord",
    "parameters": [],
    "description": "Creates a GlideRecord, set the default values for the fields and assign a unique id to the record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-newRecord",
    "scope": "Legacy"
  },{
    "name": "next",
    "parameters": [],
    "description": "Moves to the next record in the GlideRecord. Use this method to iterate through the records returned by a GlideRecord query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-next",
    "scope": "Legacy"
  },{
    "name": "operation",
    "parameters": [],
    "description": "Retrieves the current operation being performed, such as insert, update, delete, etc.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-operation",
    "scope": "Legacy"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Specifies a field name to be used to order the query set. This may be called more than once to order by multiple fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-orderBy_String",
    "scope": "Legacy"
  },{
    "name": "orderByDesc",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Specifies a field used to order the query set in descending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-orderByDesc_String",
    "scope": "Legacy"
  },{
    "name": "query",
    "parameters": [],
    "description": "Runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(). This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(). This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "queryNoDomain",
    "parameters": [],
    "description": "Used in domain separated instances. Similar to query(), runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(), but ignores domains. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-queryNoDomain_Object_Object",
    "scope": "Legacy"
  },{
    "name": "queryNoDomain",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Used in domain separated instances. Similar to query(), runs the query against the table based on the filters specified by addQuery() and addEncodedQuery(), but ignores domains. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-queryNoDomain_Object_Object",
    "scope": "Legacy"
  },{
    "name": "restoreLocation",
    "parameters": [],
    "description": "Sets the current record to be the record that was saved with saveLocation(). If saveLocation() has not been called, the current record is set to be the first record of the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-restoreLocation_Boolean",
    "scope": "Legacy"
  },{
    "name": "saveLocation",
    "parameters": [],
    "description": "Save the current row number so that we can get back to this location using the restoreLocation() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-saveLocation",
    "scope": "Legacy"
  },{
    "name": "setAbortAction",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Sets a flag to indicate if the next database action (insert, update, delete) is to be aborted. Use in an onBefore business rule to prevent the database action from being done. The business rule continues to run after setAbortAction() is called. Calling setAbortAction() does not stop subsequent business rules from executing. Calling this method only prevents the database action from occurring.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setAbortAction_Boolean",
    "scope": "Legacy"
  },{
    "name": "setDateNumericValue",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Sets the duration field to a number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GR-setDateNumericValue_N",
    "scope": "Legacy"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets the specified field to the specified display value. For a reference field this is the display value for the table. For a date/time this is the time in the caller's current timezone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setDisplayValue_String_Object",
    "scope": "Legacy"
  },{
    "name": "setForceUpdate",
    "parameters": [{
      "name": "force",
      "values": []
    }],
    "description": "Updates the record even if fields have not changed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setForceUpdate_Boolean",
    "scope": "Legacy"
  },{
    "name": "setLimit",
    "parameters": [{
      "name": "limit",
      "values": []
    }],
    "description": "Sets the limit for how many records are in the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setLimit_Number",
    "scope": "Legacy"
  },{
    "name": "setLocation",
    "parameters": [{
      "name": "rowNumber",
      "values": []
    }],
    "description": "Sets the current row location.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setLocation_Number",
    "scope": "Legacy"
  },{
    "name": "setNewGuid",
    "parameters": [],
    "description": "Generates a new GUID and sets it as the unique id for the current record. This function applies only to new records. The GUID for an existing record cannot be changed",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setNewGuid",
    "scope": "Legacy"
  },{
    "name": "setNewGuidValue",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Generates a new GUID and sets it as the unique id for the current record, when inserting a new record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setNewGuidValue_String",
    "scope": "Legacy"
  },{
    "name": "setQueryReferences",
    "parameters": [{
      "name": "queryReferences",
      "values": []
    }],
    "description": "Enables or disables using the reference field's display name when querying a reference field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setQueryReferences_Boolean",
    "scope": "Legacy"
  },{
    "name": "setUseEngines",
    "parameters": [{
      "name": "e",
      "values": []
    }],
    "description": "Disable or enable the running of any engines (approval rules / assignment rules).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setUseEngines_Boolean",
    "scope": "Legacy"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets the specified field to the specified value. Normally a script would do a direct assignment, for example, gr.category = value. However, if in a script the element name is a variable, then gr.setValue(elementName, value) can be used. When setting a value, ensure the data type of the field matches the data type of the value you enter. This method cannot be used on journal fields. If the value parameter is null, the record is not updated, and an error is not thrown.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setValue_String_Object",
    "scope": "Legacy"
  },{
    "name": "setWorkflow",
    "parameters": [{
      "name": "e",
      "values": []
    }],
    "description": "Enables or disables the running of business rules that might normally be triggered by subsequent actions. If the e parameter is set to false, an insert/update will not be audited. Auditing only happens when the parameter is set to true for a GlideRecord operation.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-setWorkFlow_Boolean",
    "scope": "Legacy"
  },{
    "name": "update",
    "parameters": [],
    "description": "Updates the GlideRecord with any changes that have been made. If the record does not exist, it is inserted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-update_Object",
    "scope": "Legacy"
  },{
    "name": "update",
    "parameters": [{
      "name": "reason",
      "values": []
    }],
    "description": "Updates the GlideRecord with any changes that have been made. If the record does not exist, it is inserted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-update_Object",
    "scope": "Legacy"
  },{
    "name": "updateMultiple",
    "parameters": [],
    "description": "Updates each GlideRecord in the list with any changes that have been made. When changing field values, use setValue() instead of directly setting the field (field = something). When using updateMultiple(), directly setting the field (gr. state = 4) results in all records in the table being updated instead of just the records returned by the query. Do not use this method with the chooseWindow() or setLimit() methods when working with large tables. This method sets new values and does not clear existing values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-updateMultiple",
    "scope": "Legacy"
  },{
    "name": "updateWithReferences",
    "parameters": [{
      "name": "reason",
      "values": []
    }],
    "description": "Updates a record and also inserts or updates any related records with the information provided.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-updateWithReferences_Object",
    "scope": "Legacy"
  },{
    "name": "_next",
    "parameters": [],
    "description": "Moves to the next record in the GlideRecord. Provides the same functionality as next(), intended to be used in cases where the GlideRecord has a column named next.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-_next",
    "scope": "Legacy"
  },{
    "name": "_query",
    "parameters": [],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-_query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "_query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This will query the GlideRecord table as well as any references of the table. One argument adds a query string. Usually this is performed without arguments, but a name/value pair can be specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideRecord-_query_Object_Object",
    "scope": "Legacy"
  },{
    "name": "addActiveQuery",
    "parameters": [],
    "description": "Adds a filter to return active records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-addActiveQuery",
    "scope": "Scoped"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to other queries that may have been set. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddEncodedQuery_String",
    "scope": "Scoped"
  },{
    "name": "addFunction",
    "parameters": [{
      "name": "function",
      "values": []
    }],
    "description": "Applies a pre-defined GlideDBFunctionBuilder object to a record. Use the GlideDBFunctionBuilder scoped class to define a function. After the function is defined, use the addFunction(Object function) method to apply the function to a record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddFunction_O",
    "scope": "Scoped"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "joinTable",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. You can use this method to find all the users that are in the database group via the [sys_user_grmember] table, or to find all problems that have an assigned incident via the incident.problem_id relationship. This is not a true database join; rather, addJoinQuery adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddJoinQuery_String_Object_Object",
    "scope": "Scoped"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "joinTable",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. You can use this method to find all the users that are in the database group via the [sys_user_grmember] table, or to find all problems that have an assigned incident via the incident.problem_id relationship. This is not a true database join; rather, addJoinQuery adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddJoinQuery_String_Object_Object",
    "scope": "Scoped"
  },{
    "name": "addJoinQuery",
    "parameters": [{
      "name": "joinTable",
      "values": []
    },{
      "name": "primaryField",
      "values": []
    },{
      "name": "joinTableField",
      "values": []
    }],
    "description": "Adds a filter to return records based on a relationship in a related table. You can use this method to find all the users that are in the database group via the [sys_user_grmember] table, or to find all problems that have an assigned incident via the incident.problem_id relationship. This is not a true database join; rather, addJoinQuery adds a subquery. So, while the result set is limited based on the join, the only fields that you have access to are those on the base table (those which are in the table with which the GlideRecord was initialized). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddJoinQuery_String_Object_Object",
    "scope": "Scoped"
  },{
    "name": "addNotNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "A filter that specifies records where the value of the field passed in the parameter is not null. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddNotNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addNullQuery",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Adds a filter to return records where the value of the specified field is null. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table, that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the GlideQueryCondition method addOrCondition(). When addQuery() is called with only two parameters, table field and comparison value, such as myObj.addQuery('category','Hardware');, the operator in this case is assumed to be \"equal to\". Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddQuery_String_Object",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Provides the ability to build a request, which when executed, returns the rows from the specified table, that match the request. If you are familiar with SQL, this method is similar to the \"where\" clause. One or more addQuery() calls can be made in a single query; in this case the queries are AND'ed. If any of the query statements need to be OR'ed, use the GlideQueryCondition method addOrCondition(). Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddQuery_String_String_Object",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds a filter to return records using an encoded query string. Always test queries on a sub-production instance prior to deploying them on a production instance. An incorrectly constructed encoded query, such as including an invalid field name, produces an invalid query. When the invalid query is run, the invalid part of the query condition is dropped, and the results are based on the valid part of the query, which may return all records from the table. Using an insert(), update(), deleteRecord(), or deleteMultiple() method on bad query results can result in data loss. You can set the glide.invalid_query.returns_no_rows system property to true to have queries with invalid encoded queries return no records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordAddQuery_String",
    "scope": "Scoped"
  },{
    "name": "canCreate",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit inserting new records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanCreate",
    "scope": "Scoped"
  },{
    "name": "canDelete",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit deleting records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanDelete",
    "scope": "Scoped"
  },{
    "name": "canRead",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit reading records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanRead",
    "scope": "Scoped"
  },{
    "name": "canWrite",
    "parameters": [],
    "description": "Determines if the Access Control Rules, which include the user's roles, permit editing records in this table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordCanWrite",
    "scope": "Scoped"
  },{
    "name": "chooseWindow",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "lastRow",
      "values": []
    },{
      "name": "forceCount",
      "values": []
    }],
    "description": "Sets a range of rows to be returned by subsequent queries.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordChooseWindow_Number_Number_Boolean",
    "scope": "Scoped"
  },{
    "name": "dateNumericValue",
    "parameters": [],
    "description": "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-dateNumericValue",
    "scope": "Scoped"
  },{
    "name": "deleteMultiple",
    "parameters": [],
    "description": "Deletes multiple records that satisfy the query condition. This method does not delete attachments. Do not use deleteMultiple() on tables with currency fields. Always delete each record individually. Also, do not use this method with the chooseWindow() or setLimit() methods when working with large tables.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordDeleteMultiple",
    "scope": "Scoped"
  },{
    "name": "deleteRecord",
    "parameters": [],
    "description": "Deletes the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordDeleteRecord",
    "scope": "Scoped"
  },{
    "name": "get",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGet_Object_Object",
    "scope": "Scoped"
  },{
    "name": "get",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Returns the specified record in an instantiated GlideRecord object. If multiple records are found, use next() to access the additional records.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGet_Object_Object",
    "scope": "Scoped"
  },{
    "name": "getAttribute",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Returns the dictionary attributes for the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getAttribute_S",
    "scope": "Scoped"
  },{
    "name": "getClassDisplayValue",
    "parameters": [],
    "description": "Returns the table's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getClassDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Retrieves the display value for the current record.Returns the element's descriptor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getED",
    "parameters": [],
    "description": "Returns the element's descriptor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getED",
    "scope": "Scoped"
  },{
    "name": "getElement",
    "parameters": [{
      "name": "columnName",
      "values": []
    }],
    "description": "Retrieves the GlideElement object for the specified field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetElement_String",
    "scope": "Scoped"
  },{
    "name": "getEncodedQuery",
    "parameters": [],
    "description": "Retrieves the query condition of the current result set as an encoded query string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetEncodedQuery",
    "scope": "Scoped"
  },{
    "name": "getLabel",
    "parameters": [],
    "description": "Returns the field's label.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-getLabel",
    "scope": "Scoped"
  },{
    "name": "getLastErrorMessage",
    "parameters": [],
    "description": "Retrieves the last error message. If there is no last error message, null is returned.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetLastErrorMessage",
    "scope": "Scoped"
  },{
    "name": "getLink",
    "parameters": [{
      "name": "noStack",
      "values": []
    }],
    "description": "Retrieves a link to the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetLink_Boolean",
    "scope": "Scoped"
  },{
    "name": "getRecordClassName",
    "parameters": [],
    "description": "Retrieves the class name for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetRecordClassName",
    "scope": "Scoped"
  },{
    "name": "getRowCount",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Retrieves the number of rows in the query result.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetRowCount",
    "scope": "Scoped"
  },{
    "name": "getTableName",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Retrieves the name of the table associated with the GlideRecord.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetTableName",
    "scope": "Scoped"
  },{
    "name": "getUniqueValue",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Gets the primary key of the record, which is usually the sys_id unless otherwise specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetUniqueValue",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Retrieves the string value of an underlying element in a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordGetValue_String",
    "scope": "Scoped"
  },{
    "name": "hasNext",
    "parameters": [],
    "description": "Determines if there are any more records in the GlideRecord object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordHasNext",
    "scope": "Scoped"
  },{
    "name": "initialize",
    "parameters": [],
    "description": "Creates an empty record suitable for population before an insert.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordInitialize",
    "scope": "Scoped"
  },{
    "name": "insert",
    "parameters": [],
    "description": "Inserts a new record using the field values that have been set for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordInsert",
    "scope": "Scoped"
  },{
    "name": "isActionAborted",
    "parameters": [],
    "description": "Checks to see if the current database action is to be aborted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsActionAborted",
    "scope": "Scoped"
  },{
    "name": "isEncodedQueryValid",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Verifies whether the specified encoded query is valid.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-isEncodedQueryValid_S",
    "scope": "Scoped"
  },{
    "name": "isNewRecord",
    "parameters": [],
    "description": "Checks if the current record is a new record that has not yet been inserted into the database.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsNewRecord",
    "scope": "Scoped"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if the table exists.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsValid",
    "scope": "Scoped"
  },{
    "name": "isValidField",
    "parameters": [{
      "name": "columnName",
      "values": []
    }],
    "description": "Determines if the specified field is defined in the current table.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsValidField",
    "scope": "Scoped"
  },{
    "name": "isValidRecord",
    "parameters": [],
    "description": "Determines if current record is a valid record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordIsValidRecord",
    "scope": "Scoped"
  },{
    "name": "newRecord",
    "parameters": [],
    "description": "Creates a new GlideRecord record, sets the default values for the fields, and assigns a unique ID to the record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordNewRecord",
    "scope": "Scoped"
  },{
    "name": "next",
    "parameters": [],
    "description": "Moves to the next record in the GlideRecord object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordNext",
    "scope": "Scoped"
  },{
    "name": "operation",
    "parameters": [],
    "description": "Retrieves the current operation being performed, such as insert, update, or delete.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordOperation",
    "scope": "Scoped"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Specifies an orderBy column. Call this method more than once to order by multiple columns. Results are arranged in ascending order, see orderByDesc(String name) to arrange records in descending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordOrderBy_String",
    "scope": "Scoped"
  },{
    "name": "orderByDesc",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Specifies a decending orderBy column.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordOrderByDesc_String",
    "scope": "Scoped"
  },{
    "name": "query",
    "parameters": [],
    "description": "Runs the query against the table based on the filters specified by addQuery, addEncodedQuery, etc. This queries the GlideRecord table as well as any references of the table. Usually this is performed without arguments. If name/value pair is specified, \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordQuery_Object_Object",
    "scope": "Scoped"
  },{
    "name": "query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Runs the query against the table based on the filters specified by addQuery, addEncodedQuery, etc. This queries the GlideRecord table as well as any references of the table. Usually this is performed without arguments. If name/value pair is specified, \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordQuery_Object_Object",
    "scope": "Scoped"
  },{
    "name": "setAbortAction",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Sets a flag to indicate if the next database action (insert, update, delete) is to be aborted. This is often used in business rules. Use in an onBefore business rule to prevent the database action from being done. The business rule continues to run after setAbortAction() is called. Calling setAbortAction() does not stop subsequent business rules from executing. Calling this method only prevents the database action from occurring.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetAbortAction_Boolean",
    "scope": "Scoped"
  },{
    "name": "setDateNumericValue",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Sets the duration field to a number of milliseconds since January 1, 1970, 00:00:00 GMT for a duration field. Does not require the creation of a GlideDateTime object because the duration field is already a GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-setDateNumericValue_N",
    "scope": "Scoped"
  },{
    "name": "setLimit",
    "parameters": [{
      "name": "maxNumRecords",
      "values": []
    }],
    "description": "Sets the limit for number of records are fetched by the GlideRecord query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetLimit_Number",
    "scope": "Scoped"
  },{
    "name": "setNewGuidValue",
    "parameters": [{
      "name": "guid",
      "values": []
    }],
    "description": "Sets sys_id value for the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetNewGuidValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Sets the value of the field with the specified name to the specified value. Normally the script does a gr.category = value. However, if the element name is itself a variable then gr.setValue(elementName, value) can be used. When setting a value, ensure the data type of the field matches the data type of the value you enter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetValue_String_Object",
    "scope": "Scoped"
  },{
    "name": "setWorkflow",
    "parameters": [{
      "name": "enable",
      "values": []
    }],
    "description": "Enables or disables the running of business rules, script engines, and audit.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordSetWorkflow_Boolean",
    "scope": "Scoped"
  },{
    "name": "update",
    "parameters": [{
      "name": "reason",
      "values": []
    }],
    "description": "Updates the GlideRecord with any changes that have been made. If the record does not already exist, it is inserted.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordUpdate_String",
    "scope": "Scoped"
  },{
    "name": "updateMultiple",
    "parameters": [],
    "description": "Updates each GlideRecord in the list with any changes that have been made. When changing field values, use setValue() instead of directly setting the field (field = something). When using updateMultiple(), directly setting the field (gr. state = 4) results in all records in the table being updated instead of just the records returned by the query. Do not use this method with the chooseWindow() or setLimit() methods when working with large tables. This method sets new values and does not clear existing values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideRecordUpdateMultiple",
    "scope": "Scoped"
  },{
    "name": "_next",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Moves to the next record in the GlideRecord. Provides the same functionality as next(), it is intended to be used in cases where the GlideRecord has a column named next.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-_next",
    "scope": "Scoped"
  },{
    "name": "_query",
    "parameters": [],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This method queries the GlideRecord table as well as any references of the table. Typically this method is called without arguments. If a name/value pair is specified, the \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-_query_O_O",
    "scope": "Scoped"
  },{
    "name": "_query",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Identical to query(). This method is intended to be used on tables where there is a column named query, which would interfere with using the query() method. Runs the query against the table based on the filters specified by the addQuery() and addEncodedQuery() methods. This method queries the GlideRecord table as well as any references of the table. Typically this method is called without arguments. If a name/value pair is specified, the \"name=value\" condition is added to the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGR-_query_O_O",
    "scope": "Scoped"
  }]
}, {
  "text": "agg",
  "functions": [{
    "name": "addAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Adds an aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addAggregate_String_String",
    "scope": "Legacy"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to the other queries that may have been set for this aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addEncodedQuery_String",
    "scope": "Legacy"
  },{
    "name": "addHaving",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Adds a \"having\" element to the aggregate e.g. select category, count(*) from incident group by category HAVING count(*) > 5.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addHaving_String_String_String",
    "scope": "Legacy"
  },{
    "name": "addTrend",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "timeInterval",
      "values": []
    }],
    "description": "Adds a trend for a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-addTrend_String_String",
    "scope": "Legacy"
  },{
    "name": "getAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of an aggregate from the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getAggregate_String_String",
    "scope": "Legacy"
  },{
    "name": "getQuery",
    "parameters": [],
    "description": "Retrieves the query necessary to return the current aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getQuery",
    "scope": "Legacy"
  },{
    "name": "getTotal",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Returns the number of records by summing an aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getTotal_String_String",
    "scope": "Legacy"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-getValue_String",
    "scope": "Legacy"
  },{
    "name": "groupBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides the name of a field to use in grouping the aggregates. May be called numerous times to set multiple group fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-groupBy_String",
    "scope": "Legacy"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides the name of a field that should be used to order the aggregates. The field will also be added to the group-by list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-orderBy_String",
    "scope": "Legacy"
  },{
    "name": "orderByAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Orders the aggregates based on the specified aggregate and field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-orderByAggregate_String_String",
    "scope": "Legacy"
  },{
    "name": "query",
    "parameters": [],
    "description": "Issues the query and gets the results.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-query",
    "scope": "Legacy"
  },{
    "name": "setGroup",
    "parameters": [{
      "name": "b",
      "values": []
    }],
    "description": "Sets whether the results are to be grouped.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideAggregate-setGroup_Boolean",
    "scope": "Legacy"
  },{
    "name": "addAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Adds an aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddAggregate_String_String",
    "scope": "Scoped"
  },{
    "name": "addEncodedQuery",
    "parameters": [{
      "name": "query",
      "values": []
    }],
    "description": "Adds an encoded query to the other queries that may have been set for this aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddEncodedQuery_String",
    "scope": "Scoped"
  },{
    "name": "addNotNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a not null query to the aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddNotNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addNullQuery",
    "parameters": [{
      "name": "fieldName",
      "values": []
    }],
    "description": "Adds a null query to the aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddNullQuery_String",
    "scope": "Scoped"
  },{
    "name": "addQuery",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "operator",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Adds a query to the aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateAddQuery_String_String_String",
    "scope": "Scoped"
  },{
    "name": "addTrend",
    "parameters": [{
      "name": "fieldName",
      "values": []
    },{
      "name": "timeInterval",
      "values": []
    }],
    "description": "Adds a trend for a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggAddTrend_S_S",
    "scope": "Scoped"
  },{
    "name": "getAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of an aggregate from the current record.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetAggregate_String_String",
    "scope": "Scoped"
  },{
    "name": "getAggregateEncodedQuery",
    "parameters": [],
    "description": "Gets the query necessary to return the current aggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetAggregateEncodedQuery",
    "scope": "Scoped"
  },{
    "name": "getEncodedQuery",
    "parameters": [],
    "description": "Retrieves the encoded query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetEncodedQuery",
    "scope": "Scoped"
  },{
    "name": "getRowCount",
    "parameters": [{
      "name": "",
      "values": []
    }],
    "description": "Retrieves the number of rows in the GlideAggregate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetRowCount",
    "scope": "Scoped"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Retrieves the table name associated with this GlideAggregate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetTableName",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Gets the value of a field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGetValue_String",
    "scope": "Scoped"
  },{
    "name": "groupBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Provides the name of a field to use in grouping the aggregates. May be called numerous times to set multiple group fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateGroupBy_String",
    "scope": "Scoped"
  },{
    "name": "hasNext",
    "parameters": [],
    "description": "Determines if there are any more records in the GlideAggregate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateHasNext",
    "scope": "Scoped"
  },{
    "name": "next",
    "parameters": [],
    "description": "Moves to the next record in the GlideAggregate.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateNext",
    "scope": "Scoped"
  },{
    "name": "orderBy",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Orders the aggregates using the value of the specified field. The field will also be added to the group-by list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateOrderBy_String",
    "scope": "Scoped"
  },{
    "name": "orderByAggregate",
    "parameters": [{
      "name": "agg",
      "values": []
    },{
      "name": "fieldName",
      "values": []
    }],
    "description": "Orders the aggregates based on the specified aggregate and field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateOrderByAggregate_String_String",
    "scope": "Scoped"
  },{
    "name": "orderByDesc",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Sorts the aggregates in descending order based on the specified field. The field will also be added to the group-by list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateOrderByDesc_String",
    "scope": "Scoped"
  },{
    "name": "query",
    "parameters": [],
    "description": "Issues the query and gets the results.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideAggregateQuery",
    "scope": "Scoped"
  }]
}, {
  "text": "arrayutil",
  "functions": [{
    "name": "concat",
    "parameters": [{
      "name": "parent",
      "values": []
    },{
      "name": "child",
      "values": []
    }],
    "description": "Merge two arrays.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-concat_A_A",
    "scope": "Legacy"
  },{
    "name": "contains",
    "parameters": [{
      "name": "array",
      "values": []
    },{
      "name": "element",
      "values": []
    }],
    "description": "Searches the array for the element. Returns true if the element exists in the array, otherwise returns false.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-contains_A_O",
    "scope": "Legacy"
  },{
    "name": "convertArray",
    "parameters": [{
      "name": "a",
      "values": []
    }],
    "description": "Convert an object to an array.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-convertArray_O",
    "scope": "Legacy"
  },{
    "name": "diff",
    "parameters": [{
      "name": "a",
      "values": []
    },{
      "name": "b",
      "values": []
    }],
    "description": "Finds the differences between two or more arrays. Any number of arrays can be provided as parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-diff_A_A",
    "scope": "Legacy"
  },{
    "name": "ensureArray",
    "parameters": [{
      "name": "object",
      "values": []
    }],
    "description": "Returns an array from the object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-ensureArray_O",
    "scope": "Legacy"
  },{
    "name": "indexOf",
    "parameters": [{
      "name": "array",
      "values": []
    },{
      "name": "element",
      "values": []
    }],
    "description": "Searches the array for the element. Returns the element index if found, -1 otherwise.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-indexOf_A_O",
    "scope": "Legacy"
  },{
    "name": "indexOf",
    "parameters": [{
      "name": "array",
      "values": []
    },{
      "name": "element",
      "values": []
    },{
      "name": "startIndex",
      "values": []
    }],
    "description": "Searches the array for the element starting with the startIndex element. Returns the element index.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-indexOf_A_N",
    "scope": "Legacy"
  },{
    "name": "intersect",
    "parameters": [{
      "name": "a",
      "values": []
    },{
      "name": "b",
      "values": []
    }],
    "description": "Finds the elements present in all arrays. Any number of arrays can be provided as parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-intersect_A_A",
    "scope": "Legacy"
  },{
    "name": "union",
    "parameters": [{
      "name": "a",
      "values": []
    },{
      "name": "b",
      "values": []
    }],
    "description": "Merge two or more arrays. Any number of arrays can be provided as parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-union_A_A",
    "scope": "Legacy"
  },{
    "name": "unique",
    "parameters": [{
      "name": "a",
      "values": []
    }],
    "description": "Removes duplicate items from an array.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_AU-unique_A",
    "scope": "Legacy"
  }]
}, {
  "text": "currentuser",
  "functions": [{
    "name": "getCompanyID",
    "parameters": [],
    "description": "Returns the current user's company sys_id.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getCompanyID",
    "scope": "Legacy"
  },{
    "name": "getDisplayName",
    "parameters": [],
    "description": "Returns the current user's display name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getDisplayName",
    "scope": "Legacy"
  },{
    "name": "getDomainDisplayValue",
    "parameters": [],
    "description": "Returns the display value of the user's session domain.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getDomainDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getEmail",
    "parameters": [],
    "description": "Returns the user's email address.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getEmail",
    "scope": "Legacy"
  },{
    "name": "getFirstName",
    "parameters": [],
    "description": "Returns the user's first name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getFirstName",
    "scope": "Legacy"
  },{
    "name": "getID",
    "parameters": [],
    "description": "Returns the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getID",
    "scope": "Legacy"
  },{
    "name": "getLastName",
    "parameters": [],
    "description": "Returns the user's last name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getLastName",
    "scope": "Legacy"
  },{
    "name": "getMyGroups",
    "parameters": [],
    "description": "Returns an iterator containing the list of all groups to which the user belongs. Only active groups are returned.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getMyGroups",
    "scope": "Legacy"
  },{
    "name": "getName",
    "parameters": [],
    "description": "Returns the user ID, or login name, of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getName",
    "scope": "Legacy"
  },{
    "name": "getRoles",
    "parameters": [],
    "description": "Returns a list of roles that includes explicitly granted roles, inherited roles, and roles acquired by group membership.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getRoles",
    "scope": "Legacy"
  },{
    "name": "getUserByID",
    "parameters": [{
      "name": "id",
      "values": []
    }],
    "description": "Returns the user object associated with the passed-in user ID (sys_id in sys_user) or user_name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getUserByID_S",
    "scope": "Legacy"
  },{
    "name": "getUserRoles",
    "parameters": [],
    "description": "Returns the list of roles explicitly granted to the user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-getUserRoles",
    "scope": "Legacy"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Determines if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-hasRole_S",
    "scope": "Legacy"
  },{
    "name": "isMemberOf",
    "parameters": [{
      "name": "group",
      "values": []
    }],
    "description": "Determines if the current user is a member of the specified group.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GUser-isMemberOf_S",
    "scope": "Legacy"
  },{
    "name": "getCompanyID",
    "parameters": [],
    "description": "Returns the current user's company sys_id.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetCompanyID",
    "scope": "Scoped"
  },{
    "name": "getDisplayName",
    "parameters": [],
    "description": "Returns the current user's display name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetDisplayName",
    "scope": "Scoped"
  },{
    "name": "getDomainID",
    "parameters": [],
    "description": "Returns the identifier of the user's current session domain. The identifier that is returned depends on the domain type and the instantiation of that domain.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=SGU-getDomainID",
    "scope": "Scoped"
  },{
    "name": "getEmail",
    "parameters": [],
    "description": "Returns the user's email address.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getEmail",
    "scope": "Scoped"
  },{
    "name": "getFirstName",
    "parameters": [],
    "description": "Returns the user's first name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getFirstName",
    "scope": "Scoped"
  },{
    "name": "getID",
    "parameters": [],
    "description": "Gets the sys_id of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetID",
    "scope": "Scoped"
  },{
    "name": "getLastName",
    "parameters": [],
    "description": "Returns the user's last name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getLastName",
    "scope": "Scoped"
  },{
    "name": "getName",
    "parameters": [],
    "description": "Returns the user ID, or login name, of the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetName",
    "scope": "Scoped"
  },{
    "name": "getPreference",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Gets the specified user preference value for the current user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserGetPreference_String",
    "scope": "Scoped"
  },{
    "name": "getRoles",
    "parameters": [],
    "description": "Returns a list of roles that includes explicitly granted roles, inherited roles, and roles acquired by group membership.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getRoles",
    "scope": "Scoped"
  },{
    "name": "getUserRoles",
    "parameters": [],
    "description": "Returns the list of roles explicitly granted to the user. Unlike the getRoles() method, this method does not return roles the user inherits or roles acquired from group membership.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGU-getUserRoles",
    "scope": "Scoped"
  },{
    "name": "hasRole",
    "parameters": [{
      "name": "role",
      "values": []
    }],
    "description": "Determines if the current user has the specified role.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserHasRole_String",
    "scope": "Scoped"
  },{
    "name": "isMemberOf",
    "parameters": [{
      "name": "group",
      "values": []
    }],
    "description": "Determines if the current user is a member of the specified group.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserIsMemberOf_String",
    "scope": "Scoped"
  },{
    "name": "savePreference",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Saves a user preference value to the database.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideUserSavePreference_String_String",
    "scope": "Scoped"
  }]
}, {
  "text": "jsutil",
  "functions": [{
    "name": "doesNotHave",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is null or is undefined.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-doesNotHave_O",
    "scope": "Legacy"
  },{
    "name": "escapeAttr",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Escape ampersands commonly used to define URL attributes.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-escapeAttr_S",
    "scope": "Legacy"
  },{
    "name": "escapeText",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Escapes invalid XML characters such as \"< > &\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-escapeText_S",
    "scope": "Legacy"
  },{
    "name": "getBooleanValue",
    "parameters": [{
      "name": "gr",
      "values": []
    },{
      "name": "field",
      "values": []
    }],
    "description": "Returns the value in a boolean GlideRecord field.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-getBooleanValue_GR_S",
    "scope": "Legacy"
  },{
    "name": "has",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is not null and is not undefined.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-has_O",
    "scope": "Legacy"
  },{
    "name": "instance_of",
    "parameters": [{
      "name": "item",
      "values": []
    },{
      "name": "class",
      "values": []
    }],
    "description": "Checks to see if the specified object is a member of the specified class. For JavaScript objects, this method behaves exactly like the JavaScript operator \"instanceof\", but also supports Java objects.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-instance_of_O_S",
    "scope": "Legacy"
  },{
    "name": "isJavaObject",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Checks if the specified object is a Java class.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-isJavaObject_O",
    "scope": "Legacy"
  },{
    "name": "logObject",
    "parameters": [{
      "name": "obj",
      "values": []
    },{
      "name": "name",
      "values": []
    }],
    "description": "Logs all the properties in the given object: name, type, and value. Output is written to the console if you are running from a background script or have debug logging enables. The output is also written to the system log.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-logObject_O_S",
    "scope": "Legacy"
  },{
    "name": "nil",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is null, undefined, or evaluates to the empty string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-nil_O",
    "scope": "Legacy"
  },{
    "name": "notNil",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Checks if item is null, undefined, or evaluates to the empty string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-notNil_O",
    "scope": "Legacy"
  },{
    "name": "toBoolean",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Converts the specified object to a Boolean.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-toBoolean_O",
    "scope": "Legacy"
  },{
    "name": "type_of",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Determines the type of the specified object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-type_of_O",
    "scope": "Legacy"
  },{
    "name": "unescapeAttr",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Restore ampersands from escaped text.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-unescapeAttr_S",
    "scope": "Legacy"
  },{
    "name": "unescapeText",
    "parameters": [{
      "name": "text",
      "values": []
    }],
    "description": "Removes escape characters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_JSUtil-unescapeText_S",
    "scope": "Legacy"
  }]
}, {
  "text": "gdt",
  "functions": [{
    "name": "add",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Adds a GlideTime object to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-add_GT",
    "scope": "Legacy"
  },{
    "name": "add",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Adds a specified number of milliseconds to the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-add_N",
    "scope": "Legacy"
  },{
    "name": "addDays",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. Use addDaysLocalTime() and addDaysUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addDays_N",
    "scope": "Legacy"
  },{
    "name": "addDaysLocalTime",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addDaysLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addDaysUTC",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addDaysUTC_N",
    "scope": "Legacy"
  },{
    "name": "addMonths",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. Use addMonthsLocalTime() or addMonthsUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addMonths_N",
    "scope": "Legacy"
  },{
    "name": "addMonthsLocalTime",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addMonthsLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addMonthsUTC",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addMonthsUTC_N",
    "scope": "Legacy"
  },{
    "name": "addSeconds",
    "parameters": [{
      "name": "seconds",
      "values": []
    }],
    "description": "Adds a specified number of seconds to the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addSeconds_N",
    "scope": "Legacy"
  },{
    "name": "addWeeks",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. Use addWeeksLocalTime() and addWeeksUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addWeeks_N",
    "scope": "Legacy"
  },{
    "name": "addWeeksLocalTime",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addWeeksLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addWeeksUTC",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addWeeksUTC_N",
    "scope": "Legacy"
  },{
    "name": "addYears",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. Use addYearsLocalTime() or addYearsUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addYears_N",
    "scope": "Legacy"
  },{
    "name": "addYearsLocalTime",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts years using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addYearsLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "addYearsUTC",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The date and time value stored by GlideDateTime object is interpreted as being in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-addYearsUTC_N",
    "scope": "Legacy"
  },{
    "name": "compareTo",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Compares two date and time objects to determine whether one occurs before the other or if they are equivalent.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-compareTo_O",
    "scope": "Legacy"
  },{
    "name": "equals",
    "parameters": [{
      "name": "GDT",
      "values": []
    }],
    "description": "Compares an object with an existing value for equality.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT_equals_O",
    "scope": "Legacy"
  },{
    "name": "getDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDate",
    "scope": "Legacy"
  },{
    "name": "getDayOfMonth",
    "parameters": [],
    "description": "Gets the current day of the month in the UTC time zone. Use getDayOfMonthLocalTime() and getDayOfMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfMonth",
    "scope": "Legacy"
  },{
    "name": "getDayOfMonthLocalTime",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfMonthLocalTime",
    "scope": "Legacy"
  },{
    "name": "getDayOfMonthUTC",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfMonthUTC",
    "scope": "Legacy"
  },{
    "name": "getDayOfWeek",
    "parameters": [],
    "description": "Retrieves the day of the week stored by the GlideDateTime object, expressed in the user's time zone. Use getDayOfWeekLocalTime() and getDayOfWeekUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfWeek",
    "scope": "Legacy"
  },{
    "name": "getDayOfWeekLocalTime",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfWeekLocalTime",
    "scope": "Legacy"
  },{
    "name": "getDayOfWeekUTC",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDayOfWeekUTC",
    "scope": "Legacy"
  },{
    "name": "getDaysInMonth",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the Java Virtual Machine time zone. Use getDaysInMonthLocalTime() and getDaysInMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDaysInMonth",
    "scope": "Legacy"
  },{
    "name": "getDaysInMonthLocalTime",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDaysInMonthLocalTime",
    "scope": "Legacy"
  },{
    "name": "getDaysInMonthUTC",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDaysInMonthUTC",
    "scope": "Legacy"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the date and time value in the current user's display format and time zone. Referring to the GlideDateTime object directly returns the date and time value in the GMT time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDisplayValue",
    "scope": "Legacy"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Returns the display value in the internal format (yyyy-MM-dd HH:mm:ss). This method is useful for date/time fields, but not for date fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDisplayValueInternal",
    "scope": "Legacy"
  },{
    "name": "getDSTOffset",
    "parameters": [],
    "description": "Gets the amount of time that daylight saving time is offset.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getDSTOffset",
    "scope": "Legacy"
  },{
    "name": "getErrorMsg",
    "parameters": [],
    "description": "Gets the current error message.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getErrorMsg",
    "scope": "Legacy"
  },{
    "name": "getInternalFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in the local time zone and in the internal format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getInternalFormatedLocalTime",
    "scope": "Legacy"
  },{
    "name": "getInternalMidnight",
    "parameters": [{
      "name": "dayOfTheWeek",
      "values": []
    }],
    "description": "Returns a date and time object set to midnight of a specified day using UTC.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getInternalMidnight_N",
    "scope": "Legacy"
  },{
    "name": "getLocalDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getLocalDate",
    "scope": "Legacy"
  },{
    "name": "getLocalTime",
    "parameters": [],
    "description": "Gets the time in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getLocalTime",
    "scope": "Legacy"
  },{
    "name": "getMonth",
    "parameters": [],
    "description": "Retrieves the month stored by the GlideDateTime object, expressed in Java Virtual Machine time zone. Use getMonthLocalTime() and getMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getMonth",
    "scope": "Legacy"
  },{
    "name": "getMonthLocalTime",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getMonthLocalTime",
    "scope": "Legacy"
  },{
    "name": "getMonthUTC",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getMonthUTC",
    "scope": "Legacy"
  },{
    "name": "getNumericValue",
    "parameters": [],
    "description": "Gets the number of milliseconds since January 1, 1970, 00:00:00 GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getNumericValue",
    "scope": "Legacy"
  },{
    "name": "getSpanTime",
    "parameters": [{
      "name": "dayOfWeek",
      "values": []
    }],
    "description": "Retrieves the amount of time elapsed since the midnight of a specified day to the current time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GD-getSpanTime_N",
    "scope": "Legacy"
  },{
    "name": "getTime",
    "parameters": [],
    "description": "Gets the Unix duration stamp.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getTime",
    "scope": "Legacy"
  },{
    "name": "getTZOffset",
    "parameters": [],
    "description": "Gets the time zone offset in milliseconds.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getTZOffset",
    "scope": "Legacy"
  },{
    "name": "getUserFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in local time zone in the user's format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getUserFormattedLocalTime",
    "scope": "Legacy"
  },{
    "name": "getUserTimeZone",
    "parameters": [],
    "description": "Retrieves the time zone for the current user session. This method is equivalent to gs.getSession().getTimeZone().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getUserTimeZone",
    "scope": "Legacy"
  },{
    "name": "getUTCMidnight",
    "parameters": [{
      "name": "dayOfTheWeek",
      "values": []
    }],
    "description": "Retrieves a GlideDateTime object with the time set to midnight using the UTC time zone. This method sets the date of the new GlideDateTime object as the specified day of the week within the week of the original GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getUTCMidnight_N",
    "scope": "Legacy"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getValue",
    "scope": "Legacy"
  },{
    "name": "getWeekOfYearLocalTime",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the current user's time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getWeekOfYearLocalTime",
    "scope": "Legacy"
  },{
    "name": "getWeekOfYearUTC",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the UTC time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getWeekOfYearUTC",
    "scope": "Legacy"
  },{
    "name": "getYear",
    "parameters": [],
    "description": "Retrieves the year stored by the GlideDateTime object, expressed in the Java Virtual Machine time zone. Use getYearLocalTime() and getYearUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getYear",
    "scope": "Legacy"
  },{
    "name": "getYearLocalTime",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getYearLocalTime",
    "scope": "Legacy"
  },{
    "name": "getYearUTC",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-getYearUTC",
    "scope": "Legacy"
  },{
    "name": "hasDate",
    "parameters": [],
    "description": "Determines if an object's date is set.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-hasDate",
    "scope": "Legacy"
  },{
    "name": "isDST",
    "parameters": [],
    "description": "Determines if the object's time uses a daylight saving offset",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-isDST",
    "scope": "Legacy"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if a value is a valid date and time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-isValid",
    "scope": "Legacy"
  },{
    "name": "setDayOfMonth",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value. Use setDayOfMonthLocalTime(day) and setDayOfMonthUTC(day) instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDayOfMonth_N",
    "scope": "Legacy"
  },{
    "name": "setDayOfMonthLocalTime",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDayOfMonthLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "setDayOfMonthUTC",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDayOfMonthUTC_N",
    "scope": "Legacy"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDisplayValue_S",
    "scope": "Legacy"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "dateTime",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the dateTime parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDisplayValue_S_S",
    "scope": "Legacy"
  },{
    "name": "setDisplayValueInternal",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets a date and time value using the internal format (yyyy-MM-dd HH:mm:ss) and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDisplayValueInternal_S",
    "scope": "Legacy"
  },{
    "name": "setDisplayValueInternalWithAlternates",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets a date and time value using the internal format (yyyy-MM-dd HH:mm:ss) and the current user's time zone. This method attempts to parse incomplete date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setDispValInternalAlt_S",
    "scope": "Legacy"
  },{
    "name": "setGlideDateTime",
    "parameters": [{
      "name": "gDT",
      "values": []
    }],
    "description": "Sets the date and time of the current object using an existing GlideDateTime object. This method is equivalent to instantiating a new object with a GlideDateTime parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setGlideDateTime_GDT",
    "scope": "Legacy"
  },{
    "name": "setInitialValue",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets the date and time. This method is equivalent to setValue(Object).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setInitialValue_S",
    "scope": "Legacy"
  },{
    "name": "setMonth",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to a specified value using the Java Virtual Machine time zone. Use setMonthLocalTime() or setMonthUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setMonth_N",
    "scope": "Legacy"
  },{
    "name": "setMonthLocalTime",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to a specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setMonthLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "setMonthUTC",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to a specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setMonthUTC_N",
    "scope": "Legacy"
  },{
    "name": "setNumericValue",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Sets the date and time to the number of milliseconds since January 1, 1970 00:00:00 GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setNumericValue_N",
    "scope": "Legacy"
  },{
    "name": "setTZ",
    "parameters": [{
      "name": "timeZone",
      "values": []
    }],
    "description": "Sets the time zone of the GlideDateTime object to be the specified time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setTZ_TZ",
    "scope": "Legacy"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Sets the date and time of the GlideDateTime object. This method is equivalent to setInitialValue().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setValue_O",
    "scope": "Legacy"
  },{
    "name": "setValueUTC",
    "parameters": [{
      "name": "dateTime",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the UTC time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the dateTime parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setValueUTC_S_S",
    "scope": "Legacy"
  },{
    "name": "setYear",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to a specified value using the Java Virtual Machine time zone. Use setYearLocalTime() or setYearUTC() instead of this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setYear_N",
    "scope": "Legacy"
  },{
    "name": "setYearLocalTime",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to a specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setYearLocalTime_N",
    "scope": "Legacy"
  },{
    "name": "setYearUTC",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to a specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-setYearUTC_N",
    "scope": "Legacy"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "start",
      "values": []
    },{
      "name": "end",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideDateTime values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-subtract_GDT_GDT",
    "scope": "Legacy"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Subtracts a specified amount of time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-subtract_GT",
    "scope": "Legacy"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Subtracts a specified number of milliseconds from the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-subtract_N",
    "scope": "Legacy"
  },{
    "name": "toString",
    "parameters": [],
    "description": "Returns the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default. This method is equivalent to getValue().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDT-toString",
    "scope": "Legacy"
  },{
    "name": "add",
    "parameters": [{
      "name": "gd",
      "values": []
    }],
    "description": "Adds a GlideTime object to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAdd_GlideTime_gd",
    "scope": "Scoped"
  },{
    "name": "add",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Adds the specified number of milliseconds to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAdd_Number",
    "scope": "Scoped"
  },{
    "name": "addDaysLocalTime",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddDaysLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addDaysUTC",
    "parameters": [{
      "name": "days",
      "values": []
    }],
    "description": "Adds a specified number of days to the current GlideDateTime object. A negative parameter subtracts days. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts days using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddDaysUTC_Number",
    "scope": "Scoped"
  },{
    "name": "addMonthsLocalTime",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddMonthsLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addMonthsUTC",
    "parameters": [{
      "name": "months",
      "values": []
    }],
    "description": "Adds a specified number of months to the current GlideDateTime object. A negative parameter subtracts months. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts months using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddMonthsUTC_Number",
    "scope": "Scoped"
  },{
    "name": "addSeconds",
    "parameters": [{
      "name": "seconds",
      "values": []
    }],
    "description": "Adds the specified number of seconds to the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddSeconds_Number",
    "scope": "Scoped"
  },{
    "name": "addWeeksLocalTime",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddWeeksLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addWeeksUTC",
    "parameters": [{
      "name": "weeks",
      "values": []
    }],
    "description": "Adds a specified number of weeks to the current GlideDateTime object. A negative parameter subtracts weeks. The method determines the UTC date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts weeks using the UTC date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddWeeksUTC_Number",
    "scope": "Scoped"
  },{
    "name": "addYearsLocalTime",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The method determines the local date and time equivalent to the value stored by the GlideDateTime object, then adds or subtracts years using the local date and time values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddYearsLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "addYearsUTC",
    "parameters": [{
      "name": "years",
      "values": []
    }],
    "description": "Adds a specified number of years to the current GlideDateTime object. A negative parameter subtracts years. The date and time value stored by GlideDateTime object is interpreted as being in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeAddYearsUTC_Number",
    "scope": "Scoped"
  },{
    "name": "after",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs after the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-after_GDT",
    "scope": "Scoped"
  },{
    "name": "before",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs before the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-before_GDT",
    "scope": "Scoped"
  },{
    "name": "compareTo",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Compares two date and time objects to determine whether they are equivalent or one occurs before or after the other.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeCompareTo_Object_o",
    "scope": "Scoped"
  },{
    "name": "equals",
    "parameters": [{
      "name": "dateTime",
      "values": []
    }],
    "description": "Compares a datetime with an existing value for equality.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeEquals_Object",
    "scope": "Scoped"
  },{
    "name": "getDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDate",
    "scope": "Scoped"
  },{
    "name": "getDayOfMonthLocalTime",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfMonthLocalTime",
    "scope": "Scoped"
  },{
    "name": "getDayOfMonthUTC",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfMonthUTC",
    "scope": "Scoped"
  },{
    "name": "getDayOfWeekLocalTime",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfWeekLocalTime",
    "scope": "Scoped"
  },{
    "name": "getDayOfWeekUTC",
    "parameters": [],
    "description": "Gets the day of the week stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDayOfWeekUTC",
    "scope": "Scoped"
  },{
    "name": "getDaysInMonthLocalTime",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDaysInMonthLocalTime",
    "scope": "Scoped"
  },{
    "name": "getDaysInMonthUTC",
    "parameters": [],
    "description": "Gets the number of days in the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDaysInMonthUTC",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the date and time value in the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Gets the display value in the internal format (yyyy-MM-dd HH:mm:ss).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDisplayValueInternal",
    "scope": "Scoped"
  },{
    "name": "getDSTOffset",
    "parameters": [],
    "description": "Gets the amount of time that daylight saving time is offset.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetDSTOffset",
    "scope": "Scoped"
  },{
    "name": "getErrorMsg",
    "parameters": [],
    "description": "Gets the current error message.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetErrorMsg",
    "scope": "Scoped"
  },{
    "name": "getInternalFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in the local time zone and in the internal format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-getInternalFormatedLocalTime",
    "scope": "Scoped"
  },{
    "name": "getLocalDate",
    "parameters": [],
    "description": "Gets the date stored by the GlideDateTime object, expressed in the standard format, yyyy-MM-dd, and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetLocalDate",
    "scope": "Scoped"
  },{
    "name": "getLocalTime",
    "parameters": [],
    "description": "Returns a GlideTime object that represents the time portion of the GlideDateTime object in the user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetLocalTime",
    "scope": "Scoped"
  },{
    "name": "getMonthLocalTime",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetMonthLocalTime",
    "scope": "Scoped"
  },{
    "name": "getMonthUTC",
    "parameters": [],
    "description": "Gets the month stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetMonthUTC",
    "scope": "Scoped"
  },{
    "name": "getNumericValue",
    "parameters": [],
    "description": "Gets the number of milliseconds since January 1, 1970, 00:00:00 GMT.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetNumericValue",
    "scope": "Scoped"
  },{
    "name": "getTime",
    "parameters": [],
    "description": "Returns a GlideTime object that represents the time portion of the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetTime",
    "scope": "Scoped"
  },{
    "name": "getTZOffset",
    "parameters": [],
    "description": "Gets the time zone offset in milliseconds.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetTZOffset",
    "scope": "Scoped"
  },{
    "name": "getUserFormattedLocalTime",
    "parameters": [],
    "description": "Returns the object's time in the local time zone and in the user's format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-getUserFormattedLocalTime",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetValue",
    "scope": "Scoped"
  },{
    "name": "getWeekOfYearLocalTime",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the current user's time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetWeekOfYearLocalTime",
    "scope": "Scoped"
  },{
    "name": "getWeekOfYearUTC",
    "parameters": [],
    "description": "Gets the number of the week stored by the GlideDateTime object, expressed in the UTC time zone. All weeks begin on Sunday. The first week of the year is the week that contains at least one day of the new year. The week beginning Sunday 2015-12-27 is considered the first week of 2016 as that week contains January 1 and 2.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetWeekOfYearUTC",
    "scope": "Scoped"
  },{
    "name": "getYearLocalTime",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetYearLocalTime",
    "scope": "Scoped"
  },{
    "name": "getYearUTC",
    "parameters": [],
    "description": "Gets the year stored by the GlideDateTime object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeGetYearUTC",
    "scope": "Scoped"
  },{
    "name": "hasDate",
    "parameters": [],
    "description": "Determines if an object's date is set.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeHasDate",
    "scope": "Scoped"
  },{
    "name": "isDST",
    "parameters": [],
    "description": "Determines if an object's time uses a daylight saving offset.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeIsDST",
    "scope": "Scoped"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if a value is a valid date and time.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeIsValid",
    "scope": "Scoped"
  },{
    "name": "onOrAfter",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs on or after the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-onOrAfter_GDT",
    "scope": "Scoped"
  },{
    "name": "onOrBefore",
    "parameters": [{
      "name": "gdt",
      "values": []
    }],
    "description": "Determines if the GlideDateTime object occurs on or before the specified GlideDateTime.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGDT-onOrBefore_GDT",
    "scope": "Scoped"
  },{
    "name": "setDayOfMonthLocalTime",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDayOfMonthLocalTime_Number_day",
    "scope": "Scoped"
  },{
    "name": "setDayOfMonthUTC",
    "parameters": [{
      "name": "day",
      "values": []
    }],
    "description": "Sets the day of the month to a specified value in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDayOfMonthUTC_Number_day",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDisplayValue_String_asDisplayed",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "value",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the current user's time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the value parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDisplayValue_String_value_String_format",
    "scope": "Scoped"
  },{
    "name": "setDisplayValueInternal",
    "parameters": [{
      "name": "value",
      "values": []
    }],
    "description": "Sets a date and time value using the internal format (yyyy-MM-dd HH:mm:ss) and the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetDisplayValueInternal_String_value",
    "scope": "Scoped"
  },{
    "name": "setGlideDateTime",
    "parameters": [{
      "name": "g",
      "values": []
    }],
    "description": "Sets the date and time of the current object using an existing GlideDateTime object. This method is equivalent to instantiating a new object with a GlideDateTime parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTime_GlideDateTime_g",
    "scope": "Scoped"
  },{
    "name": "setMonthLocalTime",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to the specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetMonthLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "setMonthUTC",
    "parameters": [{
      "name": "month",
      "values": []
    }],
    "description": "Sets the month stored by the GlideDateTime object to the specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetMonthUTC_Number",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the date and time of the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeHasDateMethod",
    "scope": "Scoped"
  },{
    "name": "setValueUTC",
    "parameters": [{
      "name": "dt",
      "values": []
    },{
      "name": "format",
      "values": []
    }],
    "description": "Sets a date and time value using the UTC time zone and the specified date and time format. This method throws a runtime exception if the date and time format used in the dt parameter does not match the format parameter. You can retrieve the error message by calling getErrorMsg() on the GlideDateTime object after the exception is caught.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetValueUTC_String_dt_String_format",
    "scope": "Scoped"
  },{
    "name": "setYearLocalTime",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to the specified value using the current user's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetYearLocalTime_Number",
    "scope": "Scoped"
  },{
    "name": "setYearUTC",
    "parameters": [{
      "name": "year",
      "values": []
    }],
    "description": "Sets the year stored by the GlideDateTime object to the specified value using the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSetYearUTC_Number",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "start",
      "values": []
    },{
      "name": "end",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideDateTime values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSubtract_GlideDateTime_GlideDate_Time",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Subtracts a specified amount of time from the current GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSubtract_GlideTime",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "milliseconds",
      "values": []
    }],
    "description": "Subtracts the specified number of milliseconds from the GlideDateTime object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeSubtract_Number",
    "scope": "Scoped"
  },{
    "name": "toString",
    "parameters": [],
    "description": "Gets the date and time value stored by the GlideDateTime object in the internal format, yyyy-MM-dd HH:mm:ss, and the system time zone, UTC by default. This method is equivalent to getValue().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateTimeToString",
    "scope": "Scoped"
  }]
}, {
  "text": "qc",
  "functions": [{
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a two or three parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addOrCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a two or three parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GQC-addOrCondition_S_S_O",
    "scope": "Legacy"
  }, {
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }, {
    "name": "addCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Adds an AND condition to the current condition.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a 2-or-3 parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionOrAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }, {
    "name": "addOrCondition",
    "parameters": [{
      "name": "name",
      "values": []
    }, {
      "name": "oper",
      "values": []
    }, {
      "name": "value",
      "values": []
    }],
    "description": "Appends a 2-or-3 parameter OR condition to an existing GlideQueryCondition.\naddOrCondition() works in conjunction with any of the addQuery() methods to OR the specified query parameters to the query previously constructed using addQuery().\naddOrCondition() is typically called with three parameters; table field, operator, and comparison value. It can be called with only two parameters, table field and comparison value, such as qc.addOrCondition('category', 'software');. The operator in this case is assumed to be \"equal to\".",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideQueryConditionOrAddCondition_String_name_String_oper_Object_value",
    "scope": "Scoped"
  }]
}, {
  "text": "session",
  "functions": [{
    "name": "clearClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    }],
    "description": "Clears a session client value previously set with putClientData(). This method is used in a client script to clear data values that were set by a server script using the putClientData() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionClearClientData_String",
    "scope": "Legacy"
  },{
    "name": "getClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    }],
    "description": "Returns a session client value previously set with putClientData(). This method is used in a client script to retrieve data values that were set by a server script that used the putClientData() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetClientData_String",
    "scope": "Legacy"
  },{
    "name": "getLanguage",
    "parameters": [],
    "description": "Gets the session's language code.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetLanguage",
    "scope": "Legacy"
  },{
    "name": "getRoles",
    "parameters": [],
    "description": "Gets a list of roles for the current user. The list of roles does not reflect any changes made during the current user session. To get the updated list of roles, the user must log out and log back in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetRoles",
    "scope": "Legacy"
  },{
    "name": "getTimeZoneName",
    "parameters": [],
    "description": "Gets the name of the session's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionGetTimeZoneName",
    "scope": "Legacy"
  },{
    "name": "isInteractive",
    "parameters": [],
    "description": "Determines if the current session is interactive. An interactive session is one that involves an end-user interacting with a user interface that then retrieves information from a server. An example of this type of session is when a user logs in using the log-in screen or uses a form to query a data store. A non-interactive session is one that only involves programmatic interaction with a server such as a SOAP request to retrieve data.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionIsInteractive",
    "scope": "Legacy"
  },{
    "name": "isLoggedIn",
    "parameters": [],
    "description": "Determines if the current user is currently logged in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionIsLoggedIn",
    "scope": "Legacy"
  },{
    "name": "putClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    },{
      "name": "paramValue",
      "values": []
    }],
    "description": "Sets a session client value that can be retrieved with getClientData(). This method is used in a server side script that runs when a form is created.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GlideSessionPutClientData_String_String",
    "scope": "Legacy"
  },{
    "name": "getClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    }],
    "description": "Retrieves a session client value previously set with putClientData(). This method is used in a client script to retrieve data values that were set by a server script that used the putClientData() method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetClientData_String",
    "scope": "Scoped"
  },{
    "name": "getClientIP",
    "parameters": [],
    "description": "Returns the client IP address.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetClientIP",
    "scope": "Scoped"
  },{
    "name": "getCurrentApplicationId",
    "parameters": [],
    "description": "Returns the application currently selected in the application picker. This method requires admin privileges.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetCurrentApplicationId",
    "scope": "Scoped"
  },{
    "name": "getLanguage",
    "parameters": [],
    "description": "Returns the session's language code.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetLanguage",
    "scope": "Scoped"
  },{
    "name": "getSessionToken",
    "parameters": [],
    "description": "Returns the session token.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetSessionToken",
    "scope": "Scoped"
  },{
    "name": "getTimeZoneName",
    "parameters": [],
    "description": "Returns the name of the session's time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetTimeZoneName",
    "scope": "Scoped"
  },{
    "name": "getUrlOnStack",
    "parameters": [],
    "description": "Returns the URL on the stack. Returns null if the stack is empty.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionGetUrlOnStack",
    "scope": "Scoped"
  },{
    "name": "isImpersonating",
    "parameters": [],
    "description": "Returns true if the user is impersonating another user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGSSN-isImpersonating",
    "scope": "Scoped"
  },{
    "name": "isInteractive",
    "parameters": [],
    "description": "Returns true if the session is interactive. An interactive session is one that involves an end-user interacting with a user interface that then retrieves information from a server. An example of this type of session is when a user logs in using the log-in screen or uses a form to query a data store. A non-interactive session is one that only involves programmatic interaction with a server such as a SOAP request to retrieve data.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionIsInteractive",
    "scope": "Scoped"
  },{
    "name": "isLoggedIn",
    "parameters": [],
    "description": "Returns true if the user is logged in.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionIsLoggedIn",
    "scope": "Scoped"
  },{
    "name": "putClientData",
    "parameters": [{
      "name": "paramName",
      "values": []
    },{
      "name": "paramValue",
      "values": []
    }],
    "description": "Sets a session client value that can be retrieved with getClientData(). This method is used in a server side script that runs when a form is created.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideSessionPutClientData_String_String",
    "scope": "Scoped"
  }]
}, {
  "text": "duration",
  "functions": [{
    "name": "add",
    "parameters": [{
      "name": "duration",
      "values": []
    }],
    "description": "Add the specified duration to the object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationAdd_GlideDuration",
    "scope": "Scoped"
  },{
    "name": "getByFormat",
    "parameters": [{
      "name": "format",
      "values": []
    }],
    "description": "Gets the duration in the specified format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetByFormat_String",
    "scope": "Scoped"
  },{
    "name": "getDayPart",
    "parameters": [],
    "description": "Gets the number of days.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetDayPart",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the display value of the duration in number of days, hours, and minutes.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDurationValue",
    "parameters": [],
    "description": "Gets the duration value in \"d HH:mm:ss\" format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetDurationValue",
    "scope": "Scoped"
  },{
    "name": "getRoundedDayPart",
    "parameters": [],
    "description": "Gets the rounded number of days. If the time part is more than 12 hours, the return value is rounded up. Otherwise, it is rounded down.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetRoundedDayPart",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the internal value of the GlideDuration object. GlideDuration objects store the duration as a date and time from January 1, 1970, 00:00:00.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationGetValue",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets the display value.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationSetDisplayValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the internal value of the GlideDuration object. GlideDuration objects store the duration as a date and time from January 1, 1970, 00:00:00.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationSetValue_Object",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "duration",
      "values": []
    }],
    "description": "Subtracts the specified duration from the current duration.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDurationSubtract_GlideDuration",
    "scope": "Scoped"
  }]
}, {
  "text": "schedule",
  "functions": [{
    "name": "add",
    "parameters": [{
      "name": "startDate",
      "values": []
    },{
      "name": "offSet",
      "values": []
    }],
    "description": "Adds a new schedule segment to the current schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleAdd_GlideDateTime_GlideDuration",
    "scope": "Scoped"
  },{
    "name": "duration",
    "parameters": [{
      "name": "startDate",
      "values": []
    },{
      "name": "endDate",
      "values": []
    }],
    "description": "Determines the elapsed time in the schedule between two date time values using the timezone of the schedule or, if that is not specified, the timezone of the session.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleDuration_GlideDateTime_GlideDateTime",
    "scope": "Scoped"
  },{
    "name": "getName",
    "parameters": [],
    "description": "Retrieves the schedule name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleGetName",
    "scope": "Scoped"
  },{
    "name": "isInSchedule",
    "parameters": [{
      "name": "time",
      "values": []
    }],
    "description": "Determines if the given datetime is within the current schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleIsInSchedule_GlideDateTime",
    "scope": "Scoped"
  },{
    "name": "isValid",
    "parameters": [],
    "description": "Determines if the current schedule is valid. A schedule is valid if it has at least one schedule span.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleIsValid",
    "scope": "Scoped"
  },{
    "name": "load",
    "parameters": [{
      "name": "sysID",
      "values": []
    },{
      "name": "timeZone",
      "values": []
    },{
      "name": "excludeSpanID",
      "values": []
    }],
    "description": "Loads a schedule with the schedule information.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleLoad_String_String_String",
    "scope": "Scoped"
  },{
    "name": "setTimeZone",
    "parameters": [{
      "name": "timeZone",
      "values": []
    }],
    "description": "Sets the timezone for the current schedule.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleSetTimeZone_String",
    "scope": "Scoped"
  },{
    "name": "whenNext",
    "parameters": [{
      "name": "time",
      "values": []
    },{
      "name": "timeZone",
      "values": []
    }],
    "description": "Determines how much time (in milliseconds) until start time of the next schedule item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideScheduleWhenNext_GlideDateTime_String",
    "scope": "Scoped"
  }]
}, {
  "text": "gd",
  "functions": [{
    "name": "getByFormat",
    "parameters": [{
      "name": "format",
      "values": []
    }],
    "description": "Gets the date in the specified date format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetByFormat_String",
    "scope": "Scoped"
  },{
    "name": "getDayOfMonthNoTZ",
    "parameters": [],
    "description": "Gets the day of the month stored by the GlideDate object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGD_getDayOfMonthNoTZ",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the date in the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Gets the display value in the internal format (yyyy-MM-dd).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetDisplayValueInternal",
    "scope": "Scoped"
  },{
    "name": "getMonthNoTZ",
    "parameters": [],
    "description": "Gets the month stored by the GlideDate object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGD-getMonthNoTZ",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the date value stored in the database by the GlideDate object in the internal format, yyyy-MM-dd, and the system time zone, UTC by default.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateGetValue",
    "scope": "Scoped"
  },{
    "name": "getYearNoTZ",
    "parameters": [],
    "description": "Gets the year stored by the GlideDate object, expressed in the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGD-getYearNoTZ",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a date value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateSetDisplayValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the date of the GlideDate object.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateSetValue_String",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "start",
      "values": []
    },{
      "name": "end",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideDate values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideDateSubtract_GlideDate_GlideDate",
    "scope": "Scoped"
  }]
}, {
  "text": "gt",
  "functions": [{
    "name": "getByFormat",
    "parameters": [{
      "name": "format",
      "values": []
    }],
    "description": "Gets the time in the specified format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetByFormat_String",
    "scope": "Scoped"
  },{
    "name": "getDisplayValue",
    "parameters": [],
    "description": "Gets the time in the current user's display format and time zone. When designing business rules or script includes remember that this method may return values in different formats for different users.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetDisplayValue",
    "scope": "Scoped"
  },{
    "name": "getDisplayValueInternal",
    "parameters": [],
    "description": "Gets the display value in the current user's time zone and the internal format (HH:mm:ss).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetDisplayValueInternal",
    "scope": "Scoped"
  },{
    "name": "getHourLocalTime",
    "parameters": [],
    "description": "Returns the hours part of the time using the local time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getHourLocalTime",
    "scope": "Scoped"
  },{
    "name": "getHourOfDayLocalTime",
    "parameters": [],
    "description": "Returns the hours part of the time using the local time zone. The number of hours is based on a 24 hour clock.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getHourOfDayLocalTime",
    "scope": "Scoped"
  },{
    "name": "getHourOfDayUTC",
    "parameters": [],
    "description": "Returns the hours part of the time using the UTC time zone. The number of hours is based on a 24 hour clock.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getHourOfDayUTC",
    "scope": "Scoped"
  },{
    "name": "getHourUTC",
    "parameters": [],
    "description": "Returns the hours part of the time using the UTC time zone. The number of hours is based on a 12 hour clock. Noon and midnight are represented by 0, not 12.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_getHourUTC",
    "scope": "Scoped"
  },{
    "name": "getMinutesLocalTime",
    "parameters": [],
    "description": "Returns the number of minutes using the local time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getMinutesLocalTime",
    "scope": "Scoped"
  },{
    "name": "getMinutesUTC",
    "parameters": [],
    "description": "Returns the number of minutes in the hour based on the UTC time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getMinutesUTC",
    "scope": "Scoped"
  },{
    "name": "getSeconds",
    "parameters": [],
    "description": "Returns the number of seconds in the current minute.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_SGT-getSeconds",
    "scope": "Scoped"
  },{
    "name": "getValue",
    "parameters": [],
    "description": "Gets the time value stored in the database by the GlideTime object in the internal format, HH:mm:ss, and the system time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeGetValue",
    "scope": "Scoped"
  },{
    "name": "setDisplayValue",
    "parameters": [{
      "name": "asDisplayed",
      "values": []
    }],
    "description": "Sets a time value using the current user's display format and time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeSetDisplayValue_String",
    "scope": "Scoped"
  },{
    "name": "setValue",
    "parameters": [{
      "name": "o",
      "values": []
    }],
    "description": "Sets the time of the GlideTime object in the internal time zone.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeSetValue_String",
    "scope": "Scoped"
  },{
    "name": "subtract",
    "parameters": [{
      "name": "startTime",
      "values": []
    },{
      "name": "endTime",
      "values": []
    }],
    "description": "Gets the duration difference between two GlideTime object values.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_ScopedGlideTimeSubtract_GlideTime_GlideTime",
    "scope": "Scoped"
  }]
}, {
  "text": "ga",
  "functions": [{
    "name": "addParam",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Set a name-value pair to be sent to the processor.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-addParam_S_S",
    "scope": "Client"
  },{
    "name": "getJSON",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Call the processor asynchronously and get the answer element of the response in JSON format",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getJSON_F",
    "scope": "Client"
  },{
    "name": "getParam",
    "parameters": [{
      "name": "name",
      "values": []
    }],
    "description": "Returns the value of the specified parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getParam_S",
    "scope": "Client"
  },{
    "name": "getParams",
    "parameters": [],
    "description": "Returns the name-value pairs for the request.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getParams",
    "scope": "Client"
  },{
    "name": "getProcessor",
    "parameters": [],
    "description": "Returns the server-side script that the request is going to use. This returns the 'sysparm_processor' parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getProcessor",
    "scope": "Client"
  },{
    "name": "getURL",
    "parameters": [],
    "description": "Returns the target URL.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getURL",
    "scope": "Client"
  },{
    "name": "getXML",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Call the processor asynchronously and get the response in XML format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getXML_F",
    "scope": "Client"
  },{
    "name": "getXMLAnswer",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Call the processor asynchronously and get the answer element of the response in XML format.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-getXMLAnswer_F",
    "scope": "Client"
  },{
    "name": "setErrorCallback",
    "parameters": [{
      "name": "callback",
      "values": []
    }],
    "description": "Sets a callback function to be called if the Ajax request fails.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-setErrorCallback_F",
    "scope": "Client"
  },{
    "name": "setProcessor",
    "parameters": [{
      "name": "serverScript",
      "values": []
    }],
    "description": "Sets the request's server-side script. The server-side script is also called the processor. This sets the 'sysparm_processor' parameter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLAXV3-setProcessor_S",
    "scope": "Client"
  }]
},{
  "text": "gdw",
  "functions": [{
    "name": "adjustBodySize",
    "parameters": [],
    "description": "Adjusts the body height of a dialog window to be the window height minus the header height. You typically call this method after calling GlideDialogWindow - setSize().",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=GDW-adjustBodySize",
    "scope": "Client"
  },{
    "name": "destroy",
    "parameters": [],
    "description": "Closes the dialog window.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-destroy_",
    "scope": "Client"
  },{
    "name": "render",
    "parameters": [],
    "description": "Renders the dialog window.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-render",
    "scope": "Client"
  },{
    "name": "setPreference",
    "parameters": [{
      "name": "name",
      "values": []
    },{
      "name": "value",
      "values": []
    }],
    "description": "Sets a given window property to a specified value. Any window property can be set using this method.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-setPreference_S_S",
    "scope": "Client"
  },{
    "name": "setSize",
    "parameters": [{
      "name": "width",
      "values": []
    },{
      "name": "height",
      "values": []
    }],
    "description": "Sets the size of the dialog window. If you do not pass width and height parameters, a default size is used.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-setSize_N_N",
    "scope": "Client"
  },{
    "name": "setTitle",
    "parameters": [{
      "name": "title",
      "values": []
    }],
    "description": "Sets the title of the dialog window.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GDW-setTitle_S",
    "scope": "Client"
  }]
},{
  "text": "g_list",
  "functions": [{
    "name": "addFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Adds a single term to the list query filter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-addFilter_S",
    "scope": "Client / v2"
  },{
    "name": "get",
    "parameters": [{
      "name": "DOMelement",
      "values": []
    }],
    "description": "Returns the GlideList2 object for the list that contains the specified item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-get_O",
    "scope": "Client / v2"
  },{
    "name": "get",
    "parameters": [{
      "name": "ListID",
      "values": []
    }],
    "description": "Returns the GlideList2 object for the list specified.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-get_S",
    "scope": "Client / v2"
  },{
    "name": "getChecked",
    "parameters": [],
    "description": "Returns a comma-separated list of the sys_ids for the items that are checked in the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getChecked",
    "scope": "Client / v2"
  },{
    "name": "getFixedQuery",
    "parameters": [],
    "description": "Returns the sysparm_fixed query. A fixed query is the part of the query that cannot be removed from the breadcrumb (i.e., it is fixed for the user). It is specified by including a sysparm_fixed_query parameter for the application module.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getFixedQuery",
    "scope": "Client / v2"
  },{
    "name": "getGroupBy",
    "parameters": [],
    "description": "Returns the field or comma-separated list of fields that are used to group the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getGroupBy",
    "scope": "Client / v2"
  },{
    "name": "getListName",
    "parameters": [],
    "description": "Returns the name of the list, which is usually the table name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getListName",
    "scope": "Client / v2"
  },{
    "name": "getOrderBy",
    "parameters": [],
    "description": "Returns the first field used to order the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getOrderBy",
    "scope": "Client / v2"
  },{
    "name": "getParentTable",
    "parameters": [],
    "description": "Returns the name of the parent table for a related list (the table associated with the form).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getParentTable",
    "scope": "Client / v2"
  },{
    "name": "getQuery",
    "parameters": [{
      "name": "orderBy",
      "values": []
    },{
      "name": "groupBy",
      "values": []
    },{
      "name": "fixed",
      "values": []
    },{
      "name": "all",
      "values": []
    }],
    "description": "Returns the encoded query string for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getQuery_B_B_B_B",
    "scope": "Client / v2"
  },{
    "name": "getRelated",
    "parameters": [],
    "description": "Returns the related list field that associates the related list to the parent form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getRelated",
    "scope": "Client / v2"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Returns the table name for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getTableName",
    "scope": "Client / v2"
  },{
    "name": "getTitle",
    "parameters": [],
    "description": "Returns the list title.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getTitle",
    "scope": "Client / v2"
  },{
    "name": "getView",
    "parameters": [],
    "description": "Returns the view used to display the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-getView",
    "scope": "Client / v2"
  },{
    "name": "isUserList",
    "parameters": [],
    "description": "Returns true if the list has been personalized by the user by choosing the list mechanic and changing the list layout.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-isUserList",
    "scope": "Client / v2"
  },{
    "name": "refresh",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "additionalParms",
      "values": []
    }],
    "description": "Refreshes the list. The orderBy part of the list filter is ignored so that the list uses its natural ordering when it is refreshed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-refresh_N_S",
    "scope": "Client / v2"
  },{
    "name": "refreshWithOrderBy",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "description",
      "values": []
    }],
    "description": "Refreshes the list. The orderBy part of the list filter is included if it is specified for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-refreshWithOrderBy_N_S",
    "scope": "Client / v2"
  },{
    "name": "setFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Sets the encoded query string for the list, ignoring the orderBy and groupBy parts of the query string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setFilter_S",
    "scope": "Client / v2"
  },{
    "name": "setFilterAndRefresh",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Sets the encoded query string for the list, including the orderBy and groupBy if specified, and then refreshes the list using the new filter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setFilterAndRefresh_S",
    "scope": "Client / v2"
  },{
    "name": "setFirstRow",
    "parameters": [{
      "name": "rowNum",
      "values": []
    }],
    "description": "Sets the first row that appears in the list when the list is refreshed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setFirstRow_N",
    "scope": "Client / v2"
  },{
    "name": "setGroupBy",
    "parameters": [{
      "name": "groupBy",
      "values": []
    }],
    "description": "Sets the groupBy criteria for the list, for a single field or multiple fields. For a single field, use field or groupByField. The groupBy prefix is optional. For multiple fields, use field1^field2^field3 or groupByField1^groupByField2^groupByField3.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setGroupBy_S",
    "scope": "Client / v2"
  },{
    "name": "setOrderBy",
    "parameters": [{
      "name": "orderBy",
      "values": []
    }],
    "description": "Sets the orderBy criteria for the list. For a single order by field use orderBy field or orderByDescField. For multiple fields, use orderByField1^orderByField2^orderByField3. orderBy specifies ascending order and orderByDesc specifies descending. These prefix strings are optional. If not specified orderBy is assumed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setOrderBy_S",
    "scope": "Client / v2"
  },{
    "name": "setRowsPerPage",
    "parameters": [{
      "name": "rows",
      "values": []
    }],
    "description": "Sets the number of rows per page to display.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-setRowsPerPage_N",
    "scope": "Client / v2"
  },{
    "name": "showHideGroups",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Shows or hides all the groups within the list and saves the current collapsed/expanded state of the groups as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-showHideGroups_B",
    "scope": "Client / v2"
  },{
    "name": "showHideList",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Displays or hides the list and saves the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-showHideList_B",
    "scope": "Client / v2"
  },{
    "name": "sort",
    "parameters": [{
      "name": "field",
      "values": []
    }],
    "description": "Sorts the list in ascending order and saves the choice.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-sort_S",
    "scope": "Client / v2"
  },{
    "name": "sortDescending",
    "parameters": [{
      "name": "field",
      "values": []
    },{
      "name": "amount",
      "values": []
    }],
    "description": "Sorts the list in descending order and saves the choice.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-sortDescending_S_N",
    "scope": "Client / v2"
  },{
    "name": "toggleList",
    "parameters": [],
    "description": "Toggles the display of the list and saves the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-toggleList",
    "scope": "Client / v2"
  },{
    "name": "toggleListNoPref",
    "parameters": [],
    "description": "Toggles the display of the list but does not save the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GL2-toggleListNoPref",
    "scope": "Client / v2"
  },{
    "name": "addFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Adds a single term to the list query filter.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-addFilter_S",
    "scope": "Client / v3"
  },{
    "name": "get",
    "parameters": [{
      "name": "DomElement",
      "values": []
    }],
    "description": "Returns the GlideList object for the specified DOM element.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-get_O",
    "scope": "Client / v3"
  },{
    "name": "get",
    "parameters": [{
      "name": "listId",
      "values": []
    }],
    "description": "Returns the GlideList object for specified list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-get_S",
    "scope": "Client / v3"
  },{
    "name": "getChecked",
    "parameters": [],
    "description": "Returns a comma-separated list of sys_ids for checked items in the list. Does not return items that are not allowed to be executed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getChecked",
    "scope": "Client / v3"
  },{
    "name": "getFixedQuery",
    "parameters": [],
    "description": "Returns the sysparm_fixed query. The fixed query is the part of the query that cannot be removed from the breadcrumb (i.e., it is fixed for the user). It is specified by including a sysparm_fixed_query parameter for the application module.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getFixedQuery",
    "scope": "Client / v3"
  },{
    "name": "getFormTarget",
    "parameters": [],
    "description": "Returns the form's target attribute.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getFormTarget",
    "scope": "Client / v3"
  },{
    "name": "getGroupBy",
    "parameters": [],
    "description": "Returns the field or comma-separated list of fields that are used to group the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getGroupBy",
    "scope": "Client / v3"
  },{
    "name": "getListName",
    "parameters": [],
    "description": "Returns the name of the list, which is usually the table name.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getListName",
    "scope": "Client / v3"
  },{
    "name": "getOrderBy",
    "parameters": [],
    "description": "Returns the first field used to order the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getOrderBy",
    "scope": "Client / v3"
  },{
    "name": "getParentTable",
    "parameters": [],
    "description": "Returns the name of the parent table (the table associated with the form).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getParentTable",
    "scope": "Client / v3"
  },{
    "name": "getQuery",
    "parameters": [{
      "name": "options",
      "values": []
    }],
    "description": "Returns the encoded query string for the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getQuery_O",
    "scope": "Client / v3"
  },{
    "name": "getReferringUrl",
    "parameters": [],
    "description": "Returns the referring URL.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getReferringUrl",
    "scope": "Client / v3"
  },{
    "name": "getRelated",
    "parameters": [],
    "description": "Returns the related list field that associates the related list to the parent form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRelated",
    "scope": "Client / v3"
  },{
    "name": "getRelatedListType",
    "parameters": [],
    "description": "Returns the related list type.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRelatedListType",
    "scope": "Client / v3"
  },{
    "name": "getRelationshipId",
    "parameters": [],
    "description": "Returns the relationship record id, if this is type REL related list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRelationshipId",
    "scope": "Client / v3"
  },{
    "name": "getRowCount",
    "parameters": [],
    "description": "Returns the number of rows returned by the query.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRowCount",
    "scope": "Client / v3"
  },{
    "name": "getRowsPerPage",
    "parameters": [],
    "description": "Returns the number of rows to be displayed on a page.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getRowsPerPage",
    "scope": "Client / v3"
  },{
    "name": "getTableName",
    "parameters": [],
    "description": "Returns the table name of the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getTableName",
    "scope": "Client / v3"
  },{
    "name": "getTitle",
    "parameters": [],
    "description": "Returns the list title.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getTitle",
    "scope": "Client / v3"
  },{
    "name": "getView",
    "parameters": [],
    "description": "Returns the view used to display the list.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-getView",
    "scope": "Client / v3"
  },{
    "name": "isUserList",
    "parameters": [],
    "description": "Returns true if the list has been personalized by the user.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-isUserList",
    "scope": "Client / v3"
  },{
    "name": "refresh",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "additionalParams",
      "values": []
    }],
    "description": "Refreshes the list. The orderBy part of the list filter is ignored so that the list's natural ordering is used.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-refresh_N_O",
    "scope": "Client / v3"
  },{
    "name": "refreshWithOrderBy",
    "parameters": [{
      "name": "firstRow",
      "values": []
    },{
      "name": "additionalParams",
      "values": []
    }],
    "description": "Refreshes the list using the orderBy fields.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-refreshWithOrderBy_N_O",
    "scope": "Client / v3"
  },{
    "name": "setFilter",
    "parameters": [{
      "name": "filter",
      "values": []
    },{
      "name": "saveOrderBy",
      "values": []
    },{
      "name": "saveGroupBy",
      "values": []
    }],
    "description": "Sets the encoded query string for the list ignoring the orderBy and groupBy parts of the query string.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFilter_S_B_B",
    "scope": "Client / v3"
  },{
    "name": "setFilterAndRefresh",
    "parameters": [{
      "name": "filter",
      "values": []
    }],
    "description": "Sets the encoded query string for the list, and then refreshes the list using the new filter. This preserves the groupby and orderby parameters.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFilterAndRefresh_S",
    "scope": "Client / v3"
  },{
    "name": "setFirstRow",
    "parameters": [{
      "name": "firstRow",
      "values": []
    }],
    "description": "Sets the first row to be displayed when the list is refreshed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFirstRow_N",
    "scope": "Client / v3"
  },{
    "name": "setFormTarget",
    "parameters": [{
      "name": "target",
      "values": []
    }],
    "description": "Specifies where to display the response from the form.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setFormTarget_S",
    "scope": "Client / v3"
  },{
    "name": "setGroupBy",
    "parameters": [{
      "name": "groupBy",
      "values": []
    }],
    "description": "Sets the groupBy criteria for the list, for a single field or multiple fields. For a single field, use field or groupByField. The groupBy prefix is optional. For multiple fields use field1^field2^field3 or groupByField1^groupByField2^groupByField3.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setGroupBy_S",
    "scope": "Client / v3"
  },{
    "name": "setOrderBy",
    "parameters": [{
      "name": "orderBy",
      "values": []
    }],
    "description": "Sets the orderBy criteria for the list. For a single order by field use orderBy field or orderByDescField. For multiple fields, use orderByField1^orderByField2^orderByField3. orderBy specifies ascending order and orderByDesc specifies descending. These prefix strings are optional. If not specified orderBy is assumed.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setOrderBy_S",
    "scope": "Client / v3"
  },{
    "name": "setReferringUrl",
    "parameters": [{
      "name": "url",
      "values": []
    }],
    "description": "Sets the parent form referring url.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setReferringUrl_S",
    "scope": "Client / v3"
  },{
    "name": "setRowsPerPage",
    "parameters": [{
      "name": "numRows",
      "values": []
    }],
    "description": "Set the number of rows to display on a page.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-setRowsPerPage_N",
    "scope": "Client / v3"
  },{
    "name": "showHideGroups",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Displays or hides all of the groups within the list and saves the current collapsed/expanded state of the groups as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-showHideGroups_B",
    "scope": "Client / v3"
  },{
    "name": "showHideList",
    "parameters": [{
      "name": "showFlag",
      "values": []
    }],
    "description": "Displays or hides the list and saves the current collapsed/expanded state of the list as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-showHideList_B",
    "scope": "Client / v3"
  },{
    "name": "sort",
    "parameters": [{
      "name": "field",
      "values": []
    }],
    "description": "Sort the list in ascending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-sort_S",
    "scope": "Client / v3"
  },{
    "name": "sortDescending",
    "parameters": [{
      "name": "field",
      "values": []
    }],
    "description": "Sorts the list in descending order.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-sortDescending_S",
    "scope": "Client / v3"
  },{
    "name": "toggleList",
    "parameters": [],
    "description": "Toggles the list display between collapsed and expanded, and saves the state as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-toggleList",
    "scope": "Client / v3"
  },{
    "name": "toggleListNoPref",
    "parameters": [],
    "description": "Toggles the list display between collapsed and expanded, but does not save the state as a user preference.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GLV3-toggleListNoPref",
    "scope": "Client / v3"
  }]
},{
  "text": "g_menu",
  "functions": [{
    "name": "clearImage",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Clears the image for an item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-clearImage_GMI",
    "scope": "Client"
  },{
    "name": "clearSelected",
    "parameters": [],
    "description": "Clears any selection images from items in the menu.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-clearSelected",
    "scope": "Client"
  },{
    "name": "getItem",
    "parameters": [{
      "name": "itemID",
      "values": []
    }],
    "description": "Returns a menu item by item ID. It can be necessary to find an item in a menu so that it can be changed before being displayed. Each menu item may be assigned a unique ID when the menu item is created (either from a UI Context Menu entry or from the addAction() method in the Dynamic Script Action).",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-getItem_S",
    "scope": "Client"
  },{
    "name": "setDisabled",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Disables a menu item so that it cannot be selected. The disabled menu item is displayed in a lighter color (grayed out) to indicate it is disabled.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setDisabled_GMI",
    "scope": "Client"
  },{
    "name": "setEnabled",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Enables the specified menu item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setEnabled_GMI",
    "scope": "Client"
  },{
    "name": "setHidden",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Hides the specified menu item. When hiding menu items, the separator bars are not adjusted, so it is possible to end up with the menu showing two separators in a row.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setHidden_GMI",
    "scope": "Client"
  },{
    "name": "setImage",
    "parameters": [{
      "name": "item",
      "values": []
    },{
      "name": "imgSrc",
      "values": []
    }],
    "description": "Sets an image for an item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setImage_GMI_S",
    "scope": "Client"
  },{
    "name": "setLabel",
    "parameters": [{
      "name": "item",
      "values": []
    },{
      "name": "label",
      "values": []
    }],
    "description": "Sets the display label for a menu item. The label may contain HTML.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setLabel_GMI_S",
    "scope": "Client"
  },{
    "name": "setVisible",
    "parameters": [{
      "name": "item",
      "values": []
    }],
    "description": "Displays the specified item.",
    "url": "https://developer.servicenow.com/app.do#!/api_doc?v=newyork&id=r_GM-setVisible_GMI",
    "scope": "Client"
  }]
}]
